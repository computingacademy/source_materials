{
  "description":"Control a turtle and draw amazing pictures with code. In this challenge you'll learn the fundamentals of programming by using instructions to position a turtle on the screen. You'll draw lines, patterns and shapes in the same way computers draw images on the screen.\nEverything - from games to web browsers to apps like Netflix - that generates images on the screen, - it all starts with code!",
  "title":"DT Challenge Blockly \u2013 Turtle",
  "modules":[
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  You probably noticed that you repeated yourself a lot in turtle programs.  Using loops makes turtle much less repetitive!\n<\/p>\n\n<p>Drawing a square the long way:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-drawing-shapes-with-loops-0\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"turtle_forward\" x=\"10\" y=\"10\" inline=\"true\" movable=\"false\">\n    <value name=\"DISTANCE\">\n      <block id=\"2\" type=\"math_number\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block id=\"3\" type=\"turtle_turn\" inline=\"true\">\n        <field name=\"DIRECTION\">RIGHT<\/field>\n        <value name=\"ANGLE\">\n          <block id=\"4\" type=\"math_number\">\n            <field name=\"NUM\">90<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block id=\"5\" type=\"turtle_forward\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block id=\"7\" type=\"turtle_turn\" inline=\"true\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <value name=\"ANGLE\">\n                  <block id=\"8\" type=\"math_number\">\n                    <field name=\"NUM\">90<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block id=\"9\" type=\"turtle_forward\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block id=\"10\" type=\"math_number\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block id=\"11\" type=\"turtle_turn\" inline=\"true\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <value name=\"ANGLE\">\n                          <block id=\"12\" type=\"math_number\">\n                            <field name=\"NUM\">90<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block id=\"13\" type=\"turtle_forward\" inline=\"true\">\n                            <value name=\"DISTANCE\">\n                              <block id=\"14\" type=\"math_number\">\n                                <field name=\"NUM\">50<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block id=\"15\" type=\"turtle_turn\" inline=\"true\">\n                                <field name=\"DIRECTION\">RIGHT<\/field>\n                                <value name=\"ANGLE\">\n                                  <block id=\"16\" type=\"math_number\">\n                                    <field name=\"NUM\">90<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>If we used a loop, then we wouldn't have to repeat same two blocks over and over again.<\/p>\n\n<p>Here's a much shorter way of drawing a square, using loops:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-drawing-shapes-with-loops-1\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"loops_repeat_ext\" x=\"15\" y=\"15\" inline=\"true\" movable=\"false\">\n    <value name=\"TIMES\">\n      <block id=\"2\" type=\"math_number\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block id=\"3\" type=\"turtle_forward\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block id=\"4\" type=\"math_number\">\n            <field name=\"NUM\">50<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block id=\"5\" type=\"turtle_turn\" inline=\"true\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <value name=\"ANGLE\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">90<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Drawing shapes with loops",
              "content_rendered":"<p>\n  You probably noticed that you repeated yourself a lot in turtle programs.  Using loops makes turtle much less repetitive!\n<\/p>\n\n<p>Drawing a square the long way:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-drawing-shapes-with-loops-0\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"turtle_forward\" x=\"10\" y=\"10\" inline=\"true\" movable=\"false\">\n    <value name=\"DISTANCE\">\n      <block id=\"2\" type=\"math_number\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block id=\"3\" type=\"turtle_turn\" inline=\"true\">\n        <field name=\"DIRECTION\">RIGHT<\/field>\n        <value name=\"ANGLE\">\n          <block id=\"4\" type=\"math_number\">\n            <field name=\"NUM\">90<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block id=\"5\" type=\"turtle_forward\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block id=\"7\" type=\"turtle_turn\" inline=\"true\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <value name=\"ANGLE\">\n                  <block id=\"8\" type=\"math_number\">\n                    <field name=\"NUM\">90<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block id=\"9\" type=\"turtle_forward\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block id=\"10\" type=\"math_number\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block id=\"11\" type=\"turtle_turn\" inline=\"true\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <value name=\"ANGLE\">\n                          <block id=\"12\" type=\"math_number\">\n                            <field name=\"NUM\">90<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block id=\"13\" type=\"turtle_forward\" inline=\"true\">\n                            <value name=\"DISTANCE\">\n                              <block id=\"14\" type=\"math_number\">\n                                <field name=\"NUM\">50<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block id=\"15\" type=\"turtle_turn\" inline=\"true\">\n                                <field name=\"DIRECTION\">RIGHT<\/field>\n                                <value name=\"ANGLE\">\n                                  <block id=\"16\" type=\"math_number\">\n                                    <field name=\"NUM\">90<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>If we used a loop, then we wouldn't have to repeat same two blocks over and over again.<\/p>\n\n<p>Here's a much shorter way of drawing a square, using loops:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-drawing-shapes-with-loops-1\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"loops_repeat_ext\" x=\"15\" y=\"15\" inline=\"true\" movable=\"false\">\n    <value name=\"TIMES\">\n      <block id=\"2\" type=\"math_number\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block id=\"3\" type=\"turtle_forward\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block id=\"4\" type=\"math_number\">\n            <field name=\"NUM\">50<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block id=\"5\" type=\"turtle_turn\" inline=\"true\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <value name=\"ANGLE\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">90<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Problem: Simpler Square!",
              "purpose":"",
              "problem":"bk-logo-square-right-simple-repeat",
              "type":1,
              "problem_id":4073
            }
          ],
          "title":"Loops with the turtle"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>We can use loops like the <bk class=\"control\">repeat<\/bk> block to make some great patterns!<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-drawing-patterns-with-loops-1\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"xPLJmxcHJ6D}KaU4%\/5M\" x=\"0\" y=\"0\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"zEYzyaX1,)Ws_bC8+#ZU\">\n        <field name=\"NUM\">6<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"RQ{=cnoDF3J8^8$P4b.6\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"t#[EM+J*Xl1(pLWU5s:L\">\n            <field name=\"NUM\">50<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"[h=oueAs_B(GeTZ)Skb\/\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"XDOHbq*wJ20vX[fp_}da\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"wnM0|@gL_Xv]]=Jb6Z8@\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"EsiI|Af0@W{lGz)2$PXD\">\n                    <field name=\"NUM\">50<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"#n_]JB}88@:S]zyG|zy.\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"mtWoUj[8*yvyE5,6$.wy\">\n                        <field name=\"NUM\">120<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"?f;6}};4.cfZ@KBzsQl.\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"u%[XX6;4y,C0#yFqVy#g\">\n                            <field name=\"NUM\">50<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn\" id=\"^Ua!Qi!!dvXd%}05ngp$\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <value name=\"ANGLE\">\n                              <block type=\"math_number\" id=\"YFNvkHOcb.3!8WA~raQ?\">\n                                <field name=\"NUM\">120<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn\" id=\".~nLIvRN9Z^G~H!W9IJx\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <value name=\"ANGLE\">\n                                  <block type=\"math_number\" id=\"~WJ\/Px|:d!7ggq`{Xu@+\">\n                                    <field name=\"NUM\">60<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Repeat Block",
              "content_rendered":"<p>We can use loops like the <bk class=\"control\">repeat<\/bk> block to make some great patterns!<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-drawing-patterns-with-loops-1\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"xPLJmxcHJ6D}KaU4%\/5M\" x=\"0\" y=\"0\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"zEYzyaX1,)Ws_bC8+#ZU\">\n        <field name=\"NUM\">6<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"RQ{=cnoDF3J8^8$P4b.6\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"t#[EM+J*Xl1(pLWU5s:L\">\n            <field name=\"NUM\">50<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"[h=oueAs_B(GeTZ)Skb\/\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"XDOHbq*wJ20vX[fp_}da\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"wnM0|@gL_Xv]]=Jb6Z8@\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"EsiI|Af0@W{lGz)2$PXD\">\n                    <field name=\"NUM\">50<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"#n_]JB}88@:S]zyG|zy.\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"mtWoUj[8*yvyE5,6$.wy\">\n                        <field name=\"NUM\">120<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"?f;6}};4.cfZ@KBzsQl.\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"u%[XX6;4y,C0#yFqVy#g\">\n                            <field name=\"NUM\">50<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn\" id=\"^Ua!Qi!!dvXd%}05ngp$\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <value name=\"ANGLE\">\n                              <block type=\"math_number\" id=\"YFNvkHOcb.3!8WA~raQ?\">\n                                <field name=\"NUM\">120<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn\" id=\".~nLIvRN9Z^G~H!W9IJx\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <value name=\"ANGLE\">\n                                  <block type=\"math_number\" id=\"~WJ\/Px|:d!7ggq`{Xu@+\">\n                                    <field name=\"NUM\">60<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Terrace Houses",
              "purpose":"",
              "problem":"aca-blockly-logo-houses-in-a-row-repeat",
              "type":1,
              "problem_id":4075
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Staircase",
              "purpose":"",
              "problem":"aca-blockly-logo-staircase-simple",
              "type":1,
              "problem_id":4069
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>When we use a loop block, it repeats everything inside of it. Let's say we wanted to draw 6 squares. We could try something like this:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"loop-inside-a-loop-eg1\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"d]oh8_ot*%eK*esqsD_=\" x=\"15\" y=\"5\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"URn,I0=GOMWUrK2oH[b+\">\n        <field name=\"NUM\">6<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"?f;6}};4.cfZ@KBzsQl.\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"u%[XX6;4y,C0#yFqVy#g\">\n            <field name=\"NUM\">20<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"mZKZ,KH:_Id@X=@1,Fdz\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"L2dBeIz3`H_k1N-wfOEV\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"RBk_,dz*g-?Bi4COiDW5\">\n                    <field name=\"NUM\">20<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"4Z-6~*KWt_q~@wWS|3)Q\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"y-FRmSwF^NKiHEdFBUlo\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"XJw3aSx7:l[\/\/q5X;B0|\">\n                            <field name=\"NUM\">20<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"8UC:OWf3}qU|%D*0(suQ\">\n                            <field name=\"DIRECTION\">RIGHT<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\",v%sOI9=frUd(n,O+Vp|\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"hbQiy#i3]DX0bvCs8scR\">\n                                    <field name=\"NUM\">20<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"v9B3W9YeU2MFRiHo=0n*\">\n                                    <field name=\"DIRECTION\">RIGHT<\/field>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>Six squares are drawn, but <strong>on top of each other<\/strong>! To draw more squares, we'll need to add in an extra <strong>move forward<\/strong> step.<\/p>"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Squares on squares on squares",
              "content_rendered":"<p>When we use a loop block, it repeats everything inside of it. Let's say we wanted to draw 6 squares. We could try something like this:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"loop-inside-a-loop-eg1\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"d]oh8_ot*%eK*esqsD_=\" x=\"15\" y=\"5\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"URn,I0=GOMWUrK2oH[b+\">\n        <field name=\"NUM\">6<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"?f;6}};4.cfZ@KBzsQl.\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"u%[XX6;4y,C0#yFqVy#g\">\n            <field name=\"NUM\">20<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"mZKZ,KH:_Id@X=@1,Fdz\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"L2dBeIz3`H_k1N-wfOEV\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"RBk_,dz*g-?Bi4COiDW5\">\n                    <field name=\"NUM\">20<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"4Z-6~*KWt_q~@wWS|3)Q\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"y-FRmSwF^NKiHEdFBUlo\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"XJw3aSx7:l[\/\/q5X;B0|\">\n                            <field name=\"NUM\">20<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"8UC:OWf3}qU|%D*0(suQ\">\n                            <field name=\"DIRECTION\">RIGHT<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\",v%sOI9=frUd(n,O+Vp|\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"hbQiy#i3]DX0bvCs8scR\">\n                                    <field name=\"NUM\">20<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"v9B3W9YeU2MFRiHo=0n*\">\n                                    <field name=\"DIRECTION\">RIGHT<\/field>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>Six squares are drawn, but <strong>on top of each other<\/strong>! To draw more squares, we'll need to add in an extra <strong>move forward<\/strong> step.<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Here, we've added an extra <strong>move forward<\/strong> step at the end of the instructions, so that each time the square is drawn in a new position, pointing the right way.<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"loop-inside-a-loop-eg2\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_turn_simple\" id=\"58.c_.N=Js{SHFZKz0s|\" x=\"-191\" y=\"14\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <next>\n      <block type=\"loops_repeat_ext\" id=\"d]oh8_ot*%eK*esqsD_=\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"URn,I0=GOMWUrK2oH[b+\">\n            <field name=\"NUM\">6<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"?f;6}};4.cfZ@KBzsQl.\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"u%[XX6;4y,C0#yFqVy#g\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"mZKZ,KH:_Id@X=@1,Fdz\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"L2dBeIz3`H_k1N-wfOEV\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"RBk_,dz*g-?Bi4COiDW5\">\n                        <field name=\"NUM\">20<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"4Z-6~*KWt_q~@wWS|3)Q\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"y-FRmSwF^NKiHEdFBUlo\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"XJw3aSx7:l[\/\/q5X;B0|\">\n                                <field name=\"NUM\">20<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn_simple\" id=\"8UC:OWf3}qU|%D*0(suQ\">\n                                <field name=\"DIRECTION\">RIGHT<\/field>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\",v%sOI9=frUd(n,O+Vp|\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\"hbQiy#i3]DX0bvCs8scR\">\n                                        <field name=\"NUM\">20<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_turn_simple\" id=\"v9B3W9YeU2MFRiHo=0n*\">\n                                        <field name=\"DIRECTION\">RIGHT<\/field>\n                                        <next>\n                                          <block type=\"turtle_forward\" id=\"|9ArRsbWI|kEWWMiR)O)\">\n                                            <value name=\"DISTANCE\">\n                                              <block type=\"math_number\" id=\"fu-.GMSb)lATc[-JBBop\">\n                                                <field name=\"NUM\">20<\/field>\n                                              <\/block>\n                                            <\/value>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Moving between loops",
              "content_rendered":"<p>Here, we've added an extra <strong>move forward<\/strong> step at the end of the instructions, so that each time the square is drawn in a new position, pointing the right way.<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"loop-inside-a-loop-eg2\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_turn_simple\" id=\"58.c_.N=Js{SHFZKz0s|\" x=\"-191\" y=\"14\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <next>\n      <block type=\"loops_repeat_ext\" id=\"d]oh8_ot*%eK*esqsD_=\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"URn,I0=GOMWUrK2oH[b+\">\n            <field name=\"NUM\">6<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"?f;6}};4.cfZ@KBzsQl.\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"u%[XX6;4y,C0#yFqVy#g\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"mZKZ,KH:_Id@X=@1,Fdz\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"L2dBeIz3`H_k1N-wfOEV\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"RBk_,dz*g-?Bi4COiDW5\">\n                        <field name=\"NUM\">20<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"4Z-6~*KWt_q~@wWS|3)Q\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"y-FRmSwF^NKiHEdFBUlo\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"XJw3aSx7:l[\/\/q5X;B0|\">\n                                <field name=\"NUM\">20<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn_simple\" id=\"8UC:OWf3}qU|%D*0(suQ\">\n                                <field name=\"DIRECTION\">RIGHT<\/field>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\",v%sOI9=frUd(n,O+Vp|\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\"hbQiy#i3]DX0bvCs8scR\">\n                                        <field name=\"NUM\">20<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_turn_simple\" id=\"v9B3W9YeU2MFRiHo=0n*\">\n                                        <field name=\"DIRECTION\">RIGHT<\/field>\n                                        <next>\n                                          <block type=\"turtle_forward\" id=\"|9ArRsbWI|kEWWMiR)O)\">\n                                            <value name=\"DISTANCE\">\n                                              <block type=\"math_number\" id=\"fu-.GMSb)lATc[-JBBop\">\n                                                <field name=\"NUM\">20<\/field>\n                                              <\/block>\n                                            <\/value>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Blocks in a Row",
              "purpose":"",
              "problem":"aca-blockly-logo-square-block-row",
              "type":1,
              "problem_id":4074
            }
          ],
          "title":"Loops and Movement"
        }
      ],
      "title":"Looping with the Turtle",
      "label":"aca-blockly-turtle-yr56-looping",
      "updated_at":"2018-05-14T06:56:06.579346+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  When drawing our square, we did the exact same thing 4 times: draw a line, and turn right. \n<!--<ul>\n<li>draw a line<\/li>\n<li>turn right<\/li>\n<\/ul>-->\n\nBut if we made a typo and one side was longer than the others, it wouldn't make a square!<\/p>\n<!--\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-variable-typo\"><code data-lang=\"blockly\">\n  <xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_forward\" id=\"8=rU)FE^qe0sw$9HsY`F\" x=\"0\" y=\"0\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"C1[XFlo$Bef=_bo+[Lp3\">\n        <field name=\"NUM\">60<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn_simple\" id=\"xtwX0==9R^x3WNZ\/}u;(\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"h+?+0Iv\/]ZRC*5\/Y?A`l\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"Mcy7][A`hEr+fsw,AeQ}\">\n                <field name=\"NUM\">60<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"0V:otMZ4+ly_^D+.P*vp\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"Nm\/#+ioYQKvqGD}ssBWW\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"Lr?w$`H\/(FJz`Tnqp7sG\">\n                        <field name=\"NUM\">40<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"qzmJzeYxf`25n!bklJI8\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"IEQ68Q%AJsEDWz1aQlu.\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"E0;r8Bj^nJ?+2,C]=UGz\">\n                                <field name=\"NUM\">60<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n-->\n\n<p>We need a <strong>better way to remember and reuse<\/strong> things like the side length.<\/p>\n\n\n<p>\n  We can use a <em>variable<\/em>!  Each variable has a <em>name<\/em> which we use to set and get our value:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-variable-intro\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"math_number\" id=\"4\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"5\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"6\">\n            <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"8\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"9\">\n                <value name=\"DISTANCE\">\n                  <block type=\"variables_get\" id=\"10\">\n                    <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blocky>\n<\/code><\/pre>\n\n<p>\n  The <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block creates a new variable called <code data-lang=\"py3\">line_length<\/code>. It holds the value <bk class=\"math\"><bk class=\"inner\">100<\/bk><\/bk>.\n  We can then use the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> block to use that number as often as we want.\n<\/p>\n\n<p>\n  Change the number in the <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block to different values, and you'll see that all of the lines in the drawing change to that value, and you only have to make one change to your code!\n<\/p>\n\n"
                }
              ],
              "layout":0,
              "notes_rendered":"<p>\n  Variables are <em>extremely<\/em> powerful.  <strong>Variables allow the program to store information and retrieve it for future use.<\/strong>  Any substantial program will use many variables.\n<\/p>\n\n<p>\n  Variables help avoid duplicate code, by saving repeatedly used values.\n  <strong>They also make the code easier to understand.<\/strong>  Well-chosen variable names help explain what the program is doing and why.\n<\/p>\n\n<p>\n  Blockly creates a variable called <bk class=\"var\"><bk class=\"inner\">item<\/bk><\/bk> by default:\n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Blockly's default variable\" src=\"https:\/\/groklearning-cdn.com\/modules\/8tr95KARX7utt2SvYKwwYF\/blockly-default-variable.png\" width=\"300px\">\n<\/figure>\n\n<p>\n  After you drag the <bk class=\"var\">set <bk class=\"inner\">item<\/bk><\/bk> onto the workspace, you can click on the variable name to rename <code class=\"txt\">item<\/code> to something else, e.g. <code data-lang=\"py3\">line<\/code>: \n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Rename a variable\" src=\"https:\/\/groklearning-cdn.com\/modules\/4ax6CRAP4d8RV2ED26c2zT\/blockly-rename-var.png\" width=\"300px\">\n<\/figure>\n\n<p>\n  Now the <strong>Variables<\/strong> menu will show a set block <bk class=\"var\">set <bk class=\"inner\">line<\/bk><\/bk> and get block <bk class=\"var\"><bk class=\"inner\">line<\/bk><\/bk> for your new variable.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    AC:DT does not explicitly mention variables. However, variables are central to any collecting, storing, and processing of data (and responding to user input) in a program.\n  <\/p>\n  <p>\n   Spreadsheet cells and database columns also act as variables.  This includes Years 3\u20134 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP009\" target=\"_blank\">ACTDIP009<\/a> and 5\u20136 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP016\" target=\"_blank\">ACTDIP016<\/a>.\n  <\/p>\n  <p>\n    Years 7\u20138 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP026\" target=\"_blank\">ACTDIP026<\/a> and 9\u201310 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP037\" target=\"_blank\">ACTDIP037<\/a> include structured data, which we cover in the other Challenge streams.\n  <\/p>\n<\/aside>\n",
              "notes":[
                {
                  "left":"<p>\n  Variables are <em>extremely<\/em> powerful.  <strong>Variables allow the program to store information and retrieve it for future use.<\/strong>  Any substantial program will use many variables.\n<\/p>\n\n<p>\n  Variables help avoid duplicate code, by saving repeatedly used values.\n  <strong>They also make the code easier to understand.<\/strong>  Well-chosen variable names help explain what the program is doing and why.\n<\/p>\n\n<p>\n  Blockly creates a variable called <bk class=\"var\"><bk class=\"inner\">item<\/bk><\/bk> by default:\n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Blockly's default variable\" src=\"https:\/\/groklearning-cdn.com\/modules\/8tr95KARX7utt2SvYKwwYF\/blockly-default-variable.png\" width=\"300px\">\n<\/figure>\n\n<p>\n  After you drag the <bk class=\"var\">set <bk class=\"inner\">item<\/bk><\/bk> onto the workspace, you can click on the variable name to rename <code class=\"txt\">item<\/code> to something else, e.g. <code data-lang=\"py3\">line<\/code>: \n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Rename a variable\" src=\"https:\/\/groklearning-cdn.com\/modules\/4ax6CRAP4d8RV2ED26c2zT\/blockly-rename-var.png\" width=\"300px\">\n<\/figure>\n\n<p>\n  Now the <strong>Variables<\/strong> menu will show a set block <bk class=\"var\">set <bk class=\"inner\">line<\/bk><\/bk> and get block <bk class=\"var\"><bk class=\"inner\">line<\/bk><\/bk> for your new variable.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    AC:DT does not explicitly mention variables. However, variables are central to any collecting, storing, and processing of data (and responding to user input) in a program.\n  <\/p>\n  <p>\n   Spreadsheet cells and database columns also act as variables.  This includes Years 3\u20134 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP009\" target=\"_blank\">ACTDIP009<\/a> and 5\u20136 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP016\" target=\"_blank\">ACTDIP016<\/a>.\n  <\/p>\n  <p>\n    Years 7\u20138 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP026\" target=\"_blank\">ACTDIP026<\/a> and 9\u201310 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP037\" target=\"_blank\">ACTDIP037<\/a> include structured data, which we cover in the other Challenge streams.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "title":"Remembering things",
              "content_rendered":"<p>\n  When drawing our square, we did the exact same thing 4 times: draw a line, and turn right. \n<!--<ul>\n<li>draw a line<\/li>\n<li>turn right<\/li>\n<\/ul>-->\n\nBut if we made a typo and one side was longer than the others, it wouldn't make a square!<\/p>\n<!--\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-variable-typo\"><code data-lang=\"blockly\">\n  <xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_forward\" id=\"8=rU)FE^qe0sw$9HsY`F\" x=\"0\" y=\"0\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"C1[XFlo$Bef=_bo+[Lp3\">\n        <field name=\"NUM\">60<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn_simple\" id=\"xtwX0==9R^x3WNZ\/}u;(\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"h+?+0Iv\/]ZRC*5\/Y?A`l\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"Mcy7][A`hEr+fsw,AeQ}\">\n                <field name=\"NUM\">60<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"0V:otMZ4+ly_^D+.P*vp\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"Nm\/#+ioYQKvqGD}ssBWW\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"Lr?w$`H\/(FJz`Tnqp7sG\">\n                        <field name=\"NUM\">40<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"qzmJzeYxf`25n!bklJI8\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"IEQ68Q%AJsEDWz1aQlu.\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"E0;r8Bj^nJ?+2,C]=UGz\">\n                                <field name=\"NUM\">60<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n-->\n\n<p>We need a <strong>better way to remember and reuse<\/strong> things like the side length.<\/p>\n\n\n<p>\n  We can use a <em>variable<\/em>!  Each variable has a <em>name<\/em> which we use to set and get our value:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-variable-intro\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"math_number\" id=\"4\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"5\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"6\">\n            <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"8\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"9\">\n                <value name=\"DISTANCE\">\n                  <block type=\"variables_get\" id=\"10\">\n                    <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blocky>\n<\/code><\/pre>\n\n<p>\n  The <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block creates a new variable called <code data-lang=\"py3\">line_length<\/code>. It holds the value <bk class=\"math\"><bk class=\"inner\">100<\/bk><\/bk>.\n  We can then use the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> block to use that number as often as we want.\n<\/p>\n\n<p>\n  Change the number in the <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block to different values, and you'll see that all of the lines in the drawing change to that value, and you only have to make one change to your code!\n<\/p>\n\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<aside class=\"info\">\n  <h2>Creating a variable<\/h2>\n  <p>\n    To create a new variable, click the down arrow next to the variable name and select <strong>New Variable...<\/strong>\n  <\/p>\n<\/aside>\n\n  <figure class=\"align-center\">\n  <img alt=\"Gif of using the variable and input blocks\" src=\"https:\/\/groklearning-cdn.com\/modules\/pe2Esr6Ek7iRzguo4CV9WZ\/set_variable_short.gif\">\n  \n<\/figure>"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Using variables in Blockly",
              "content_rendered":"<aside class=\"info\">\n  <h2>Creating a variable<\/h2>\n  <p>\n    To create a new variable, click the down arrow next to the variable name and select <strong>New Variable...<\/strong>\n  <\/p>\n<\/aside>\n\n  <figure class=\"align-center\">\n  <img alt=\"Gif of using the variable and input blocks\" src=\"https:\/\/groklearning-cdn.com\/modules\/pe2Esr6Ek7iRzguo4CV9WZ\/set_variable_short.gif\">\n  \n<\/figure>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Variables save you from having to type the same values out a lot of times, but they also give us a way to store information that the user might give the program. Let's write a program that lets the user decide how long the line should be:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-input-length\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What length line?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"6\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Run this program. Even if you haven't run any so far, run this one!\n<\/p>\n\n<p>\n  <strong>You will need to type a number and press <kbd>Enter<\/kbd><\/strong>:\n<\/p>\n\n<p>\n  The <bk class=\"math\">ask<\/bk> block needs a question <bk class=\"str\">string<\/bk> to <em>ask the user<\/em>. It returns the user's answer to our program as a number. Our program stores the answer in the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> variable so we can use it to draw later. You will find the <bk class=\"math\">ask<\/bk> block in the input menu.\n<\/p>\n\n<p>\n  <strong>Run it again with a different number. You should also try changing the wording of the question.<\/strong>\n<\/p>"
                }
              ],
              "layout":0,
              "notes_rendered":"<p>\n  <strong>Students really (really!) need to run this slide's example!<\/strong> It is worth running it on a big screen so everyone sees it at least once.\n<\/p>\n\n<p>\n  It is their first <em>interactive<\/em> program \u2013\u00a0i.e. it responds to their input.\n<\/p>\n\n<p>\n  When the program runs, it waits for the user to answer:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>What length line? <\/o>\n<\/code><\/pre>\n\n<p>\n  It won't keep going until the user enters a number and presses <kbd>Enter<\/kbd>.\n<\/p>\n\n<p>\n  The number that the user enters is <em>returned<\/em> by the <bk class=\"math\">ask<\/bk> block. The <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block stores that number in the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> variable.  Finally, the <bk class=\"lib\">move forward<\/bk> block then moves the turtle the specified length.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    Text and numbers are two important types of user input.\n  <\/p>\n  <p>\n    AC:DT requires students to write programs involving <em>user input<\/em> from Years 3\u20134 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP011\" target=\"_blank\">ACTDIP011<\/a> and 5\u20136 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP020\" target=\"_blank\">ACTDIP020<\/a>.\n    Students must <em>predict output for a given input<\/em> in Years 7\u20138 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP029\" target=\"_blank\">ACTDIP029<\/a>.\n  <\/p>\n<\/aside>\n",
              "notes":[
                {
                  "left":"<p>\n  <strong>Students really (really!) need to run this slide's example!<\/strong> It is worth running it on a big screen so everyone sees it at least once.\n<\/p>\n\n<p>\n  It is their first <em>interactive<\/em> program \u2013\u00a0i.e. it responds to their input.\n<\/p>\n\n<p>\n  When the program runs, it waits for the user to answer:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>What length line? <\/o>\n<\/code><\/pre>\n\n<p>\n  It won't keep going until the user enters a number and presses <kbd>Enter<\/kbd>.\n<\/p>\n\n<p>\n  The number that the user enters is <em>returned<\/em> by the <bk class=\"math\">ask<\/bk> block. The <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block stores that number in the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> variable.  Finally, the <bk class=\"lib\">move forward<\/bk> block then moves the turtle the specified length.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    Text and numbers are two important types of user input.\n  <\/p>\n  <p>\n    AC:DT requires students to write programs involving <em>user input<\/em> from Years 3\u20134 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP011\" target=\"_blank\">ACTDIP011<\/a> and 5\u20136 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP020\" target=\"_blank\">ACTDIP020<\/a>.\n    Students must <em>predict output for a given input<\/em> in Years 7\u20138 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP029\" target=\"_blank\">ACTDIP029<\/a>.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "title":"Asking the user for information",
              "content_rendered":"<p>\n  Variables save you from having to type the same values out a lot of times, but they also give us a way to store information that the user might give the program. Let's write a program that lets the user decide how long the line should be:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-input-length\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What length line?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"6\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Run this program. Even if you haven't run any so far, run this one!\n<\/p>\n\n<p>\n  <strong>You will need to type a number and press <kbd>Enter<\/kbd><\/strong>:\n<\/p>\n\n<p>\n  The <bk class=\"math\">ask<\/bk> block needs a question <bk class=\"str\">string<\/bk> to <em>ask the user<\/em>. It returns the user's answer to our program as a number. Our program stores the answer in the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> variable so we can use it to draw later. You will find the <bk class=\"math\">ask<\/bk> block in the input menu.\n<\/p>\n\n<p>\n  <strong>Run it again with a different number. You should also try changing the wording of the question.<\/strong>\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  The computer uses words and numbers in different ways. This means we need a way to differentiate between them, and to declare whether we are using a string like <bk class=\"str lit\"><bk class=\"inner\">what length?<\/bk><\/bk> or a number like <bk class=\"math\"><bk class=\"inner\">10<\/bk><\/bk>. We call these <strong>data types<\/strong>.\n<\/p>\n\n<p>\n  Blockly uses colour to show the data type: the <bk class=\"str\">green<\/bk> blocks are strings and the <bk class=\"math\">blue<\/bk> blocks are numbers.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-types\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What length line?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"6\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  We write a question in words, so we need to use a <bk class=\"str\">green<\/bk> string block for our question.\n<\/p>\n\n<p>\n  If we expect the user to type in a number, then we need to make sure that our <bk class=\"math\">ask<\/bk> block is blue, since we'll be using the user's answer as a number.\n<\/p>\n\n<p>\n  Since moving the turtle around means specifying distances, we need to use the <bk class=\"math\">blue<\/bk> blocks in our <bk class=\"lib\">move forward<\/bk> blocks.\n<\/p>\n\n<p>\n  Variable blocks are special - they are <bk class=\"var\">grey<\/bk> because they take on the colour of the value last assigned to them - in this case, the blue of the <bk class=\"math\">ask<\/bk> block.\n<\/p>\n"
                }
              ],
              "layout":0,
              "notes_rendered":"<p>\n  <strong>Values behave according to their type, not their contents.<\/strong>\n<\/p>\n\n<p>\n  By <em>behave<\/em> we really mean, what operations can you do on the value? and how do they work?\n<\/p>\n\n<p>\n  It doesn't make sense to move <bk class=\"str lit\"><bk class=\"inner\">cat<\/bk><\/bk> distance, since we have no way of knowing what that means. But there is a subtle difference between <bk class=\"str lit\"><bk class=\"inner\">5<\/bk><\/bk> and <bk class=\"math\"><bk class=\"inner\">5<\/bk><\/bk>. The former is the text character \"5\", whereas the latter is the value 5, and can be used for numerical operations.\n<\/p>\n\n<p>\n  In this course, students will only be capturing numbers from the user, so they'll only have access to an ask block that stores the user's data as a number. However, it is important that they recognise that numbers and strings are different, and that this is important for their program to operate properly.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    Students must <em>recognise different types of data<\/em> from Year 3-4 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIK008\" target=\"_blank\">ACTDIK008<\/a>. They have now seen both strings and numbers.\n  <\/p>\n  <p>\n    Students should explore many data types (in coding and elsewhere), but these are the absolute minimum requirement.\n  <\/p>\n<\/aside>\n",
              "notes":[
                {
                  "left":"<p>\n  <strong>Values behave according to their type, not their contents.<\/strong>\n<\/p>\n\n<p>\n  By <em>behave<\/em> we really mean, what operations can you do on the value? and how do they work?\n<\/p>\n\n<p>\n  It doesn't make sense to move <bk class=\"str lit\"><bk class=\"inner\">cat<\/bk><\/bk> distance, since we have no way of knowing what that means. But there is a subtle difference between <bk class=\"str lit\"><bk class=\"inner\">5<\/bk><\/bk> and <bk class=\"math\"><bk class=\"inner\">5<\/bk><\/bk>. The former is the text character \"5\", whereas the latter is the value 5, and can be used for numerical operations.\n<\/p>\n\n<p>\n  In this course, students will only be capturing numbers from the user, so they'll only have access to an ask block that stores the user's data as a number. However, it is important that they recognise that numbers and strings are different, and that this is important for their program to operate properly.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    Students must <em>recognise different types of data<\/em> from Year 3-4 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIK008\" target=\"_blank\">ACTDIK008<\/a>. They have now seen both strings and numbers.\n  <\/p>\n  <p>\n    Students should explore many data types (in coding and elsewhere), but these are the absolute minimum requirement.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "title":"Different types of data",
              "content_rendered":"<p>\n  The computer uses words and numbers in different ways. This means we need a way to differentiate between them, and to declare whether we are using a string like <bk class=\"str lit\"><bk class=\"inner\">what length?<\/bk><\/bk> or a number like <bk class=\"math\"><bk class=\"inner\">10<\/bk><\/bk>. We call these <strong>data types<\/strong>.\n<\/p>\n\n<p>\n  Blockly uses colour to show the data type: the <bk class=\"str\">green<\/bk> blocks are strings and the <bk class=\"math\">blue<\/bk> blocks are numbers.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-types\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What length line?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"6\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"1\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  We write a question in words, so we need to use a <bk class=\"str\">green<\/bk> string block for our question.\n<\/p>\n\n<p>\n  If we expect the user to type in a number, then we need to make sure that our <bk class=\"math\">ask<\/bk> block is blue, since we'll be using the user's answer as a number.\n<\/p>\n\n<p>\n  Since moving the turtle around means specifying distances, we need to use the <bk class=\"math\">blue<\/bk> blocks in our <bk class=\"lib\">move forward<\/bk> blocks.\n<\/p>\n\n<p>\n  Variable blocks are special - they are <bk class=\"var\">grey<\/bk> because they take on the colour of the value last assigned to them - in this case, the blue of the <bk class=\"math\">ask<\/bk> block.\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Turtles would be boring if they drew the same shape every time.\n<\/p>\n\n<p>\n  Now that we can ask the user for input, let's ask them how high our top hat should be:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-input-bump\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">hat_height<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"1\" variabletype=\"\">hat_height<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What height should the hat be?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"2\">\n            <field name=\"NUM\">30<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"3\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"6\">\n                <value name=\"DISTANCE\">\n                  <block type=\"variables_get\" id=\"7\">\n                    <field name=\"VAR\" id=\"1\" variabletype=\"\">hat_height<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"6\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"7\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"8\">\n                            <field name=\"NUM\">30<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"9\">\n                            <field name=\"DIRECTION\">RIGHT<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"6\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"variables_get\" id=\"7\">\n                                    <field name=\"VAR\" id=\"1\" variabletype=\"\">hat_height<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"12\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"13\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"14\">\n                                            <field name=\"NUM\">30<\/field>\n                                          <\/block>\n                                        <\/value>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try running this again and enter different heights!<\/p>"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Custom shapes",
              "content_rendered":"<p>\n  Turtles would be boring if they drew the same shape every time.\n<\/p>\n\n<p>\n  Now that we can ask the user for input, let's ask them how high our top hat should be:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-input-bump\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">hat_height<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"1\" variabletype=\"\">hat_height<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What height should the hat be?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"2\">\n            <field name=\"NUM\">30<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"3\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"6\">\n                <value name=\"DISTANCE\">\n                  <block type=\"variables_get\" id=\"7\">\n                    <field name=\"VAR\" id=\"1\" variabletype=\"\">hat_height<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"6\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"7\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"8\">\n                            <field name=\"NUM\">30<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"9\">\n                            <field name=\"DIRECTION\">RIGHT<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"6\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"variables_get\" id=\"7\">\n                                    <field name=\"VAR\" id=\"1\" variabletype=\"\">hat_height<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"12\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"13\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"14\">\n                                            <field name=\"NUM\">30<\/field>\n                                          <\/block>\n                                        <\/value>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try running this again and enter different heights!<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Any square",
              "purpose":"",
              "problem":"aca-blockly-logo-any-square-purple",
              "type":1,
              "problem_id":4087
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Any rectangle",
              "purpose":"",
              "problem":"aca-blockly-logo-any-coloured-cards",
              "type":1,
              "problem_id":4090
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Step up",
              "purpose":"",
              "problem":"aca-blockly-logo-step-up-how-many-steps",
              "type":1,
              "problem_id":4095
            }
          ],
          "title":"Variables and input"
        }
      ],
      "title":"Asking Questions",
      "label":"aca-blockly-turtle-yr56-turtle-input",
      "updated_at":"2018-05-14T06:56:05.678823+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n Let's add some colour using the <bk class=\"lib\">set pen color<\/bk> block:\n<\/p>\n\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-pen-colors-equilateral2\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_pencolor_dropdown\" id=\"f{*EQS?|J;@Z%%H#VV,d\" x=\"0\" y=\"0\">\n    <field name=\"COLOR\">blue<\/field>\n    <next>\n      <block type=\"turtle_forward\" id=\"bAiEU%G7Uy4cd0.a)@58\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\")+0K.W+O5)e*|qn+$tK*\">\n            <field name=\"NUM\">60<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"ZDg\/6p45x.N]RRn~qIBk\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"!?Aqtj}13y{Ei.)hOuK-\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_pencolor_dropdown\" id=\"@,b5(_Z(w:DAlomx+qHE\">\n                <field name=\"COLOR\">hotpink<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"mdy{z{;t7j?Vcq+|:RmI\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"AgI`{D|cFa~6Ko6(M!`I\">\n                        <field name=\"NUM\">60<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"bri+,ZJY9k1KZ$QIkBp]\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"math_number\" id=\"wV)G1$ORa]i:-F3rRp8[\">\n                            <field name=\"NUM\">120<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_pencolor_dropdown\" id=\";Foa-x8Jk.QrMrboJ[O,\">\n                            <field name=\"COLOR\">darkgreen<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"Ms;9yz?S)MaQ5+-\/KN$f\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"k%%6oz(Md2eEly9v,BV$\">\n                                    <field name=\"NUM\">60<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Most code uses <em>color<\/em> (American spelling)!<\/h2>\n  <p>\n    Most programs and modules (like <code data-lang=\"py3\">turtle<\/code>) will spell colour with the American spelling (c-o-l-o-r, no u) \u2013\u00a0so watch out!\n  <\/p>\n<\/aside>\n\n\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Now with colour!",
              "content_rendered":"<p>\n Let's add some colour using the <bk class=\"lib\">set pen color<\/bk> block:\n<\/p>\n\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-pen-colors-equilateral2\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_pencolor_dropdown\" id=\"f{*EQS?|J;@Z%%H#VV,d\" x=\"0\" y=\"0\">\n    <field name=\"COLOR\">blue<\/field>\n    <next>\n      <block type=\"turtle_forward\" id=\"bAiEU%G7Uy4cd0.a)@58\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\")+0K.W+O5)e*|qn+$tK*\">\n            <field name=\"NUM\">60<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"ZDg\/6p45x.N]RRn~qIBk\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"!?Aqtj}13y{Ei.)hOuK-\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_pencolor_dropdown\" id=\"@,b5(_Z(w:DAlomx+qHE\">\n                <field name=\"COLOR\">hotpink<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"mdy{z{;t7j?Vcq+|:RmI\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"AgI`{D|cFa~6Ko6(M!`I\">\n                        <field name=\"NUM\">60<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"bri+,ZJY9k1KZ$QIkBp]\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"math_number\" id=\"wV)G1$ORa]i:-F3rRp8[\">\n                            <field name=\"NUM\">120<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_pencolor_dropdown\" id=\";Foa-x8Jk.QrMrboJ[O,\">\n                            <field name=\"COLOR\">darkgreen<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"Ms;9yz?S)MaQ5+-\/KN$f\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"k%%6oz(Md2eEly9v,BV$\">\n                                    <field name=\"NUM\">60<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Most code uses <em>color<\/em> (American spelling)!<\/h2>\n  <p>\n    Most programs and modules (like <code data-lang=\"py3\">turtle<\/code>) will spell colour with the American spelling (c-o-l-o-r, no u) \u2013\u00a0so watch out!\n  <\/p>\n<\/aside>\n\n\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  There are lots of ways to set a colour.  We're going to use a drop down list of some of the colours to start with.  You can see the whole list of colour names that Turtle understands <a href=\"http:\/\/wiki.tcl.tk\/37701\" target=\"_blank\">here<\/a>.\n<\/p>\n\n\n<p>We'll get to see a lot more colours very soon. You can try all of the ones we have in the list by changing the <bk class=\"lib\">darkgreen<\/bk> below to a different colour. \n<\/p>\n\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-pen-colors-example\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_pencolor_dropdown\" id=\"SeWw,hy@O~d:$3i*Ky.m\" x=\"13\" y=\"10\">\n    <field name=\"COLOR\">darkgreen<\/field>\n    <next>\n      <block type=\"turtle_forward\" id=\"NDk5}aa^rE(:RpfX[M|j\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"bZAc2+0HR-BMaqlFkP*|\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Some of the colours of the rainbow!",
              "content_rendered":"<p>\n  There are lots of ways to set a colour.  We're going to use a drop down list of some of the colours to start with.  You can see the whole list of colour names that Turtle understands <a href=\"http:\/\/wiki.tcl.tk\/37701\" target=\"_blank\">here<\/a>.\n<\/p>\n\n\n<p>We'll get to see a lot more colours very soon. You can try all of the ones we have in the list by changing the <bk class=\"lib\">darkgreen<\/bk> below to a different colour. \n<\/p>\n\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-pen-colors-example\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_pencolor_dropdown\" id=\"SeWw,hy@O~d:$3i*Ky.m\" x=\"13\" y=\"10\">\n    <field name=\"COLOR\">darkgreen<\/field>\n    <next>\n      <block type=\"turtle_forward\" id=\"NDk5}aa^rE(:RpfX[M|j\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"bZAc2+0HR-BMaqlFkP*|\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question",
              "purpose":"",
              "problem":"aca-blockly-logo-square-right-simple-skyblue",
              "type":1,
              "problem_id":4079
            }
          ],
          "title":"Turtle colours"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"#markdown\n\nThose lines are looking nice and colourful, but they're a bit thin! We can change how thick the pen is using the <bk class=\"lib\">set pen size<\/bk> block.\n<\/p>\n\n<p>\n  The default pen width we have used so far is 1.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-pensize-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"12\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"13\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"14\" inline=\"true\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"15\">\n            <field name=\"NUM\">90<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pensize\" id=\"10\" inline=\"true\">\n            <value name=\"SIZE\">\n              <block type=\"math_number\" id=\"11\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"26\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"27\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try it out with different sizes!<\/p>\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Drawing thicker lines",
              "content_rendered":"<p>Those lines are looking nice and colourful, but they're a bit thin! We can change how thick the pen is using the <bk class=\"lib\">set pen size<\/bk> block.<\/p>\n<\/p>\n<p>\n  The default pen width we have used so far is 1.\n<\/p>\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-pensize-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"12\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"13\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"14\" inline=\"true\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"15\">\n            <field name=\"NUM\">90<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pensize\" id=\"10\" inline=\"true\">\n            <value name=\"SIZE\">\n              <block type=\"math_number\" id=\"11\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"26\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"27\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n<p>Try it out with different sizes!<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question",
              "purpose":"",
              "problem":"aca-blockly-logo-solid-thick-house",
              "type":1,
              "problem_id":4080
            }
          ],
          "title":"Turtle lines"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>The <bk class=\"lib\">fill with color<\/bk> block can be used to fill in a shape with colour.<\/p>\n\n<p>\n Any shapes which you draw inside of <bk class=\"lib\">fill<\/bk> block will be filled with the colour you choose (at the end of drawing the shape).\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-fill-with-color-egn\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_fill_dropdown\" id=\"26\" x=\"10\" y=\"10\">\n    <field name=\"COLOR\">red<\/field>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"37\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"38\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"63\" inline=\"true\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"64\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"49\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"50\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"65\" inline=\"true\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"66\">\n                        <field name=\"NUM\">120<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"51\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"52\">\n                            <field name=\"NUM\">100<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn\" id=\"67\" inline=\"true\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <value name=\"ANGLE\">\n                              <block type=\"math_number\" id=\"68\">\n                                <field name=\"NUM\">120<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try guessing what this program will draw before running the example! Then try changing the fill colour!<\/p>"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Filling with colour",
              "content_rendered":"<p>The <bk class=\"lib\">fill with color<\/bk> block can be used to fill in a shape with colour.<\/p>\n\n<p>\n Any shapes which you draw inside of <bk class=\"lib\">fill<\/bk> block will be filled with the colour you choose (at the end of drawing the shape).\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-fill-with-color-egn\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_fill_dropdown\" id=\"26\" x=\"10\" y=\"10\">\n    <field name=\"COLOR\">red<\/field>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"37\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"38\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"63\" inline=\"true\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"64\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"49\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"50\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"65\" inline=\"true\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"66\">\n                        <field name=\"NUM\">120<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"51\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"52\">\n                            <field name=\"NUM\">100<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn\" id=\"67\" inline=\"true\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <value name=\"ANGLE\">\n                              <block type=\"math_number\" id=\"68\">\n                                <field name=\"NUM\">120<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try guessing what this program will draw before running the example! Then try changing the fill colour!<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  We've already seen how drawing shapes is easier with loops, let's draw some shapes with both loops and fills!\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-fills-and-loops-eg\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_fill_dropdown\" id=\"17\" x=\"10\" y=\"10\">\n    <field name=\"COLOR\">orange<\/field>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"34\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"35\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"58\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"59\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn\" id=\"70\" inline=\"true\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <value name=\"ANGLE\">\n                  <block type=\"math_number\" id=\"71\">\n                    <field name=\"NUM\">90<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/statement>\n    <next>\n      <block type=\"turtle_turn\" id=\"82\" inline=\"true\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"83\">\n            <field name=\"NUM\">180<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_fill_dropdown\" id=\"84\">\n            <field name=\"COLOR\">skyblue<\/field>\n            <statement name=\"DO\">\n              <block type=\"loops_repeat_ext\" id=\"85\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_number\" id=\"86\">\n                    <field name=\"NUM\">4<\/field>\n                  <\/block>\n                <\/value>\n                <statement name=\"DO\">\n                  <block type=\"turtle_forward\" id=\"87\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"88\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"89\" inline=\"true\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"math_number\" id=\"90\">\n                            <field name=\"NUM\">90<\/field>\n                          <\/block>\n                        <\/value>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/statement>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>If we tried to put the fill <em>inside<\/em> the loop, then it would try to separately fill each side of the shape, which wouldn't work!<\/p>"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Fills and loops",
              "content_rendered":"<p>\n  We've already seen how drawing shapes is easier with loops, let's draw some shapes with both loops and fills!\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-fills-and-loops-eg\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_fill_dropdown\" id=\"17\" x=\"10\" y=\"10\">\n    <field name=\"COLOR\">orange<\/field>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"34\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"35\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"58\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"59\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn\" id=\"70\" inline=\"true\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <value name=\"ANGLE\">\n                  <block type=\"math_number\" id=\"71\">\n                    <field name=\"NUM\">90<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/statement>\n    <next>\n      <block type=\"turtle_turn\" id=\"82\" inline=\"true\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"83\">\n            <field name=\"NUM\">180<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_fill_dropdown\" id=\"84\">\n            <field name=\"COLOR\">skyblue<\/field>\n            <statement name=\"DO\">\n              <block type=\"loops_repeat_ext\" id=\"85\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_number\" id=\"86\">\n                    <field name=\"NUM\">4<\/field>\n                  <\/block>\n                <\/value>\n                <statement name=\"DO\">\n                  <block type=\"turtle_forward\" id=\"87\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"88\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"89\" inline=\"true\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"math_number\" id=\"90\">\n                            <field name=\"NUM\">90<\/field>\n                          <\/block>\n                        <\/value>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/statement>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>If we tried to put the fill <em>inside<\/em> the loop, then it would try to separately fill each side of the shape, which wouldn't work!<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"#markdown\n\nJust like the <bk class=\"lib\">pencolor<\/bk> block, there's another <bk class=\"lib\">fill with color<\/bk> block which uses the name of the colour.\n\n\n```eg:fills-with-colour-names-dropdown;lang:blockly;\n\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_fill_dropdown\" id=\"rZ+EP}a;]^hhy4;yVjcn\" x=\"10\" y=\"10\">\n    <field name=\"COLOR\">skyblue<\/field>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"_9-xVmcLewT$;J_4_,4e\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"OY`8Mg4f|J,\/O6@o4{hY\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"loops_repeat_ext\" id=\"!6+N0(N~GZicbBh)PC7g\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\" id=\"NE[1wqgJk.lAf,{[MiK!\">\n                <field name=\"NUM\">4<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block type=\"turtle_forward\" id=\"?Q^?JI`8Z+~krZ]6z,\/*\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"zPr*Fi;r_:fMn)+S2;|3\">\n                    <field name=\"NUM\">50<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"y%r(j,tx\/5~m1|A)NeE$\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"|FPUL#pbAtIvN{,=eWFM\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n```\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Choosing the fill colour",
              "content_rendered":"<p>Just like the <bk class=\"lib\">pencolor<\/bk> block, there's another <bk class=\"lib\">fill with color<\/bk> block which uses the name of the colour.<\/p>\n<pre style=\"\" class=\"js-editor-blockly\" data-eg-id=\"fills-with-colour-names-dropdown\"><code data-workspace-lang=\"py3\" data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_fill_dropdown\" id=\"rZ+EP}a;]^hhy4;yVjcn\" x=\"10\" y=\"10\">\n    <field name=\"COLOR\">skyblue<\/field>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"_9-xVmcLewT$;J_4_,4e\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"OY`8Mg4f|J,\/O6@o4{hY\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"loops_repeat_ext\" id=\"!6+N0(N~GZicbBh)PC7g\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\" id=\"NE[1wqgJk.lAf,{[MiK!\">\n                <field name=\"NUM\">4<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block type=\"turtle_forward\" id=\"?Q^?JI`8Z+~krZ]6z,\/*\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"zPr*Fi;r_:fMn)+S2;|3\">\n                    <field name=\"NUM\">50<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"y%r(j,tx\/5~m1|A)NeE$\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"|FPUL#pbAtIvN{,=eWFM\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Papel Picado!",
              "purpose":"",
              "problem":"aca-blockly-logo-square-pennant-flags",
              "type":1,
              "problem_id":4081
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"#markdown\n\nWe don't just have to use our list of colours we can use **ALL** the colours. To do this we need to talk to the turtle with something called a **string**.\n\nA **string** is just text. It is a group of letters or numbers put in a meaningful order, like a word, sentence or car number plate.\n\nComputers don't understand **red** or **purple**, or any other human language. To a computer, they are just a string of letters.\n\nThe green string block can contain any letters, numbers, punctuation and spaces that you want to use in a message. We're going to use letters to tell the turtle which colour we want. \n\nFor example, the square below is filled with the colour **plum**. Try changing it to another colour by changing the name inside the green block.\n\n```eg:fills-with-colour-string;lang:blockly;\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"ce]BG_6\/zgxq%m0A1li^\">colour<\/variable>\n  <\/variables>\n  <block type=\"turtle_fill_text\" id=\"9`@gV$GM%ZV~93Qytv9.\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"C0jk+K*754W51p:foA8j\">\n        <field name=\"TEXT\">plum<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"xlt,]Bq)=DocKwAMAH~v\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"u}DDf(_ZOP;F]#%AQ]fk\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"JrM8B$DsV4BvY3m1*-O0\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"3n}4b)u}+v(Lbg-4iK*F\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\";:z)0s!8G*^9ci=RxNiU\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n```\n   \nThe individual letters, digits, symbols and spaces are called characters and the word string is short for string of characters.\n\nThere are a huge number of colours that have names we can use. Here are some of our favourites:\n\n<table class=\"table table-hover table-bordered\" style=\"font-size: 14px\">\n  <tbody>\n    <tr><td style=\"background-color: red; color: white\">red<\/td><td style=\"background-color: orangered; color: white\">orangered<\/td><td style=\"background-color: tomato; color: white\">tomato<\/td><td style=\"background-color: coral; color: white\">coral<\/td><td style=\"background-color: salmon; color: white\">salmon<\/td><\/tr>\n    <tr><td style=\"background-color: darkorange; color: white\">darkorange<\/td><td style=\"background-color: orange; color: white\">orange<\/td><td style=\"background-color: goldenrod; color: white\">goldenrod<\/td><td style=\"background-color: gold; color: black\">gold<\/td><td style=\"background-color: yellow; color: black\">yellow<\/td><\/tr>\n    <tr><td style=\"background-color: darkgreen; color: white\">darkgreen<\/td><td style=\"background-color: forestgreen; color: white\">forestgreen<\/td><td style=\"background-color: springgreen; color: black\">springgreen<\/td><td style=\"background-color: lawngreen; color: black\">lawngreen<\/td><td style=\"background-color: #00ff00; color: black\">green<\/td><\/tr>\n    <tr><td style=\"background-color: navy; color: white\">navy<\/td><td style=\"background-color: mediumblue; color: white\">mediumblue<\/td><td style=\"background-color: royalblue; color: white\">royalblue<\/td><td style=\"background-color: cornflowerblue; color: white\">cornflowerblue<\/td><td style=\"background-color: skyblue; color: black\">skyblue<\/td><\/tr>\n    <tr><td style=\"background-color: darkviolet; color: white\">darkviolet<\/td><td style=\"background-color: purple; color: white\">purple<\/td><td style=\"background-color: orchid; color: white\">orchid<\/td><td style=\"background-color: violet; color: white\">violet<\/td><td style=\"background-color: plum; color: black\">plum<\/td><\/tr>    \n    <tr><td style=\"background-color: deeppink; color: white\">deeppink<\/td><td style=\"background-color: hotpink; color: white\">hotpink<\/td><td style=\"background-color: pink; color: black\">pink<\/td><td style=\"background-color: lightpink; color: black\">lightpink<\/td><td style=\"background-color: mistyrose; color: black\">mistyrose<\/td><\/tr>\n    <tr><td style=\"background-color: brown; color: white\">brown<\/td><td style=\"background-color: saddlebrown; color: white\">saddlebrown<\/td><td style=\"background-color: chocolate; color: white\">chocolate<\/td><td style=\"background-color: tan; color: black\">tan<\/td><td style=\"background-color: wheat; color: black\">wheat<\/td><\/tr>\n    <tr><td style=\"background-color: black; color: white\">black<\/td><td style=\"background-color: slategrey; color: white\">slategrey<\/td><td style=\"background-color: dimgray; color: white\">dimgray<\/td><td style=\"background-color: lightgray; color: black\">lightgray<\/td><td style=\"background-color: white; color: black\">white<\/td><\/tr>    \n  <\/tbody>\n<\/table>"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"All the colours of the rainbow!",
              "content_rendered":"<p>We don't just have to use our list of colours we can use <strong>ALL<\/strong> the colours. To do this we need to talk to the turtle with something called a <strong>string<\/strong>.<\/p>\n<p>A <strong>string<\/strong> is just text. It is a group of letters or numbers put in a meaningful order, like a word, sentence or car number plate.<\/p>\n<p>Computers don't understand <strong>red<\/strong> or <strong>purple<\/strong>, or any other human language. To a computer, they are just a string of letters.<\/p>\n<p>The green string block can contain any letters, numbers, punctuation and spaces that you want to use in a message. We're going to use letters to tell the turtle which colour we want.<\/p>\n<p>For example, the square below is filled with the colour <strong>plum<\/strong>. Try changing it to another colour by changing the name inside the green block.<\/p>\n<pre style=\"\" class=\"js-editor-blockly\" data-eg-id=\"fills-with-colour-string\"><code data-workspace-lang=\"py3\" data-lang=\"blockly\"><xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"ce]BG_6\/zgxq%m0A1li^\">colour<\/variable>\n  <\/variables>\n  <block type=\"turtle_fill_text\" id=\"9`@gV$GM%ZV~93Qytv9.\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"C0jk+K*754W51p:foA8j\">\n        <field name=\"TEXT\">plum<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"xlt,]Bq)=DocKwAMAH~v\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"u}DDf(_ZOP;F]#%AQ]fk\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"JrM8B$DsV4BvY3m1*-O0\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"3n}4b)u}+v(Lbg-4iK*F\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\";:z)0s!8G*^9ci=RxNiU\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n<p>The individual letters, digits, symbols and spaces are called characters and the word string is short for string of characters.<\/p>\n<p>There are a huge number of colours that have names we can use. Here are some of our favourites:<\/p>\n<table class=\"table table-hover table-bordered\" style=\"font-size: 14px\">\n  <tbody>\n    <tr><td style=\"background-color: red; color: white\">red<\/td><td style=\"background-color: orangered; color: white\">orangered<\/td><td style=\"background-color: tomato; color: white\">tomato<\/td><td style=\"background-color: coral; color: white\">coral<\/td><td style=\"background-color: salmon; color: white\">salmon<\/td><\/tr>\n    <tr><td style=\"background-color: darkorange; color: white\">darkorange<\/td><td style=\"background-color: orange; color: white\">orange<\/td><td style=\"background-color: goldenrod; color: white\">goldenrod<\/td><td style=\"background-color: gold; color: black\">gold<\/td><td style=\"background-color: yellow; color: black\">yellow<\/td><\/tr>\n    <tr><td style=\"background-color: darkgreen; color: white\">darkgreen<\/td><td style=\"background-color: forestgreen; color: white\">forestgreen<\/td><td style=\"background-color: springgreen; color: black\">springgreen<\/td><td style=\"background-color: lawngreen; color: black\">lawngreen<\/td><td style=\"background-color: #00ff00; color: black\">green<\/td><\/tr>\n    <tr><td style=\"background-color: navy; color: white\">navy<\/td><td style=\"background-color: mediumblue; color: white\">mediumblue<\/td><td style=\"background-color: royalblue; color: white\">royalblue<\/td><td style=\"background-color: cornflowerblue; color: white\">cornflowerblue<\/td><td style=\"background-color: skyblue; color: black\">skyblue<\/td><\/tr>\n    <tr><td style=\"background-color: darkviolet; color: white\">darkviolet<\/td><td style=\"background-color: purple; color: white\">purple<\/td><td style=\"background-color: orchid; color: white\">orchid<\/td><td style=\"background-color: violet; color: white\">violet<\/td><td style=\"background-color: plum; color: black\">plum<\/td><\/tr>    \n    <tr><td style=\"background-color: deeppink; color: white\">deeppink<\/td><td style=\"background-color: hotpink; color: white\">hotpink<\/td><td style=\"background-color: pink; color: black\">pink<\/td><td style=\"background-color: lightpink; color: black\">lightpink<\/td><td style=\"background-color: mistyrose; color: black\">mistyrose<\/td><\/tr>\n    <tr><td style=\"background-color: brown; color: white\">brown<\/td><td style=\"background-color: saddlebrown; color: white\">saddlebrown<\/td><td style=\"background-color: chocolate; color: white\">chocolate<\/td><td style=\"background-color: tan; color: black\">tan<\/td><td style=\"background-color: wheat; color: black\">wheat<\/td><\/tr>\n    <tr><td style=\"background-color: black; color: white\">black<\/td><td style=\"background-color: slategrey; color: white\">slategrey<\/td><td style=\"background-color: dimgray; color: white\">dimgray<\/td><td style=\"background-color: lightgray; color: black\">lightgray<\/td><td style=\"background-color: white; color: black\">white<\/td><\/tr>    \n  <\/tbody>\n<\/table>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Stay between the flags!",
              "purpose":"",
              "problem":"aca-blockly-logo-lifesaving-flag",
              "type":1,
              "problem_id":4124
            }
          ],
          "title":"Filled shapes with the turtle"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"\n<p>\n  It's boring to always have a plain white background. That's why we have a <bk class=\"lib\">background color<\/bk> block.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-turtle-background-color-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_bgcolor_text\" id=\"47\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"48\">\n        <field name=\"TEXT\">skyblue<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Also try some different colours.\n<\/p>\n<p>\n  The colour names that work are the same as the <bk class=\"lib\">pen color<\/bk> and <bk class=\"lib\">fill color<\/bk> blocks. (see the full list <a href=\"http:\/\/wiki.tcl.tk\/37701\" target=\"_blank\">here<\/a>).\n<\/p>"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Background colours",
              "content_rendered":"\n<p>\n  It's boring to always have a plain white background. That's why we have a <bk class=\"lib\">background color<\/bk> block.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-turtle-background-color-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_bgcolor_text\" id=\"47\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"48\">\n        <field name=\"TEXT\">skyblue<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Also try some different colours.\n<\/p>\n<p>\n  The colour names that work are the same as the <bk class=\"lib\">pen color<\/bk> and <bk class=\"lib\">fill color<\/bk> blocks. (see the full list <a href=\"http:\/\/wiki.tcl.tk\/37701\" target=\"_blank\">here<\/a>).\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Fallout Shelter",
              "purpose":"",
              "problem":"aca-blockly-logo-fallout-shelter",
              "type":1,
              "problem_id":4126
            }
          ],
          "title":"Advanced Turtle-fu!"
        }
      ],
      "title":"Add a Dash of Colour",
      "label":"aca-blockly-turtle-yr56-coloured-turtles",
      "updated_at":"2018-05-14T06:56:06.660393+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  So far our programs have been just a sequence of steps that run from top to bottom. The programs <em>run the same way every time<\/em>.\n<\/p>\n\n<p>\n  In the real world, we <strong>decide<\/strong> to <strong>take different steps<\/strong> based on our situation. For example, if it's raining, we do an <em>extra step<\/em> of taking an umbrella before leaving the house.\n<\/p>\n\n<p>\n  This <em>flowchart<\/em> describes this process (or <em>algorithm<\/em>):\n<\/p>\n\n<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xl=\"http:\/\/www.w3.org\/1999\/xlink\" version=\"1.1\" viewBox=\"-2 -2 344 134\" width=\"344pt\" height=\"134pt\" style=\"position: relative; display: block; margin: 0 auto; width: 90%\">\n<defs><marker orient=\"auto\" overflow=\"visible\" markerUnits=\"strokeWidth\" id=\"FilledArrow_Marker\" viewBox=\"-1 -3 7 6\" markerWidth=\"7\" markerHeight=\"6\" color=\"black\"><g><path d=\"M 4.8000002 0 L 0 -1.8000001 L 0 1.8000001 Z\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"1\"\/><\/g><\/marker><font-face font-family=\"Lato\" font-size=\"12\" panose-1=\"2 15 5 2 2 2 4 3 2 3\" units-per-em=\"1000\" underline-position=\"-51.5\" underline-thickness=\"97\" slope=\"0\" x-height=\"514\" cap-height=\"724\" ascent=\"986.9995\" descent=\"-212.99744\" font-weight=\"500\"><font-face-src><font-face-name name=\"Lato-Regular\"\/><\/font-face-src><\/font-face><\/defs><g stroke=\"none\" stroke-opacity=\"1\" stroke-dasharray=\"none\" fill=\"none\" fill-opacity=\"1\"><g><line x1=\"50.500013\" y1=\"90\" x2=\"66.1\" y2=\"90\" marker-end=\"url(#FilledArrow_Marker)\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><path d=\"M 120 50 L 120 25 L 157.1 25\" marker-end=\"url(#FilledArrow_Marker)\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><text transform=\"translate(94.5 30.04491)\" fill=\"black\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"black\" x=\".62619825\" y=\"12\" textLength=\"6.186\">y<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"black\" x=\"6.6441982\" y=\"12\" textLength=\"11.5319996\">es<\/tspan><\/text><path d=\"M 250 25 L 301.5 25 L 301.5 51.5\" marker-end=\"url(#FilledArrow_Marker)\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><line x1=\"160\" y1=\"90\" x2=\"246.1\" y2=\"90\" marker-end=\"url(#FilledArrow_Marker)\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><text transform=\"translate(163 95)\" fill=\"black\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" x=\".25\" y=\"12\" textLength=\"13.5\">no<\/tspan><\/text><rect x=\"170\" y=\"0\" width=\"80\" height=\"50\" fill=\"#7b188f\"\/><rect x=\"170\" y=\"0\" width=\"80\" height=\"50\" stroke=\"#7b188f\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><text transform=\"translate(175 10)\" fill=\"white\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"15.248\" y=\"12\" textLength=\"7.086\">T<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"20.966\" y=\"12\" textLength=\"12.0600004\">ak<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"32.684\" y=\"12\" textLength=\"22.068001\">e an<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"12.317\" y=\"27\" textLength=\"27.648\">umbr<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"39.719\" y=\"27\" textLength=\"17.964001\">ella<\/tspan><\/text><path d=\"M 120 50 L 160 90 L 120 130 L 80 90 Z\" fill=\"#ff5900\"\/><path d=\"M 120 50 L 160 90 L 120 130 L 80 90 Z\" stroke=\"#ff5900\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><text transform=\"translate(95.8 71)\" fill=\"white\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"15.685\" y=\"12\" textLength=\"3.3599999\">I<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"18.865\" y=\"12\" textLength=\"18.521999\">s it <\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"4.501\" y=\"27\" textLength=\"4.368\">r<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"8.773\" y=\"27\" textLength=\"36.726002\">aining?<\/tspan><\/text><rect x=\"260\" y=\"65\" width=\"80\" height=\"50\" fill=\"#7b188f\"\/><rect x=\"260\" y=\"65\" width=\"80\" height=\"50\" stroke=\"#7b188f\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><text transform=\"translate(265 75)\" fill=\"white\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"9.302\" y=\"12\" textLength=\"54.468\">Leave the <\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"19.139\" y=\"27\" textLength=\"31.722\">house<\/tspan><\/text><circle cx=\"25\" cy=\"90\" r=\"25.00004\" fill=\"#7b188f\"\/><circle cx=\"25\" cy=\"90\" r=\"25.00004\" stroke=\"#7b188f\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"\/><text transform=\"translate(10 82.5)\" fill=\"white\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"2.412\" y=\"12\" textLength=\"6.5100002\">S<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"8.652\" y=\"12\" textLength=\"18.936001\">tart<\/tspan><\/text><\/g><\/g><\/svg>\n\n<p>\n  The diamond needs a <code data-lang=\"in\">yes<\/code> or <code data-lang=\"in\">no<\/code> decision. \nIf the answer is <code data-lang=\"in\">yes<\/code>, we do the extra step of taking an umbrella. \nIf the answer is <code data-lang=\"in\">no<\/code>, we skip it.\n<\/p>\n\n<p>\n  We can write this in Blockly using an <bk class=\"control\">if<\/bk> block.\n<\/p>\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Why do we need decisions?",
              "content_rendered":"<p>\n  So far our programs have been just a sequence of steps that run from top to bottom. The programs <em>run the same way every time<\/em>.\n<\/p>\n\n<p>\n  In the real world, we <strong>decide<\/strong> to <strong>take different steps<\/strong> based on our situation. For example, if it's raining, we do an <em>extra step<\/em> of taking an umbrella before leaving the house.\n<\/p>\n\n<p>\n  This <em>flowchart<\/em> describes this process (or <em>algorithm<\/em>):\n<\/p>\n\n<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xl=\"http:\/\/www.w3.org\/1999\/xlink\" version=\"1.1\" viewBox=\"-2 -2 344 134\" width=\"344pt\" height=\"134pt\" style=\"position: relative; display: block; margin: 0 auto; width: 90%\">\n<defs><marker orient=\"auto\" overflow=\"visible\" markerUnits=\"strokeWidth\" id=\"FilledArrow_Marker\" viewBox=\"-1 -3 7 6\" markerWidth=\"7\" markerHeight=\"6\" color=\"black\"><g><path d=\"M 4.8000002 0 L 0 -1.8000001 L 0 1.8000001 Z\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"1\"\/><\/g><\/marker><font-face font-family=\"Lato\" font-size=\"12\" panose-1=\"2 15 5 2 2 2 4 3 2 3\" units-per-em=\"1000\" underline-position=\"-51.5\" underline-thickness=\"97\" slope=\"0\" x-height=\"514\" cap-height=\"724\" ascent=\"986.9995\" descent=\"-212.99744\" font-weight=\"500\"><font-face-src><font-face-name name=\"Lato-Regular\"\/><\/font-face-src><\/font-face><\/defs><g stroke=\"none\" stroke-opacity=\"1\" stroke-dasharray=\"none\" fill=\"none\" fill-opacity=\"1\"><g><line x1=\"50.500013\" y1=\"90\" x2=\"66.1\" y2=\"90\" marker-end=\"url(#FilledArrow_Marker)\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><path d=\"M 120 50 L 120 25 L 157.1 25\" marker-end=\"url(#FilledArrow_Marker)\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><text transform=\"translate(94.5 30.04491)\" fill=\"black\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"black\" x=\".62619825\" y=\"12\" textLength=\"6.186\">y<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"black\" x=\"6.6441982\" y=\"12\" textLength=\"11.5319996\">es<\/tspan><\/text><path d=\"M 250 25 L 301.5 25 L 301.5 51.5\" marker-end=\"url(#FilledArrow_Marker)\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><line x1=\"160\" y1=\"90\" x2=\"246.1\" y2=\"90\" marker-end=\"url(#FilledArrow_Marker)\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><text transform=\"translate(163 95)\" fill=\"black\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" x=\".25\" y=\"12\" textLength=\"13.5\">no<\/tspan><\/text><rect x=\"170\" y=\"0\" width=\"80\" height=\"50\" fill=\"#7b188f\"\/><rect x=\"170\" y=\"0\" width=\"80\" height=\"50\" stroke=\"#7b188f\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><text transform=\"translate(175 10)\" fill=\"white\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"15.248\" y=\"12\" textLength=\"7.086\">T<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"20.966\" y=\"12\" textLength=\"12.0600004\">ak<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"32.684\" y=\"12\" textLength=\"22.068001\">e an<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"12.317\" y=\"27\" textLength=\"27.648\">umbr<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"39.719\" y=\"27\" textLength=\"17.964001\">ella<\/tspan><\/text><path d=\"M 120 50 L 160 90 L 120 130 L 80 90 Z\" fill=\"#ff5900\"\/><path d=\"M 120 50 L 160 90 L 120 130 L 80 90 Z\" stroke=\"#ff5900\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><text transform=\"translate(95.8 71)\" fill=\"white\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"15.685\" y=\"12\" textLength=\"3.3599999\">I<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"18.865\" y=\"12\" textLength=\"18.521999\">s it <\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"4.501\" y=\"27\" textLength=\"4.368\">r<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"8.773\" y=\"27\" textLength=\"36.726002\">aining?<\/tspan><\/text><rect x=\"260\" y=\"65\" width=\"80\" height=\"50\" fill=\"#7b188f\"\/><rect x=\"260\" y=\"65\" width=\"80\" height=\"50\" stroke=\"#7b188f\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\/><text transform=\"translate(265 75)\" fill=\"white\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"9.302\" y=\"12\" textLength=\"54.468\">Leave the <\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"19.139\" y=\"27\" textLength=\"31.722\">house<\/tspan><\/text><circle cx=\"25\" cy=\"90\" r=\"25.00004\" fill=\"#7b188f\"\/><circle cx=\"25\" cy=\"90\" r=\"25.00004\" stroke=\"#7b188f\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"\/><text transform=\"translate(10 82.5)\" fill=\"white\"><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"2.412\" y=\"12\" textLength=\"6.5100002\">S<\/tspan><tspan font-family=\"Lato\" font-size=\"12\" font-weight=\"500\" fill=\"white\" x=\"8.652\" y=\"12\" textLength=\"18.936001\">tart<\/tspan><\/text><\/g><\/g><\/svg>\n\n<p>\n  The diamond needs a <code data-lang=\"in\">yes<\/code> or <code data-lang=\"in\">no<\/code> decision. \nIf the answer is <code data-lang=\"in\">yes<\/code>, we do the extra step of taking an umbrella. \nIf the answer is <code data-lang=\"in\">no<\/code>, we skip it.\n<\/p>\n\n<p>\n  We can write this in Blockly using an <bk class=\"control\">if<\/bk> block.\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  The computer decides what steps to run with an <bk class=\"control\">if<\/bk> block.\n<\/p>\n\n<p>\n  The computer might decide on what to draw based on what the user types in. Try answering <code data-lang=\"in\">yes<\/code> and then <code data-lang=\"in\">no<\/code> to this question:\n\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-strings-are-equal\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"cBhSb-)$hEt@)R#{*5Kd\">colour<\/variable>\n    <variable type=\"\" id=\"G3cn,,=1fcN+C7aF*LN]\">colourful<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"7ZB`7fu[7fY.QU6XKS!?\" x=\"10\" y=\"7\">\n    <field name=\"VAR\" id=\"G3cn,,=1fcN+C7aF*LN]\" variabletype=\"\">colourful<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_text\" id=\"T(f%RA7~2dAn.:AsTk=8\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"k+SwxrsP-ClBDP,*U+,+\">\n            <field name=\"TEXT\">Do you want a colourful line?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pensize\" id=\"uJhl3\/#k?IE1LCY3a}F8\">\n        <value name=\"SIZE\">\n          <block type=\"math_number\" id=\"07tFjWGT7mAP9J)LWjf~\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"decisions_if_else\" id=\"v,3blf5KV(s)F.Qn@ITj\">\n            <value name=\"IF0\">\n              <block type=\"logic_compare\" id=\"1nEDfPPNjAb1}t.hFCIt\">\n                <field name=\"OP\">EQ<\/field>\n                <value name=\"A\">\n                  <block type=\"variables_get\" id=\";MR%AH+$7b_.uvJ#Pk3^\">\n                    <field name=\"VAR\" id=\"G3cn,,=1fcN+C7aF*LN]\" variabletype=\"\">colourful<\/field>\n                  <\/block>\n                <\/value>\n                <value name=\"B\">\n                  <block type=\"text\" id=\"#C|W]I.=eRcA~%[qTeNO\">\n                    <field name=\"TEXT\">yes<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n            <statement name=\"DO0\">\n              <block type=\"turtle_pencolor_text\" id=\"iv7GA!.czS[VdH(#KDX*\">\n                <value name=\"COLOR\">\n                  <block type=\"text\" id=\"w1HWQ9#T6YqS0c;4k0]-\">\n                    <field name=\"TEXT\">hotpink<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_forward\" id=\"H8tqS3[_#|W_x}Gzq}#!\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"K,0O}BU^#x2g(;?^pT_s\">\n                        <field name=\"NUM\">30<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_pencolor_text\" id=\"}$Z.^{GWMVmB^]{4Xv.:\">\n                        <value name=\"COLOR\">\n                          <block type=\"text\" id=\"y[y9-,u6EYu6o]?-6?AH\">\n                            <field name=\"TEXT\">limegreen<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"B:Esvl16!p-EXnx7j)y$\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"kRD0WHf@L==iVZiVk=mc\">\n                                <field name=\"NUM\">30<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_pencolor_text\" id=\"0lgc!7D%CoOo]pqd#EC?\">\n                                <value name=\"COLOR\">\n                                  <block type=\"text\" id=\"*Cb@AYDTEXCkD79wbZ1-\">\n                                    <field name=\"TEXT\">blue<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"\/F*-QqKjn{$h$H!L*y*3\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\"ojBh_UKI-k^Pc).xA4o^\">\n                                        <field name=\"NUM\">30<\/field>\n                                      <\/block>\n                                    <\/value>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n            <statement name=\"ELSE\">\n              <block type=\"turtle_forward\" id=\"$TSu2C5w@R.#4ak^$`;C\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"D0)%G|k@)[eoV:jH_Cp.\">\n                    <field name=\"NUM\">90<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Are two strings the same?",
              "content_rendered":"<p>\n  The computer decides what steps to run with an <bk class=\"control\">if<\/bk> block.\n<\/p>\n\n<p>\n  The computer might decide on what to draw based on what the user types in. Try answering <code data-lang=\"in\">yes<\/code> and then <code data-lang=\"in\">no<\/code> to this question:\n\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-strings-are-equal\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"cBhSb-)$hEt@)R#{*5Kd\">colour<\/variable>\n    <variable type=\"\" id=\"G3cn,,=1fcN+C7aF*LN]\">colourful<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"7ZB`7fu[7fY.QU6XKS!?\" x=\"10\" y=\"7\">\n    <field name=\"VAR\" id=\"G3cn,,=1fcN+C7aF*LN]\" variabletype=\"\">colourful<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_text\" id=\"T(f%RA7~2dAn.:AsTk=8\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"k+SwxrsP-ClBDP,*U+,+\">\n            <field name=\"TEXT\">Do you want a colourful line?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pensize\" id=\"uJhl3\/#k?IE1LCY3a}F8\">\n        <value name=\"SIZE\">\n          <block type=\"math_number\" id=\"07tFjWGT7mAP9J)LWjf~\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"decisions_if_else\" id=\"v,3blf5KV(s)F.Qn@ITj\">\n            <value name=\"IF0\">\n              <block type=\"logic_compare\" id=\"1nEDfPPNjAb1}t.hFCIt\">\n                <field name=\"OP\">EQ<\/field>\n                <value name=\"A\">\n                  <block type=\"variables_get\" id=\";MR%AH+$7b_.uvJ#Pk3^\">\n                    <field name=\"VAR\" id=\"G3cn,,=1fcN+C7aF*LN]\" variabletype=\"\">colourful<\/field>\n                  <\/block>\n                <\/value>\n                <value name=\"B\">\n                  <block type=\"text\" id=\"#C|W]I.=eRcA~%[qTeNO\">\n                    <field name=\"TEXT\">yes<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n            <statement name=\"DO0\">\n              <block type=\"turtle_pencolor_text\" id=\"iv7GA!.czS[VdH(#KDX*\">\n                <value name=\"COLOR\">\n                  <block type=\"text\" id=\"w1HWQ9#T6YqS0c;4k0]-\">\n                    <field name=\"TEXT\">hotpink<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_forward\" id=\"H8tqS3[_#|W_x}Gzq}#!\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"K,0O}BU^#x2g(;?^pT_s\">\n                        <field name=\"NUM\">30<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_pencolor_text\" id=\"}$Z.^{GWMVmB^]{4Xv.:\">\n                        <value name=\"COLOR\">\n                          <block type=\"text\" id=\"y[y9-,u6EYu6o]?-6?AH\">\n                            <field name=\"TEXT\">limegreen<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"B:Esvl16!p-EXnx7j)y$\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"kRD0WHf@L==iVZiVk=mc\">\n                                <field name=\"NUM\">30<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_pencolor_text\" id=\"0lgc!7D%CoOo]pqd#EC?\">\n                                <value name=\"COLOR\">\n                                  <block type=\"text\" id=\"*Cb@AYDTEXCkD79wbZ1-\">\n                                    <field name=\"TEXT\">blue<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"\/F*-QqKjn{$h$H!L*y*3\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\"ojBh_UKI-k^Pc).xA4o^\">\n                                        <field name=\"NUM\">30<\/field>\n                                      <\/block>\n                                    <\/value>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n            <statement name=\"ELSE\">\n              <block type=\"turtle_forward\" id=\"$TSu2C5w@R.#4ak^$`;C\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"D0)%G|k@)[eoV:jH_Cp.\">\n                    <field name=\"NUM\">90<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Studybot - Highlighter or Pen",
              "purpose":"",
              "problem":"aca-blockly-logo-highlighter-or-pen",
              "type":1,
              "problem_id":4097
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Traffic lights",
              "purpose":"",
              "problem":"aca-blockly-logo-square-traffic-light",
              "type":1,
              "problem_id":4108
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Three Little Pigs",
              "purpose":"",
              "problem":"aca-blockly-logo-three-little-pigs-house-loop",
              "type":1,
              "problem_id":4109
            }
          ],
          "title":"Making decisions"
        }
      ],
      "title":"Making Decisions",
      "label":"aca-blockly-turtle-yr56-if",
      "updated_at":"2018-05-14T06:56:06.420621+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"#markdown\n\n<p><strong>Congratulations on making it through the course!<\/strong> You've learnt so much!\n<\/p>\n\nWe've put together a few extension questions and some advanced Turtle tips and tricks to challenge you even more. Have a go, and also try out your skills in our Turtle Playground question at the end where you can draw whatever you like! \n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Congratulations!",
              "content_rendered":"<p><strong>Congratulations on making it through the course!<\/strong> You've learnt so much!\n<\/p>\n<p>We've put together a few extension questions and some advanced Turtle tips and tricks to challenge you even more. Have a go, and also try out your skills in our Turtle Playground question at the end where you can draw whatever you like!<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Problem: Heartbeat",
              "purpose":"",
              "problem":"aca-blockly-logo-heartbeat",
              "type":1,
              "problem_id":4068
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Sometimes you'll need to move the turtle around into the right position without drawing anything.\n  The <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk> \nblock does this:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-penup-pendown\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"turtle_forward\" x=\"10\" y=\"10\" inline=\"true\" movable=\"false\">\n    <value name=\"DISTANCE\">\n      <block id=\"2\" type=\"math_number\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block id=\"3\" type=\"turtle_pen\" inline=\"true\">\n        <field name=\"STATE\">UP<\/field>\n        <next>\n          <block id=\"4\" type=\"turtle_forward\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block id=\"5\" type=\"math_number\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block id=\"6\" type=\"turtle_pen\" inline=\"true\">\n                <field name=\"STATE\">DOWN<\/field>\n                <next>\n                  <block id=\"7\" type=\"turtle_forward\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block id=\"8\" type=\"math_number\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n\n<\/code><\/pre>\n\n<p>Imagine the turtle is holding a pen, after you've lifted up the pen with <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk> the pen is off the paper and the turtle won't draw anything as it moves around. After you've put the pen back down with <bk class=\"lib\">pen <bk class=\"inner\">down<\/bk><\/bk>, the turtle will draw as it moves again.<\/p>\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Pen up and down",
              "content_rendered":"<p>\n  Sometimes you'll need to move the turtle around into the right position without drawing anything.\n  The <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk> \nblock does this:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-penup-pendown\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"turtle_forward\" x=\"10\" y=\"10\" inline=\"true\" movable=\"false\">\n    <value name=\"DISTANCE\">\n      <block id=\"2\" type=\"math_number\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block id=\"3\" type=\"turtle_pen\" inline=\"true\">\n        <field name=\"STATE\">UP<\/field>\n        <next>\n          <block id=\"4\" type=\"turtle_forward\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block id=\"5\" type=\"math_number\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block id=\"6\" type=\"turtle_pen\" inline=\"true\">\n                <field name=\"STATE\">DOWN<\/field>\n                <next>\n                  <block id=\"7\" type=\"turtle_forward\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block id=\"8\" type=\"math_number\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n\n<\/code><\/pre>\n\n<p>Imagine the turtle is holding a pen, after you've lifted up the pen with <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk> the pen is off the paper and the turtle won't draw anything as it moves around. After you've put the pen back down with <bk class=\"lib\">pen <bk class=\"inner\">down<\/bk><\/bk>, the turtle will draw as it moves again.<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Problem: Wooden Fence",
              "purpose":"",
              "problem":"bk-logo-build-a-fence",
              "type":1,
              "problem_id":2674
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Problem: Scalable House",
              "purpose":"",
              "problem":"aca-blockly-logo-variable-scaleable-house",
              "type":1,
              "problem_id":3651
            }
          ],
          "title":"Congratulations!"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "layout":0,
              "title":"Playground!",
              "purpose":"",
              "problem":"aca-blockly-logo-playground",
              "type":1,
              "problem_id":4110
            }
          ],
          "title":"Turtle Playground"
        }
      ],
      "title":"Extension: Putting it all together!",
      "label":"aca-blockly-turtle-yr56-extension",
      "updated_at":"2018-05-14T06:56:07.578171+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Meet the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Turtle_graphics\" target=\"_blank\">turtle<\/a>!<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\" style=\"display: none\">\n[\"begin_animation\",400,300,10,\"a1c29740-31a1-11e5-acfe-a45e60b77597\"]\n[\"create_shape\",0,[[0,0],[-5,-9],[0,-7],[5,-9]],{\"pencolor\":[0,0,0],\"outline\":1,\"pensize\":1,\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"change_shape\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]]]\n[\"pen\",{\"heading\":0.0,\"outline\":1,\"fillcolor\":[0,0,0],\"tilt\":0.0,\"pencolor\":[0,0,0],\"shown\":true,\"pensize\":1,\"pendown\":false,\"speed\":3}]\n[\"left\",1.5707963267948966]\n[\"forward\",50.0]\n[\"pen\",{\"heading\":1.5707963267948966,\"pendown\":true}]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  In this course, you'll be using Blockly - a visual programming language - to drive the turtle. \n  It's fun, and what you'll learn is the basis for all <a href=\"https:\/\/en.wikipedia.org\/wiki\/Vector_graphics\" target=\"_blank\">vector graphics<\/a> in computers.\n<\/p>\n"
                }
              ],
              "layout":0,
              "notes_rendered":"<aside class=\"info\">\n<h2>Teacher Notes Available!<\/h2>\n<p>Lesson plans and support are available on the <a target=\"_blank\" href=\"https:\/\/aca.edu.au\/challenges\/56-blockly-turtle.html\">Australian Computing Academy website<\/a>.<\/p>\n<\/aside>\n<p>\n  Turtle is an implementation of <a href=\"https:\/\/en.wikipedia.org\/wiki\/Turtle_graphics\" target=\"_blank\">turtle graphics<\/a> originating from Seymour Papert's <a href=\"https:\/\/en.wikipedia.org\/wiki\/Logo_(programming_language)\" target=\"_blank\">Logo<\/a> from the 1960's.\n<\/p>\n<p>\n  Our version provides simple blocks to move and rotate the turtle while it draws lines and shapes, with various line and fill properties. It builds on Python's <code data-lang=\"py3\">turtle<\/code> module, which is available in all standard installations.\n<\/p>\n<p>\n  Turtle graphics has seen an educational resurgience recently \u2013\u00a0the immediate visual feedback; natural integration of coding with maths, especially geometry; and opportunities for artistic expression continue to delight teachers and students.\n<\/p>\n<aside class=\"info\">\n  <h2>We automark the lines and shapes<\/h2>\n  <p>\n    Our intelligent automarker checks the shapes drawn by the turtle. <strong>It ignores the direction and order they are drawn in.<\/strong>\n  <\/p>\n  <p>\n    As long as the shapes are <em>where<\/em> they should be, you can draw them however you wish.  There are many correct answers!\n  <\/p>\n<\/aside>\n<p>\n  Thanks for giving the DT Challenge a go!\n<\/p>\n<p>\n  <strong>The most important thing is to get kids exploring the examples.<\/strong>\n<\/p>\n<p>\n  Students who run, modify, and then rerun the examples have a much better chance of understanding how the code works.\n<\/p>\n<p>\n  <strong>It's even better if they break the code so it doesn't work any more!<\/strong>\n<\/p>\n<p>\n  That way, they learn how code breaks, and can fix it themselves. They can swap back to the original by clicking the <span class=\"icon-undo2\" style=\"font-size: 16px\"><\/span> button.\n<\/p>\n<aside class=\"info\">\n  <h2>Creative Commons Attribution 4.0 licence<\/h2>\n  <p>All of the material in this Australian Digital Technologies Challenge has been licensed under Creative Commonts Attribution 4.0.  This means you can copy and adapt the material for any purpose, as long as you include an attribution for the Australian Computing Academy.<\/p>\n<\/aside>",
              "notes":[
                {
                  "left":"#markdown\n\n> ## Teacher Notes Available!\n> Lesson plans and support are available on the [Australian Computing Academy website](https:\/\/aca.edu.au\/challenges\/56-blockly-turtle.html).\n\n\n<p>\n  Turtle is an implementation of <a href=\"https:\/\/en.wikipedia.org\/wiki\/Turtle_graphics\" target=\"_blank\">turtle graphics<\/a> originating from Seymour Papert's <a href=\"https:\/\/en.wikipedia.org\/wiki\/Logo_(programming_language)\" target=\"_blank\">Logo<\/a> from the 1960's.\n<\/p>\n\n<p>\n  Our version provides simple blocks to move and rotate the turtle while it draws lines and shapes, with various line and fill properties. It builds on Python's <code data-lang=\"py3\">turtle<\/code> module, which is available in all standard installations.\n<\/p>\n\n<p>\n  Turtle graphics has seen an educational resurgience recently \u2013\u00a0the immediate visual feedback; natural integration of coding with maths, especially geometry; and opportunities for artistic expression continue to delight teachers and students.\n<\/p>\n\n<aside class=\"info\">\n  <h2>We automark the lines and shapes<\/h2>\n  <p>\n    Our intelligent automarker checks the shapes drawn by the turtle. <strong>It ignores the direction and order they are drawn in.<\/strong>\n  <\/p>\n  <p>\n    As long as the shapes are <em>where<\/em> they should be, you can draw them however you wish.  There are many correct answers!\n  <\/p>\n<\/aside>\n\n<p>\n  Thanks for giving the DT Challenge a go!\n<\/p>\n\n<p>\n  <strong>The most important thing is to get kids exploring the examples.<\/strong>\n<\/p>\n\n<p>\n  Students who run, modify, and then rerun the examples have a much better chance of understanding how the code works.\n<\/p>\n\n<p>\n  <strong>It's even better if they break the code so it doesn't work any more!<\/strong>\n<\/p>\n\n<p>\n  That way, they learn how code breaks, and can fix it themselves. They can swap back to the original by clicking the <span class=\"icon-undo2\" style=\"font-size: 16px\"><\/span> button.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Creative Commons Attribution 4.0 licence<\/h2>\n  <p>All of the material in this Australian Digital Technologies Challenge has been licensed under Creative Commonts Attribution 4.0.  This means you can copy and adapt the material for any purpose, as long as you include an attribution for the Australian Computing Academy.<\/p>\n<\/aside>\n"
                }
              ],
              "title":"Introducing the turtle",
              "content_rendered":"<p>Meet the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Turtle_graphics\" target=\"_blank\">turtle<\/a>!<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\" style=\"display: none\">\n[\"begin_animation\",400,300,10,\"a1c29740-31a1-11e5-acfe-a45e60b77597\"]\n[\"create_shape\",0,[[0,0],[-5,-9],[0,-7],[5,-9]],{\"pencolor\":[0,0,0],\"outline\":1,\"pensize\":1,\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"change_shape\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]]]\n[\"pen\",{\"heading\":0.0,\"outline\":1,\"fillcolor\":[0,0,0],\"tilt\":0.0,\"pencolor\":[0,0,0],\"shown\":true,\"pensize\":1,\"pendown\":false,\"speed\":3}]\n[\"left\",1.5707963267948966]\n[\"forward\",50.0]\n[\"pen\",{\"heading\":1.5707963267948966,\"pendown\":true}]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  In this course, you'll be using Blockly - a visual programming language - to drive the turtle. \n  It's fun, and what you'll learn is the basis for all <a href=\"https:\/\/en.wikipedia.org\/wiki\/Vector_graphics\" target=\"_blank\">vector graphics<\/a> in computers.\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Let's make the turtle move! Click the <span class=\"icon-play4\" style=\"font-size: 16px\"><\/span> button:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-move-the-turtle-forward\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"19\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"20\">\n        <field name=\"NUM\">30<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>When you run the Blockly code, it makes the turtle move forward!<\/p>\n\n<p>The number is the number of <em>turtle steps<\/em> to move. A bigger number will move the turtle further!<\/p>\n\n<p>Try changing <bk class=\"math\"><bk class=\"inner\">30<\/bk><\/bk> to <bk class=\"math\"><bk class=\"inner\">100<\/bk><\/bk>, and running it again.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Where are the turtle blocks?<\/h2>\n  <p>\n    Turtle blocks only work on turtle questions. If you want to try them, skip to the next question, then come back to the notes!\n  <\/p>\n<\/aside>\n"
                }
              ],
              "layout":0,
              "notes_rendered":"<p>\n  Students find turtle problems hard for three main reasons:\n<\/p>\n\n<ul>\n  <li>the moves and turns are from the <strong>turtle's point of view<\/strong>. If the turtle is facing right, a <bk class=\"lib\">move forward<\/bk> will take the turtle further to the right;<\/li>\n  <li>the angle calculations are tricky \u2013\u00a0you need to <strong>calculate the change in the turtle's direction<\/strong>, not the angle between the lines it draws;<\/li>\n  <li>a <strong>single error can make a mess<\/strong>\u00a0\u2013\u00a0once the turtle is off track, it usually stays off track. A single error can feel overwhelmingly like many many errors.\n<\/ul>\n\n<p>\n  <strong>Students need to focus on fixing the first error the turtle makes.<\/strong>\n<\/p>\n\n<p>\n  In the automarker feedback, we show them the expected output as a dotted line, so they can see when the turtle stops following it.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Turtle blocks in turtle questions only<\/h2>\n  <p>\n    At this stage, turtle blocks (and the turtle output animation) are only available on turtle questions.\n  <\/p>\n\n  <p>\n    In the future, we will have a playground with all of the blocks available, but we haven't had a chance to implement it yet.\n  <\/p>\n<\/aside>\n",
              "notes":[
                {
                  "left":"<p>\n  Students find turtle problems hard for three main reasons:\n<\/p>\n\n<ul>\n  <li>the moves and turns are from the <strong>turtle's point of view<\/strong>. If the turtle is facing right, a <bk class=\"lib\">move forward<\/bk> will take the turtle further to the right;<\/li>\n  <li>the angle calculations are tricky \u2013\u00a0you need to <strong>calculate the change in the turtle's direction<\/strong>, not the angle between the lines it draws;<\/li>\n  <li>a <strong>single error can make a mess<\/strong>\u00a0\u2013\u00a0once the turtle is off track, it usually stays off track. A single error can feel overwhelmingly like many many errors.\n<\/ul>\n\n<p>\n  <strong>Students need to focus on fixing the first error the turtle makes.<\/strong>\n<\/p>\n\n<p>\n  In the automarker feedback, we show them the expected output as a dotted line, so they can see when the turtle stops following it.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Turtle blocks in turtle questions only<\/h2>\n  <p>\n    At this stage, turtle blocks (and the turtle output animation) are only available on turtle questions.\n  <\/p>\n\n  <p>\n    In the future, we will have a playground with all of the blocks available, but we haven't had a chance to implement it yet.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "title":"Move forward",
              "content_rendered":"<p>Let's make the turtle move! Click the <span class=\"icon-play4\" style=\"font-size: 16px\"><\/span> button:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-move-the-turtle-forward\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"19\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"20\">\n        <field name=\"NUM\">30<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>When you run the Blockly code, it makes the turtle move forward!<\/p>\n\n<p>The number is the number of <em>turtle steps<\/em> to move. A bigger number will move the turtle further!<\/p>\n\n<p>Try changing <bk class=\"math\"><bk class=\"inner\">30<\/bk><\/bk> to <bk class=\"math\"><bk class=\"inner\">100<\/bk><\/bk>, and running it again.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Where are the turtle blocks?<\/h2>\n  <p>\n    Turtle blocks only work on turtle questions. If you want to try them, skip to the next question, then come back to the notes!\n  <\/p>\n<\/aside>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Make a move!",
              "purpose":"",
              "problem":"aca-bk-logo-move-forward",
              "type":1,
              "problem_id":4111
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  <strong>The turtle always starts facing to the right of the screen.<\/strong>\n<\/p>\n\n<p>\n  If you want to change which way the turtle is facing, you can use the <bk class=\"lib\">turn <bk class=\"inner\">left<\/bk><\/bk> block. To make the block <bk class=\"lib\">turn <bk class=\"inner\">right<\/bk><\/bk>, you need to click on <bk class=\"lib\"><bk class=\"inner\">left<\/bk><\/bk> and select <strong>right<\/strong> from the dropdown list.\n<\/p>\n\n<p>\nClick the <span class=\"icon-play4\" style=\"font-size: 16px\"><\/span> button to see the turtle turning left:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-logo-left\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_turn_simple\" id=\"3\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Now the turtle is facing up! Change it to <bk class=\"lib\">turn <bk class=\"inner\">right<\/bk><\/bk> by clicking the dropdown in the block and run it again.<\/p>"
                }
              ],
              "layout":0,
              "notes_rendered":"<p>\n  There are several buttons to control the turtle animations:\n<\/p>\n\n<div class=\"logo-preview\" style=\"border-bottom: 0\">\n  <div class=\"logo-preview-top-bar\" style=\"display: inline-block\">\n    <menu class=\"logo-preview-actions\">\n      <button class=\"action js-play\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Play animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-loop\"><\/span>\n      <\/button>\n      <button class=\"action js-pause\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Pause animation\" style=\"display: none;\">\n        <span class=\"icon icon-pause2\"><\/span>\n      <\/button>\n      <button class=\"action js-stop\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Stop animation\" style=\"display: none;\">\n        <span class=\"icon icon-stop2\"><\/span>\n      <\/button>\n      <button class=\"action js-turtle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle turtle\">\n        <span class=\"icon icon-eye-blocked\"><\/span>\n      <\/button>\n      <button class=\"action js-grid\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle grid lines\">\n        <span class=\"icon icon-grid7\"><\/span>\n      <\/button>\n    <\/menu>\n  <\/div>\n<\/div>\n\n<p>\n  The <span class=\"icon icon-loop\"><\/span> button (re)plays the animation, regardless of whether the program is running.  The <span class=\"icon icon-eye-blocked\"><\/span> button toggles the turtle visibility itself, so you can just see the lines being drawn.  The <span class=\"icon icon-grid7\"><\/span> button toggles a 50-step grid centred on the turtle's starting point.\n<\/p>\n\n<p>\n  When the animation is running, you will see:\n<\/p>\n\n<div class=\"logo-preview\" style=\"border-bottom: 0\">\n  <div class=\"logo-preview-top-bar\" style=\"display: inline-block\">\n    <menu class=\"logo-preview-actions\">\n      <button class=\"action js-play\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Play animation\" style=\"display: none;\">\n        <span class=\"icon icon-loop\"><\/span>\n      <\/button>\n      <button class=\"action js-pause\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Pause animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-pause2\"><\/span>\n      <\/button>\n      <button class=\"action js-stop\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Stop animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-stop2\"><\/span>\n      <\/button>\n      <button class=\"action js-turtle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle turtle\">\n        <span class=\"icon icon-eye-blocked\"><\/span>\n      <\/button>\n      <button class=\"action js-grid\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle grid lines\">\n        <span class=\"icon icon-grid7\"><\/span>\n      <\/button>\n    <\/menu>\n  <\/div>\n<\/div>\n\n<p>\n  These extra buttons allow you to pause <span class=\"icon icon-pause2\"><\/span> and stop <span class=\"icon icon-stop2\"><\/span> the animation before it finishes.\n<\/p>\n",
              "notes":[
                {
                  "left":"<p>\n  There are several buttons to control the turtle animations:\n<\/p>\n\n<div class=\"logo-preview\" style=\"border-bottom: 0\">\n  <div class=\"logo-preview-top-bar\" style=\"display: inline-block\">\n    <menu class=\"logo-preview-actions\">\n      <button class=\"action js-play\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Play animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-loop\"><\/span>\n      <\/button>\n      <button class=\"action js-pause\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Pause animation\" style=\"display: none;\">\n        <span class=\"icon icon-pause2\"><\/span>\n      <\/button>\n      <button class=\"action js-stop\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Stop animation\" style=\"display: none;\">\n        <span class=\"icon icon-stop2\"><\/span>\n      <\/button>\n      <button class=\"action js-turtle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle turtle\">\n        <span class=\"icon icon-eye-blocked\"><\/span>\n      <\/button>\n      <button class=\"action js-grid\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle grid lines\">\n        <span class=\"icon icon-grid7\"><\/span>\n      <\/button>\n    <\/menu>\n  <\/div>\n<\/div>\n\n<p>\n  The <span class=\"icon icon-loop\"><\/span> button (re)plays the animation, regardless of whether the program is running.  The <span class=\"icon icon-eye-blocked\"><\/span> button toggles the turtle visibility itself, so you can just see the lines being drawn.  The <span class=\"icon icon-grid7\"><\/span> button toggles a 50-step grid centred on the turtle's starting point.\n<\/p>\n\n<p>\n  When the animation is running, you will see:\n<\/p>\n\n<div class=\"logo-preview\" style=\"border-bottom: 0\">\n  <div class=\"logo-preview-top-bar\" style=\"display: inline-block\">\n    <menu class=\"logo-preview-actions\">\n      <button class=\"action js-play\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Play animation\" style=\"display: none;\">\n        <span class=\"icon icon-loop\"><\/span>\n      <\/button>\n      <button class=\"action js-pause\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Pause animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-pause2\"><\/span>\n      <\/button>\n      <button class=\"action js-stop\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Stop animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-stop2\"><\/span>\n      <\/button>\n      <button class=\"action js-turtle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle turtle\">\n        <span class=\"icon icon-eye-blocked\"><\/span>\n      <\/button>\n      <button class=\"action js-grid\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle grid lines\">\n        <span class=\"icon icon-grid7\"><\/span>\n      <\/button>\n    <\/menu>\n  <\/div>\n<\/div>\n\n<p>\n  These extra buttons allow you to pause <span class=\"icon icon-pause2\"><\/span> and stop <span class=\"icon icon-stop2\"><\/span> the animation before it finishes.\n<\/p>\n"
                }
              ],
              "title":"Turning corners",
              "content_rendered":"<p>\n  <strong>The turtle always starts facing to the right of the screen.<\/strong>\n<\/p>\n\n<p>\n  If you want to change which way the turtle is facing, you can use the <bk class=\"lib\">turn <bk class=\"inner\">left<\/bk><\/bk> block. To make the block <bk class=\"lib\">turn <bk class=\"inner\">right<\/bk><\/bk>, you need to click on <bk class=\"lib\"><bk class=\"inner\">left<\/bk><\/bk> and select <strong>right<\/strong> from the dropdown list.\n<\/p>\n\n<p>\nClick the <span class=\"icon-play4\" style=\"font-size: 16px\"><\/span> button to see the turtle turning left:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-logo-left\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_turn_simple\" id=\"3\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Now the turtle is facing up! Change it to <bk class=\"lib\">turn <bk class=\"inner\">right<\/bk><\/bk> by clicking the dropdown in the block and run it again.<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\nYou can combine <bk class=\"lib\">move forward<\/bk> and <bk class=\"lib\">turn<\/bk> blocks to draw shapes:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-draw-square\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"7\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"8\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn_simple\" id=\"12\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"13\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"14\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"15\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"16\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"17\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"18\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"19\" inline=\"true\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"20\">\n                                <field name=\"NUM\">100<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Drawing a shape",
              "content_rendered":"<p>\nYou can combine <bk class=\"lib\">move forward<\/bk> and <bk class=\"lib\">turn<\/bk> blocks to draw shapes:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-draw-square\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"7\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"8\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn_simple\" id=\"12\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"13\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"14\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"15\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"16\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"17\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"18\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"19\" inline=\"true\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"20\">\n                                <field name=\"NUM\">100<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Starting from Square One",
              "purpose":"",
              "problem":"bk-logo-square-right-simple",
              "type":1,
              "problem_id":4054
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Get rect!",
              "purpose":"",
              "problem":"aca-blockly-logo-rectangle",
              "type":1,
              "problem_id":3632
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Domino",
              "purpose":"",
              "problem":"bk-logo-domino",
              "type":1,
              "problem_id":4037
            }
          ],
          "title":"Turtle"
        }
      ],
      "title":"Introducing the Turtle",
      "label":"aca-blockly-turtle-yr56-turtle-intro",
      "updated_at":"2018-05-14T06:56:06.500692+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"#markdown\nSo far our turn block has been *left* or *right* and this has been a 90 degree turn. We can turn the turtle different angles using a different turn block...\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-logo-left\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_turn\" id=\"5\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <value name=\"ANGLE\">\n      <block type=\"math_number\" id=\"6\">\n        <field name=\"NUM\">45<\/field>\n      <\/block>\n    <\/value>\n    \n  <\/block>\n<\/blockly>\n\n<\/code><\/pre>\n\n**You can think of an *angle* as a *change of direction*.**\nThe blue block can have any number typed into it. Angles are measured in *degrees*.  A 360\u00b0 turn is a complete circle.  Other turns are fractions of 360\u00b0.\n\n**Try our interactive diagram! You can drag the grey turtle around.**\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-1.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n\nYou can see that the angle is the difference between the direction the black turtle is facing and the direction the grey turtle is facing. Most shapes can be drawn as a combination of lines and directions.\n"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Turning different angles",
              "content_rendered":"<p>So far our turn block has been <em>left<\/em> or <em>right<\/em> and this has been a 90 degree turn. We can turn the turtle different angles using a different turn block...<\/p>\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-logo-left\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_turn\" id=\"5\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <value name=\"ANGLE\">\n      <block type=\"math_number\" id=\"6\">\n        <field name=\"NUM\">45<\/field>\n      <\/block>\n    <\/value>\n    \n  <\/block>\n<\/blockly>\n\n<\/code><\/pre>\n<p><strong>You can think of an <em>angle<\/em> as a <em>change of direction<\/em>.<\/strong>\nThe blue block can have any number typed into it. Angles are measured in <em>degrees<\/em>.  A 360\u00b0 turn is a complete circle.  Other turns are fractions of 360\u00b0.<\/p>\n<p><strong>Try our interactive diagram! You can drag the grey turtle around.<\/strong><\/p>\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-1.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n<p>You can see that the angle is the difference between the direction the black turtle is facing and the direction the grey turtle is facing. Most shapes can be drawn as a combination of lines and directions.<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  We've added a green <em>internal<\/em> angle between the two lines in our diagram.  You can see the 180\u00b0&nbsp;\u2013&nbsp;<span style=\"color: blue\">150\u00b0<\/span>&nbsp;=&nbsp;<span style=\"color: green\">30\u00b0<\/span> turn you need:\n<\/p>\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-2.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n\n<p>\n  <strong>If you get stuck with angle calculations, use the diagram!<\/strong>\n<\/p>"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Use our turn calculator!",
              "content_rendered":"<p>\n  We've added a green <em>internal<\/em> angle between the two lines in our diagram.  You can see the 180\u00b0&nbsp;\u2013&nbsp;<span style=\"color: blue\">150\u00b0<\/span>&nbsp;=&nbsp;<span style=\"color: green\">30\u00b0<\/span> turn you need:\n<\/p>\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-2.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n\n<p>\n  <strong>If you get stuck with angle calculations, use the diagram!<\/strong>\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: 45 angle",
              "purpose":"",
              "problem":"aca-blockly-logo-plate-bowl",
              "type":1,
              "problem_id":4062
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Equilateral triangle",
              "purpose":"",
              "problem":"aca-blockly-logo-equilateral-triangle-no-variables",
              "type":1,
              "problem_id":4113
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: House",
              "purpose":"",
              "problem":"aca-blockly-logo-house-no-variables",
              "type":1,
              "problem_id":4114
            }
          ],
          "title":"Angles"
        }
      ],
      "title":"Angles with the Turtle",
      "label":"aca-blockly-turtle-yr56-turtle-intro-angles",
      "updated_at":"2018-05-14T06:56:07.234860+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"#markdown\n\nThis is the Playground Module. You can use these questions to draw whatever you'd like.\n\nThese questions aren't for points, just for playing, so have a go!\n\nMake a work of art! Draw to your heart's content, and get those Turtles moving!"
                }
              ],
              "layout":0,
              "notes_rendered":"",
              "title":"Playground Awaits!",
              "content_rendered":"<p>This is the Playground Module. You can use these questions to draw whatever you'd like.<\/p>\n<p>These questions aren't for points, just for playing, so have a go!<\/p>\n<p>Make a work of art! Draw to your heart's content, and get those Turtles moving!<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Playground 1!",
              "purpose":"",
              "problem":"aca-blockly-logo-playground-0",
              "type":1,
              "problem_id":4751
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Playground 2!",
              "purpose":"",
              "problem":"aca-blockly-logo-playground-1",
              "type":1,
              "problem_id":4752
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Playground 3!",
              "purpose":"",
              "problem":"aca-blockly-logo-playground-2",
              "type":1,
              "problem_id":4753
            }
          ],
          "title":"Turtle Playground"
        }
      ],
      "title":"Playground!",
      "label":"aca-blockly-turtle-yr56-playground",
      "updated_at":"2018-05-14T06:56:13.737866+00:00",
      "concepts":[

      ]
    }
  ],
  "problems":[
    {
      "language":1,
      "title":"Row of terraces",
      "notes":"",
      "updated_at":"2017-12-10T10:42:44.479004+00:00",
      "label":"aca-blockly-logo-houses-in-a-row-repeat",
      "content":"<p>\n  We've already drawn one house - now let's draw a whole row of houses!\n<\/p>\n\n<p>\n  We've given you the code to draw one house, and angled the turtle to the right spot for drawing the next house. Your task is to change the program so it draws 5 houses in a row!<\/p>\n\n<p>The result should look like this:<\/p>\n\n\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"84b9e1c2-d7f7-11e7-ba3f-22000af40496\"]\n[\"create_shape\",\"84b9edf2-d7f7-11e7-ba3f-22000af40496\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"filled\":true,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0]}]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-0.5235987755982988]\n[\"forward\",30]\n[\"left\",-2.0943951023931953]\n[\"forward\",30]\n[\"left\",1.0471975511965976]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-0.5235987755982988]\n[\"forward\",30]\n[\"left\",-2.0943951023931953]\n[\"forward\",30]\n[\"left\",1.0471975511965976]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-0.5235987755982988]\n[\"forward\",30]\n[\"left\",-2.0943951023931953]\n[\"forward\",30]\n[\"left\",1.0471975511965976]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-0.5235987755982988]\n[\"forward\",30]\n[\"left\",-2.0943951023931953]\n[\"forward\",30]\n[\"left\",1.0471975511965976]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-0.5235987755982988]\n[\"forward\",30]\n[\"left\",-2.0943951023931953]\n[\"forward\",30]\n[\"left\",1.0471975511965976]\n[\"end_animation\"]\n\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>You only need to add one <bk class=\"control\">repeat<\/bk> block to solve this question!<\/p>\n<\/aside>\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[{\"content\":\"<xml xmlns=\\\"http:\\\/\\\/www.w3.org\\\/1999\\\/xhtml\\\">\\n  <variables><\\\/variables>\\n  <block type=\\\"turtle_forward\\\" id=\\\"17\\\" x=\\\"38\\\" y=\\\"20\\\">\\n    <value name=\\\"DISTANCE\\\">\\n      <block type=\\\"math_number\\\" id=\\\"18\\\">\\n        <field name=\\\"NUM\\\">30<\\\/field>\\n      <\\\/block>\\n    <\\\/value>\\n    <next>\\n      <block type=\\\"turtle_turn\\\" id=\\\"29\\\">\\n        <field name=\\\"DIRECTION\\\">RIGHT<\\\/field>\\n        <value name=\\\"ANGLE\\\">\\n          <block type=\\\"math_number\\\" id=\\\"30\\\">\\n            <field name=\\\"NUM\\\">90<\\\/field>\\n          <\\\/block>\\n        <\\\/value>\\n        <next>\\n          <block type=\\\"turtle_forward\\\" id=\\\"19\\\">\\n            <value name=\\\"DISTANCE\\\">\\n              <block type=\\\"math_number\\\" id=\\\"20\\\">\\n                <field name=\\\"NUM\\\">30<\\\/field>\\n              <\\\/block>\\n            <\\\/value>\\n            <next>\\n              <block type=\\\"turtle_turn\\\" id=\\\"31\\\">\\n                <field name=\\\"DIRECTION\\\">RIGHT<\\\/field>\\n                <value name=\\\"ANGLE\\\">\\n                  <block type=\\\"math_number\\\" id=\\\"32\\\">\\n                    <field name=\\\"NUM\\\">90<\\\/field>\\n                  <\\\/block>\\n                <\\\/value>\\n                <next>\\n                  <block type=\\\"turtle_forward\\\" id=\\\"21\\\">\\n                    <value name=\\\"DISTANCE\\\">\\n                      <block type=\\\"math_number\\\" id=\\\"22\\\">\\n                        <field name=\\\"NUM\\\">30<\\\/field>\\n                      <\\\/block>\\n                    <\\\/value>\\n                    <next>\\n                      <block type=\\\"turtle_turn\\\" id=\\\"33\\\">\\n                        <field name=\\\"DIRECTION\\\">RIGHT<\\\/field>\\n                        <value name=\\\"ANGLE\\\">\\n                          <block type=\\\"math_number\\\" id=\\\"34\\\">\\n                            <field name=\\\"NUM\\\">90<\\\/field>\\n                          <\\\/block>\\n                        <\\\/value>\\n                        <next>\\n                          <block type=\\\"turtle_forward\\\" id=\\\"23\\\">\\n                            <value name=\\\"DISTANCE\\\">\\n                              <block type=\\\"math_number\\\" id=\\\"24\\\">\\n                                <field name=\\\"NUM\\\">30<\\\/field>\\n                              <\\\/block>\\n                            <\\\/value>\\n                            <next>\\n                              <block type=\\\"turtle_turn\\\" id=\\\"6\\\">\\n                                <field name=\\\"DIRECTION\\\">RIGHT<\\\/field>\\n                                <value name=\\\"ANGLE\\\">\\n                                  <block type=\\\"math_number\\\" id=\\\"7\\\">\\n                                    <field name=\\\"NUM\\\">30<\\\/field>\\n                                  <\\\/block>\\n                                <\\\/value>\\n                                <next>\\n                                  <block type=\\\"turtle_forward\\\" id=\\\"13\\\">\\n                                    <value name=\\\"DISTANCE\\\">\\n                                      <block type=\\\"math_number\\\" id=\\\"14\\\">\\n                                        <field name=\\\"NUM\\\">30<\\\/field>\\n                                      <\\\/block>\\n                                    <\\\/value>\\n                                    <next>\\n                                      <block type=\\\"turtle_turn\\\" id=\\\"25\\\">\\n                                        <field name=\\\"DIRECTION\\\">RIGHT<\\\/field>\\n                                        <value name=\\\"ANGLE\\\">\\n                                          <block type=\\\"math_number\\\" id=\\\"26\\\">\\n                                            <field name=\\\"NUM\\\">120<\\\/field>\\n                                          <\\\/block>\\n                                        <\\\/value>\\n                                        <next>\\n                                          <block type=\\\"turtle_forward\\\" id=\\\"15\\\">\\n                                            <value name=\\\"DISTANCE\\\">\\n                                              <block type=\\\"math_number\\\" id=\\\"16\\\">\\n                                                <field name=\\\"NUM\\\">30<\\\/field>\\n                                              <\\\/block>\\n                                            <\\\/value>\\n                                            <next>\\n                                              <block type=\\\"turtle_turn\\\" id=\\\"27\\\">\\n                                                <field name=\\\"DIRECTION\\\">LEFT<\\\/field>\\n                                                <value name=\\\"ANGLE\\\">\\n                                                  <block type=\\\"math_number\\\" id=\\\"28\\\">\\n                                                    <field name=\\\"NUM\\\">60<\\\/field>\\n                                                  <\\\/block>\\n                                                <\\\/value>\\n                                              <\\\/block>\\n                                            <\\\/next>\\n                                          <\\\/block>\\n                                        <\\\/next>\\n                                      <\\\/block>\\n                                    <\\\/next>\\n                                  <\\\/block>\\n                                <\\\/next>\\n                              <\\\/block>\\n                            <\\\/next>\\n                          <\\\/block>\\n                        <\\\/next>\\n                      <\\\/block>\\n                    <\\\/next>\\n                  <\\\/block>\\n                <\\\/next>\\n              <\\\/block>\\n            <\\\/next>\\n          <\\\/block>\\n        <\\\/next>\\n      <\\\/block>\\n    <\\\/next>\\n  <\\\/block>\\n<\\\/xml>\",\"path\":\"program.blockly\",\"is_static\":false}]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Blocks in a Row",
      "notes":"",
      "updated_at":"2017-12-10T11:16:50.883973+00:00",
      "label":"aca-blockly-logo-square-block-row",
      "content":"<p>\n  Let's draw a row of blocks!\n<\/p>\n\n<p>\n  The row should be 6 blocks long, and each square should have sides <strong>30 turtle steps<\/strong> long.\n<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"685bab80-d7ef-11e7-bf91-22000afc90e2\"]\n[\"create_shape\",\"685bb9a4-d7ef-11e7-bf91-22000afc90e2\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":true}]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"end_animation\"]\n<\/code><\/pre>\n\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":"This question asks students to use a repeat block to draw a sequence of squares. Students have just seen a very similar example on the previous slide, and they have also seen how to use a repeat block to draw a single square with fewer blocks, so some might try to combine the two. We've provided both solutions."
    },
    {
      "language":1,
      "title":"Back to Square One",
      "notes":"",
      "updated_at":"2017-12-10T03:17:05.900626+00:00",
      "label":"bk-logo-square-right-simple-repeat",
      "content":"#markdown\nWrite a program to draw a square below the turtle.\n\nTry using the <bk class=\"control\">repeat<\/bk> block to make life easier!\n\nEach side should be **50 turtle steps** long.\n\n```lang:logo;logo-animation;\n\n[\"begin_animation\",400,300,10,\"f57a381a-3395-11e6-9b70-22000ae85508\"]\n[\"create_shape\",\"f57a4eae-3395-11e6-9b70-22000ae85508\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"end_animation\"]\n\n```\n\n> ## Hint\n>\n> Look for patterns that repeat themselves, and place those inside the <bk class=\"control\">repeat<\/bk> block!",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Staircase",
      "notes":"",
      "updated_at":"2017-12-10T11:00:11.806976+00:00",
      "label":"aca-blockly-logo-staircase-simple",
      "content":"#markdown\n\nWrite a program that draws a staircase of **4 steps** that are **10 steps high** and **30 steps wide**.\n\nThe steps will go up and to the right of the screen, as shown in the example below.\n\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"513f8b22-d648-11e7-b2eb-22000a07892b\"]\n[\"create_shape\",\"513f984c-d648-11e7-b2eb-22000a07892b\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":true,\"fillcolor\":[0,0,0]}]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>Think about what direction the turtle needs to face before you start drawing your steps.<\/p>\n<\/aside>",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Step up",
      "notes":"",
      "updated_at":"2017-12-10T11:47:57.746588+00:00",
      "label":"aca-blockly-logo-step-up-how-many-steps",
      "content":"<p>\n  Write a program that draws steps. How many steps? That's the question!\n<\/p>\n<p>\n  Your program should ask the user how many steps to draw, and then draw them. Each step should be \n  <strong>10 Turtle steps tall<\/strong>, and \n  <strong>20 Turtle steps wide<\/strong>.\n<\/p>\n\n<p>\n  The steps will go up and to the right of the screen, as shown in the example below.\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Steps: <\/o><i>2<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"9bd2176e-da43-11e7-ab60-819306ef41db\"]\n[\"create_shape\",\"9bd2251a-da43-11e7-ab60-819306ef41db\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"filled\":true,\"pensize\":1,\"pencolor\":[0,0,0]}]\n[\"input_begin\",\"Steps: \"]\n[\"input_end\"]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  Here's another example.\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Steps: <\/o><i>8<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"af5c78c4-da43-11e7-81ce-974ad039852f\"]\n[\"create_shape\",\"af5c8c38-da43-11e7-81ce-974ad039852f\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":true}]\n[\"input_begin\",\"Steps: \"]\n[\"input_end\"]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>How many steps you draw depends on the number you read in and save in a variable!<\/p>\n\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[
        "input"
      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Coloured Cards",
      "notes":"",
      "updated_at":"2017-12-10T11:46:53.681149+00:00",
      "label":"aca-blockly-logo-any-coloured-cards",
      "content":"<p>\n  In many sports, coloured cards are used to let players know if a penalty has been awarded. For example, yellow cards are often a warning, and red cards send a player off.\n<\/p>\n<p>\n  Write a program which asks the user what colour card should be displayed, and draws it. The card should be <strong>80<\/strong> Turtle steps wide, and <strong>120<\/strong> Turtle steps tall.\n<\/p>\n\n<p><strong>We've given you a start!<\/strong>\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Colour: <\/o><i>red<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"9c8a5b3e-d981-11e7-86aa-c9748b64d101\"]\n[\"create_shape\",\"9c8a67be-d981-11e7-86aa-c9748b64d101\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"filled\":true}]\n[\"pen\",{\"pencolor\":[0,0,0],\"pendown\":true,\"speed\":3,\"fillcolor\":[255,0,0],\"tilt\":0.0,\"filled\":false,\"pensize\":1,\"shown\":true,\"heading\":0.0}]\n[\"begin_fill\"]\n[\"forward\",80]\n[\"left\",1.5707963267948966]\n[\"forward\",120]\n[\"left\",1.5707963267948966]\n[\"forward\",80]\n[\"left\",1.5707963267948966]\n[\"forward\",120]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The bottom left corner should be in the center of the page, where the turtle starts.\n<\/p>\n\n<p>\n  Here's an example with an unusual colour.\n<\/p>\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Colour: <\/o><i>cornflowerblue<\/i>\n<o><\/o>\n<\/code><\/pre>\n<div class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"2b66fde4-d982-11e7-a7ce-096e0169fea3\"]\n[\"create_shape\",\"2b670b4a-d982-11e7-a7ce-096e0169fea3\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1}]\n[\"input_begin\",\"Colour: \"]\n[\"input_end\"]\n[\"pen\",{\"tilt\":0.0,\"pensize\":1,\"pencolor\":[0,0,0],\"heading\":0.0,\"shown\":true,\"pendown\":true,\"filled\":false,\"fillcolor\":[100,149,237],\"speed\":3}]\n[\"begin_fill\"]\n[\"forward\",80]\n[\"left\",1.5707963267948966]\n[\"forward\",120]\n[\"left\",1.5707963267948966]\n[\"forward\",80]\n[\"left\",1.5707963267948966]\n[\"forward\",120]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/div>\n\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>We will only test your code with colours that Turtle understands!<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[{\"content\":\"<xml xmlns=\\\"http:\\\/\\\/www.w3.org\\\/1999\\\/xhtml\\\">\\n  <variables>\\n    <variable type=\\\"\\\" id=\\\"ce]BG_6\\\/zgxq%m0A1li^\\\">colour<\\\/variable>\\n  <\\\/variables>\\n  <block type=\\\"variables_set\\\" id=\\\"GYK~ZY%@a?1I6C(02v6A\\\" x=\\\"2\\\" y=\\\"5\\\">\\n    <field name=\\\"VAR\\\" id=\\\"ce]BG_6\\\/zgxq%m0A1li^\\\" variabletype=\\\"\\\">colour<\\\/field>\\n    <value name=\\\"VALUE\\\">\\n      <block type=\\\"io_ask_text\\\" id=\\\"Mwr7JE@,#`#E5QTO[.p?\\\">\\n        <value name=\\\"TEXT\\\">\\n          <block type=\\\"text\\\" id=\\\"qrSc)fR}\\\/^T(I5-Y;^j;\\\">\\n            <field name=\\\"TEXT\\\">Colour:<\\\/field>\\n          <\\\/block>\\n        <\\\/value>\\n      <\\\/block>\\n    <\\\/value>\\n    <next>\\n      <block type=\\\"turtle_fill_text\\\" id=\\\"9`@gV$GM%ZV~93Qytv9.\\\"><\\\/block>\\n    <\\\/next>\\n  <\\\/block>\\n<\\\/xml>\",\"path\":\"program.blockly\",\"is_static\":false,\"undeletable\":true}]",
      "concepts":[
        "input"
      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"io_ask_text\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_pencolor_text\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Purple square",
      "notes":"",
      "updated_at":"2017-12-06T04:53:11.813789+00:00",
      "label":"aca-blockly-logo-any-square-purple",
      "content":"<p>\n  Write a program which asks the user what size square to draw, then draws it and fills it with purple.\n<\/p>\n<p>\n  The user will type a side length, and your program should use that side length input (in turtle steps) to draw the square.\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Side length: <\/o><i>80<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"468d8950-d97b-11e7-9645-37befb5ddb05\"]\n[\"create_shape\",\"468da340-d97b-11e7-9645-37befb5ddb05\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"input_begin\",\"Side length: \"]\n[\"input_end\"]\n[\"pen\",{\"pensize\":1,\"pendown\":true,\"fillcolor\":[160,32,240],\"tilt\":0.0,\"shown\":true,\"speed\":3,\"filled\":false,\"heading\":0.0,\"pencolor\":[0,0,0]}]\n[\"begin_fill\"]\n[\"forward\",80]\n[\"left\",1.5707963267948966]\n[\"forward\",80]\n[\"left\",1.5707963267948966]\n[\"forward\",80]\n[\"left\",1.5707963267948966]\n[\"forward\",80]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The bottom left corner should be in the center of the page, where the turtle starts.\n<\/p>\n\n<p>\n  Here's an example where the user has chosen a much smaller side length.\n<\/p>\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Side length: <\/o><i>30<\/i>\n<o><\/o>\n<\/code><\/pre>\n<div class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"646d1828-d97b-11e7-b5a7-6d7f3b48dfec\"]\n[\"create_shape\",\"646d2444-d97b-11e7-b5a7-6d7f3b48dfec\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":true,\"fillcolor\":[0,0,0]}]\n[\"input_begin\",\"Side length: \"]\n[\"input_end\"]\n[\"pen\",{\"pencolor\":[0,0,0],\"pendown\":true,\"fillcolor\":[160,32,240],\"speed\":3,\"tilt\":0.0,\"pensize\":1,\"heading\":0.0,\"shown\":true,\"filled\":false}]\n[\"begin_fill\"]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/div>\n\n<p>\n  You should test your program with a whole range of different sizes!\n  How big can the square be before it goes off the edge of the page?\n<\/p>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>The <bk class=\"math\">ask<\/bk> block is in the Input menu.<\/p>\n  <p>You'll need to use a <bk class=\"var\">variable<\/bk>!<\/p>\n  <figure class=\"align-center\">\n  <img alt=\"Gif of using the variable and input blocks\" src=\"https:\/\/groklearning-cdn.com\/problems\/paJ9Sys4iRAGLvfRjQGL7P\/variables_reminder.gif\">\n  \n<\/figure>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[
        "input"
      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_fill_dropdown\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Fallout Shelter",
      "notes":"",
      "updated_at":"2018-04-02T13:01:02.746897+00:00",
      "label":"aca-blockly-logo-fallout-shelter",
      "content":"#markdown\nThe symbol for a fallout shelter is three **black** triangles on a **yellow** background. \n\nLet's draw this symbol with the turtle! \n\nMake the **pencolor** **dimgrey** so the edges stand out.\n\nEach side of each triangle is **100 turtle steps** long and the triangles have all angles of **60 degrees**. The angle between each triangle is also **60 degrees**.\n  \nThe output of your program should look like this:\n\n<div class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"a6c45d56-dd51-11e7-a700-0502b534c177\"]\n[\"create_shape\",\"a6c4692c-dd51-11e7-a700-0502b534c177\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"pensize\":1}]\n[\"bgcolor\",[255,255,0]]\n[\"pen\",{\"tilt\":0.0,\"pensize\":1,\"pendown\":true,\"filled\":false,\"fillcolor\":[0,0,0],\"shown\":true,\"speed\":3,\"heading\":0.0,\"pencolor\":[105,105,105]}]\n[\"begin_fill\"]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"left\",-2.0943951023931953]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/div>\n\nThe *centre* of the symbol is where the turtle starts.\n\n> ## Hint\n> \n> You need to do an angle calculation to draw this shape!\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pencolor_text\",\"turtle_bgcolor_text\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Swim between the flags!",
      "notes":"",
      "updated_at":"2017-12-10T10:32:02.273152+00:00",
      "label":"aca-blockly-logo-lifesaving-flag",
      "content":"#markdown\n\nIn Australia it's very important when we go to the beach to swim between the flags. The flags are a very specific colour pattern to make them easy to recognise. They have a red rectangle on the top and a golden yellow colour on the bottom. \n\nGet the turtle to draw a lifesaving flag. It should have one rectangle on the top that is **red** and one rectangle on the bottom that is **yellow**. The rectangles should be **120 turtle steps** long and **45 turtle steps** high. \n\nThe turtle should start on the left in the middle of the flag:\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"08345c04-dbd0-11e7-9faf-33ccbc726007\"]\n[\"create_shape\",\"083467c6-dbd0-11e7-9faf-33ccbc726007\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":true}]\n[\"pen\",{\"pencolor\":[0,0,0],\"speed\":3,\"pensize\":1,\"fillcolor\":[255,0,0],\"heading\":0.0,\"pendown\":true,\"tilt\":0.0,\"shown\":true,\"filled\":false}]\n[\"begin_fill\"]\n[\"forward\",120]\n[\"left\",1.5707963267948966]\n[\"forward\",45]\n[\"left\",1.5707963267948966]\n[\"forward\",120]\n[\"left\",1.5707963267948966]\n[\"forward\",45]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"pen\",{\"fillcolor\":[255,255,0]}]\n[\"begin_fill\"]\n[\"forward\",120]\n[\"left\",-1.5707963267948966]\n[\"forward\",45]\n[\"left\",-1.5707963267948966]\n[\"forward\",120]\n[\"left\",-1.5707963267948966]\n[\"forward\",45]\n[\"left\",-1.5707963267948966]\n[\"end_fill\"]\n[\"end_animation\"]\n\n\n\n<\/code><\/pre>\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_pencolor_dropdown\",\"turtle_pensize\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Square Pennant Flags",
      "notes":"",
      "updated_at":"2017-12-10T11:44:24.286292+00:00",
      "label":"aca-blockly-logo-square-pennant-flags",
      "content":"#markdown\n<h3>\n  Papel Picado\n<\/h3>\n\nIn Mexico decorations for parties and festivals often include [Papel picado](https:\/\/en.wikipedia.org\/wiki\/Papel_picado). These are very colourful squares of paper which have beautiful cut-out designs.\n\nYou're going to make the turtle draw a string of 5 simple colourful Papel picado.\n\nThe **five** flags should be squares that are **20 turtle steps long** on each side, there will need to be an **extra line** to join the flags together, this will also be 20 turtle steps long. To make it super colourful you need to get the turtle to fill with **hot pink**. \n\n\n```lang:logo;logo-animation;\n\n[\"begin_animation\",400,300,10,\"fabd3754-d8cc-11e7-a933-49fcb1da4e78\"]\n[\"create_shape\",\"fabd4488-d8cc-11e7-a933-49fcb1da4e78\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":true,\"fillcolor\":[0,0,0]}]\n[\"pen\",{\"pencolor\":[0,0,0],\"pendown\":true,\"heading\":0.0,\"filled\":false,\"tilt\":0.0,\"speed\":3,\"pensize\":1,\"shown\":true,\"fillcolor\":[255,105,180]}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"end_fill\"]\n[\"forward\",40]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"end_fill\"]\n[\"forward\",40]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"end_fill\"]\n[\"forward\",40]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"end_fill\"]\n[\"forward\",40]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"end_fill\"]\n[\"forward\",40]\n[\"end_animation\"]\n\n```\n\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_pencolor_dropdown\",\"turtle_pensize\",\"turtle_fill_dropdown\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Build a sturdy house",
      "notes":"",
      "updated_at":"2017-12-10T11:40:04.995249+00:00",
      "label":"aca-blockly-logo-solid-thick-house",
      "content":"<p>\n  The house we drew earlier looks a bit flimsy. Let's draw one that looks more sturdy!\n<\/p>\n\n<p>\n  Draw an <strong>orange<\/strong> house with walls of <strong>pen size 4<\/strong>!\n<\/p>\n\n<p>\n  Each side should be <strong>60 turtle steps<\/strong> long.\n<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"0f46ac4a-d8c9-11e7-b815-c9c694843db9\"]\n[\"create_shape\",\"0f46b942-d8c9-11e7-b815-c9c694843db9\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"pen\",{\"heading\":0.0,\"speed\":3,\"tilt\":0.0,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":false,\"shown\":true,\"pensize\":4,\"pendown\":true}]\n[\"pen\",{\"pencolor\":[255,165,0]}]\n[\"forward\",60]\n[\"left\",-1.5707963267948966]\n[\"forward\",60]\n[\"left\",-1.5707963267948966]\n[\"forward\",60]\n[\"left\",-1.5707963267948966]\n[\"forward\",60]\n[\"left\",-0.5235987755982988]\n[\"forward\",60]\n[\"left\",-2.0943951023931953]\n[\"forward\",60]\n[\"end_animation\"]\n<\/code><\/pre>\n\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pencolor_dropdown\",\"turtle_pensize\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Skyblue Square",
      "notes":"",
      "updated_at":"2017-12-10T11:29:29.732139+00:00",
      "label":"aca-blockly-logo-square-right-simple-skyblue",
      "content":"<p>\n  Let's add some colour to our square!\n<\/p>\n\n<p>\n  Write a program to draw a skyblue square using the turtle.\n<\/p>\n\n<p>\n  Each side should be <strong>80 turtle steps<\/strong> long.\n<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"51b238e4-d8c2-11e7-b89f-6d5ea03e331a\"]\n[\"create_shape\",\"51b24500-d8c2-11e7-b89f-6d5ea03e331a\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pencolor\":[0,0,0],\"pensize\":1,\"fillcolor\":[0,0,0]}]\n[\"pen\",{\"pensize\":1,\"speed\":3,\"pendown\":true,\"fillcolor\":[0,0,0],\"filled\":false,\"tilt\":0.0,\"heading\":0.0,\"shown\":true,\"pencolor\":[135,206,235]}]\n[\"forward\",80]\n[\"left\",-1.5707963267948966]\n[\"forward\",80]\n[\"left\",-1.5707963267948966]\n[\"forward\",80]\n[\"left\",-1.5707963267948966]\n[\"forward\",80]\n[\"left\",-1.5707963267948966]\n[\"end_animation\"]\n<\/code><\/pre>\n\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_pencolor_dropdown\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Traffic light",
      "notes":"",
      "updated_at":"2018-02-09T04:31:43.153529+00:00",
      "label":"aca-blockly-logo-square-traffic-light",
      "content":"<p>\n  You're designing a traffic light system for robots! It's a square that is <strong>60 Turtle steps<\/strong> on each side.\n<\/p>\n<p>\n  Write a program that reads in whether it is safe to go. If it is safe, you should draw a square with <strong>green<\/strong> fill and lines of thickness <strong>8<\/strong>:\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Is it safe to go? <\/o><i>yes<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"e5c9e2a0-dc84-11e7-b9a9-f17fdba21ca5\"]\n[\"create_shape\",\"e5c9ee8a-dc84-11e7-b9a9-f17fdba21ca5\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"pensize\":1,\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"input_begin\",\"Is it safe to go? \"]\n[\"input_end\"]\n[\"pen\",{\"pencolor\":[0,0,0],\"speed\":3,\"fillcolor\":[0,0,0],\"filled\":false,\"pensize\":8,\"tilt\":0.0,\"pendown\":true,\"heading\":0.0,\"shown\":true}]\n[\"pen\",{\"fillcolor\":[0,255,0]}]\n[\"begin_fill\"]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  If it's not safe, you should draw a <strong>red<\/strong> square with lines of thickness <strong>8<\/strong>:\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Is it safe to go? <\/o><i>no<\/i>\n<o><\/o>\n<\/code><\/pre>\n<div class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"11895966-dc85-11e7-8862-1db0264e94dc\"]\n[\"create_shape\",\"118965dc-dc85-11e7-8862-1db0264e94dc\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"filled\":true,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0]}]\n[\"input_begin\",\"Is it safe to go? \"]\n[\"input_end\"]\n[\"pen\",{\"speed\":3,\"tilt\":0.0,\"shown\":true,\"pencolor\":[0,0,0],\"pensize\":8,\"filled\":false,\"pendown\":true,\"fillcolor\":[0,0,0],\"heading\":0.0}]\n[\"pen\",{\"fillcolor\":[255,0,0]}]\n[\"begin_fill\"]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/div>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>One way to solve this question is to use two variables! One for the user's answer, and one for the colour you should use to draw!<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[
        "input"
      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"io_ask_text\",\"decisions_if_else\",\"loops_repeat_ext\",\"logic_compare\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_pensize\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"The Three Little Pigs",
      "notes":"<p>\n  This question has two parts:\n<\/p>\n\n<ol>\n  <li>to ask the user for the material (and set the pen colour);<\/li>\n  <li>to actually draw the house.<\/li>\n<\/ol>\n\n<p>\n  For the first part, you need to <bk class=\"str\">ask<\/bk> for the <bk class=\"var\"><bk class=\"inner\">material<\/bk><\/bk>:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-input\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">material<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_text\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">Material:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  The <bk class=\"var\"><bk class=\"inner\">material<\/bk><\/bk> then needs to be compared to <code data-lang=\"str\">straw<\/code>, <code data-lang=\"str\">sticks<\/code> or <code data-lang=\"str\">bricks<\/code>. With 3 options, we can use an <bk class=\"control\">if<\/bk>-<bk class=\"control\">elif<\/bk>-<bk class=\"control\">else<\/bk> block:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-if-elif\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">material<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_text\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">Material:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"decisions_if_elif_else\" id=\"7\" inline=\"true\">\n        <value name=\"IF0\">\n          <block type=\"logic_compare\" id=\"8\" inline=\"true\">\n            <field name=\"OP\">EQ<\/field>\n            <value name=\"A\">\n              <block type=\"variables_get\" id=\"16\">\n                <field name=\"VAR\">material<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"text\" id=\"18\">\n                <field name=\"TEXT\">straw<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <value name=\"IF1\">\n          <block type=\"logic_compare\" id=\"19\" inline=\"true\">\n            <field name=\"OP\">EQ<\/field>\n            <value name=\"A\">\n              <block type=\"variables_get\" id=\"20\">\n                <field name=\"VAR\">material<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"text\" id=\"21\">\n                <field name=\"TEXT\">sticks<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  For each comparison, we need to set the <bk class=\"lib\">pencolor<\/bk>:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-pencolor\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">material<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_text\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">Material:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"decisions_if_elif_else\" id=\"4\" inline=\"true\">\n        <value name=\"IF0\">\n          <block type=\"logic_compare\" id=\"5\" inline=\"true\">\n            <field name=\"OP\">EQ<\/field>\n            <value name=\"A\">\n              <block type=\"variables_get\" id=\"6\">\n                <field name=\"VAR\">material<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"text\" id=\"7\">\n                <field name=\"TEXT\">straw<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <statement name=\"DO0\">\n          <block type=\"turtle_pencolor_dropdown\" id=\"19\">\n            <field name=\"COLOR\">orange<\/field>\n          <\/block>\n        <\/statement>\n        <value name=\"IF1\">\n          <block type=\"logic_compare\" id=\"8\" inline=\"true\">\n            <field name=\"OP\">EQ<\/field>\n            <value name=\"A\">\n              <block type=\"variables_get\" id=\"9\">\n                <field name=\"VAR\">material<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"text\" id=\"10\">\n                <field name=\"TEXT\">sticks<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <statement name=\"DO1\">\n          <block type=\"turtle_pencolor_dropdown\" id=\"20\">\n            <field name=\"COLOR\">black<\/field>\n          <\/block>\n        <\/statement>\n        <statement name=\"ELSE\">\n          <block type=\"turtle_pencolor_dropdown\" id=\"21\">\n            <field name=\"COLOR\">slategrey<\/field>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  We also need to set the pen size of our turtle:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-pensize\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_pensize\" id=\"30\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"SIZE\">\n      <block type=\"math_number\" id=\"31\">\n        <field name=\"NUM\">10<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Now that you know what colour to draw the house, and how thick the lines are, we can start drawing! There's a few different ways to draw the same house, but we're going to draw the roof first.\n<\/p>\n\n<p>Let's make a plan! First, remember that the turtle starts facing to the right. Since we start at the left-most point of the roof, we need to rotate 60 degrees to the <code data-lang=\"py3\">left<\/code> (counter-clockwise) to point towards the peak. Move <code data-lang=\"py3\">forward<\/code> 100 steps, then rotate 120 degrees, move forward 100 steps, rotate 120 degrees, and move forward again. Your code should look like this:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-roof\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_turn\" id=\"44\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <value name=\"ANGLE\">\n      <block type=\"math_number\" id=\"45\">\n        <field name=\"NUM\">60<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"32\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"33\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"34\" inline=\"true\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"35\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"36\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"37\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"38\" inline=\"true\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"39\">\n                        <field name=\"NUM\">120<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"40\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"41\">\n                            <field name=\"NUM\">100<\/field>\n                          <\/block>\n                        <\/value>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  If you run the code now, you'll see that your turtle is facing to the left. We still need to add three more sides to our house. Let's turn left, move forward, three times: \n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-house\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_turn\" id=\"44\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <value name=\"ANGLE\">\n      <block type=\"math_number\" id=\"45\">\n        <field name=\"NUM\">60<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"32\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"33\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"34\" inline=\"true\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"35\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"36\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"37\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"38\" inline=\"true\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"39\">\n                        <field name=\"NUM\">120<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"40\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"41\">\n                            <field name=\"NUM\">100<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"54\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"55\" inline=\"true\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"56\">\n                                    <field name=\"NUM\">100<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"57\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"58\" inline=\"true\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"59\">\n                                            <field name=\"NUM\">100<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_turn_simple\" id=\"60\">\n                                            <field name=\"DIRECTION\">LEFT<\/field>\n                                            <next>\n                                              <block type=\"turtle_forward\" id=\"61\" inline=\"true\">\n                                                <value name=\"DISTANCE\">\n                                                  <block type=\"math_number\" id=\"62\">\n                                                    <field name=\"NUM\">100<\/field>\n                                                  <\/block>\n                                                <\/value>\n                                              <\/block>\n                                            <\/next>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Now we just need to put all of these pieces together!\n<\/p>\n",
      "updated_at":"2017-12-10T12:03:27.311113+00:00",
      "label":"aca-blockly-logo-three-little-pigs-house-loop",
      "content":"<p>\n  In the fairytale <a href=\"https:\/\/en.wikipedia.org\/wiki\/The_Three_Little_Pigs\" target=\"_blank\">The Three Little Pigs<\/a>, the first pig builds a house out of straw, the second sticks, and the third bricks.\n<\/p>\n\n<p>\n  Write a program which asks the user whether they want to build using <code data-lang=\"in\">straw<\/code>, <code data-lang=\"in\">sticks<\/code>, or <code data-lang=\"in\">bricks<\/code>, and then draws the house in the appropriate colour.\n  A straw house should be <code data-lang=\"txt\">orange<\/code>, a stick house should be <code data-lang=\"txt\">black<\/code>, and a brick house should be <code data-lang=\"txt\">slategray<\/code>.\n<\/p>\n\n<table class=\"table table-bordered\">\n  <thead>\n  <tr><th>Material<\/th><th>Colour<\/th><\/tr>\n  <\/thead>\n  <tbody>\n  <tr><td><code data-lang=\"txt\">straw<\/code><\/td><td><code data-lang=\"txt\">orange<\/code><\/td><\/tr>\n  <tr><td><code data-lang=\"txt\">sticks<\/code><\/td><td><code data-lang=\"txt\">black<\/code><\/td><\/tr>\n  <tr><td><code data-lang=\"txt\">bricks<\/code><\/td><td><code data-lang=\"txt\">slategray<\/code><\/td><\/tr>\n  <\/tbody>\n<\/table>\n\n<p>\n  The triangle at the top should have angles that are all 60\u00b0.\n<\/p>\n\n<p>\n  The triangle and square sides should all be 100 turtle steps long and 10 steps wide \u2013\u00a0using <bk class=\"lib\">pensize<\/bk>.\n<\/p>\n\n<p>Here's a straw house:<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Material: <\/o><\/i>straw<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"f569b0fe-5cac-11e6-93ca-22000af404a2\"]\n[\"create_shape\",\"f569cca6-5cac-11e6-93ca-22000af404a2\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"pensize\":1}]\n[\"input_begin\",\"Material: \"]\n[\"input_end\"]\n[\"pen\",{\"heading\":0.0,\"pencolor\":[255,165,0],\"speed\":3,\"pendown\":true,\"filled\":false,\"tilt\":0.0,\"fillcolor\":[0,0,0],\"pensize\":1,\"shown\":true}]\n[\"pen\",{\"pensize\":10}]\n[\"left\",1.0471975511965976]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>Here's a stick house:<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Material: <\/o><\/i>sticks<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\"><code data-lang=\"logo\">\n{\"scaley\":1.0,\"zerox\":200,\"shapes\":[{\"filled\":false,\"kind\":\"line\",\"points\":[[0.0,0.0],[50.000000000000014,86.60254037844386],[100.00000000000003,0.0],[2.842170943040401e-14,-3.2162452993532734e-14],[1.005200744319371e-14,-100.00000000000003],[100.00000000000001,-100.00000000000003],[100.00000000000001,-2.842170943040401e-14]],\"id\":\"4eb5e2d6-5cad-11e6-b5e8-22000ae85508\",\"pencolor\":[0,0,0],\"pensize\":10}],\"scalex\":1.0,\"bgcolor\":[255,255,255],\"height\":300,\"width\":400,\"zeroy\":150}\n<\/code><\/pre>\n\n<p>And here's a brick house:<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Material: <\/o><\/i>bricks<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\"><code data-lang=\"logo\">\n{\"width\":400,\"zerox\":200,\"bgcolor\":[255,255,255],\"scalex\":1.0,\"height\":300,\"scaley\":1.0,\"shapes\":[{\"kind\":\"line\",\"id\":\"58f80314-5cad-11e6-a8c9-22000a068b96\",\"pensize\":10,\"filled\":false,\"pencolor\":[112,128,144],\"points\":[[0.0,0.0],[50.000000000000014,86.60254037844386],[100.00000000000003,0.0],[2.842170943040401e-14,-3.2162452993532734e-14],[1.005200744319371e-14,-100.00000000000003],[100.00000000000001,-100.00000000000003],[100.00000000000001,-2.842170943040401e-14]]}],\"zeroy\":150}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[
        "input",
        "if-elif-else"
      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"io_ask_text\",\"decisions_if_elif_else_compare\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pencolor_dropdown\",\"turtle_pensize\"]",
      "teacher_notes":"<p>\n  This question has two parts:\n<\/p>\n\n<ol>\n  <li>to ask the user for the material (and set the pen colour);<\/li>\n  <li>to actually draw the house.<\/li>\n<\/ol>\n\n<p>\n  For the first part, you need to <bk class=\"str\">ask<\/bk> for the <bk class=\"var\"><bk class=\"inner\">material<\/bk><\/bk>:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-input\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">material<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_text\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">Material:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  The <bk class=\"var\"><bk class=\"inner\">material<\/bk><\/bk> then needs to be compared to <code data-lang=\"str\">straw<\/code>, <code data-lang=\"str\">sticks<\/code> or <code data-lang=\"str\">bricks<\/code>. With 3 options, we can use an <bk class=\"control\">if<\/bk>-<bk class=\"control\">elif<\/bk>-<bk class=\"control\">else<\/bk> block:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-if-elif\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">material<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_text\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">Material:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"decisions_if_elif_else\" id=\"7\" inline=\"true\">\n        <value name=\"IF0\">\n          <block type=\"logic_compare\" id=\"8\" inline=\"true\">\n            <field name=\"OP\">EQ<\/field>\n            <value name=\"A\">\n              <block type=\"variables_get\" id=\"16\">\n                <field name=\"VAR\">material<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"text\" id=\"18\">\n                <field name=\"TEXT\">straw<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <value name=\"IF1\">\n          <block type=\"logic_compare\" id=\"19\" inline=\"true\">\n            <field name=\"OP\">EQ<\/field>\n            <value name=\"A\">\n              <block type=\"variables_get\" id=\"20\">\n                <field name=\"VAR\">material<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"text\" id=\"21\">\n                <field name=\"TEXT\">sticks<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  For each comparison, we need to set the <bk class=\"lib\">pencolor<\/bk>:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-pencolor\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">material<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_text\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">Material:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"decisions_if_elif_else\" id=\"4\" inline=\"true\">\n        <value name=\"IF0\">\n          <block type=\"logic_compare\" id=\"5\" inline=\"true\">\n            <field name=\"OP\">EQ<\/field>\n            <value name=\"A\">\n              <block type=\"variables_get\" id=\"6\">\n                <field name=\"VAR\">material<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"text\" id=\"7\">\n                <field name=\"TEXT\">straw<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <statement name=\"DO0\">\n          <block type=\"turtle_pencolor_dropdown\" id=\"19\">\n            <field name=\"COLOR\">orange<\/field>\n          <\/block>\n        <\/statement>\n        <value name=\"IF1\">\n          <block type=\"logic_compare\" id=\"8\" inline=\"true\">\n            <field name=\"OP\">EQ<\/field>\n            <value name=\"A\">\n              <block type=\"variables_get\" id=\"9\">\n                <field name=\"VAR\">material<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"text\" id=\"10\">\n                <field name=\"TEXT\">sticks<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <statement name=\"DO1\">\n          <block type=\"turtle_pencolor_dropdown\" id=\"20\">\n            <field name=\"COLOR\">black<\/field>\n          <\/block>\n        <\/statement>\n        <statement name=\"ELSE\">\n          <block type=\"turtle_pencolor_dropdown\" id=\"21\">\n            <field name=\"COLOR\">slategrey<\/field>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  We also need to set the pen size of our turtle:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-pensize\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_pensize\" id=\"30\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"SIZE\">\n      <block type=\"math_number\" id=\"31\">\n        <field name=\"NUM\">10<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Now that you know what colour to draw the house, and how thick the lines are, we can start drawing! There's a few different ways to draw the same house, but we're going to draw the roof first.\n<\/p>\n\n<p>Let's make a plan! First, remember that the turtle starts facing to the right. Since we start at the left-most point of the roof, we need to rotate 60 degrees to the <code data-lang=\"py3\">left<\/code> (counter-clockwise) to point towards the peak. Move <code data-lang=\"py3\">forward<\/code> 100 steps, then rotate 120 degrees, move forward 100 steps, rotate 120 degrees, and move forward again. Your code should look like this:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-roof\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_turn\" id=\"44\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <value name=\"ANGLE\">\n      <block type=\"math_number\" id=\"45\">\n        <field name=\"NUM\">60<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"32\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"33\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"34\" inline=\"true\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"35\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"36\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"37\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"38\" inline=\"true\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"39\">\n                        <field name=\"NUM\">120<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"40\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"41\">\n                            <field name=\"NUM\">100<\/field>\n                          <\/block>\n                        <\/value>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  If you run the code now, you'll see that your turtle is facing to the left. We still need to add three more sides to our house. Let's turn left, move forward, three times: \n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-three-pigs-house\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_turn\" id=\"44\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <value name=\"ANGLE\">\n      <block type=\"math_number\" id=\"45\">\n        <field name=\"NUM\">60<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"32\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"33\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"34\" inline=\"true\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"35\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"36\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"37\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"38\" inline=\"true\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"39\">\n                        <field name=\"NUM\">120<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"40\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"41\">\n                            <field name=\"NUM\">100<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"54\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"55\" inline=\"true\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"56\">\n                                    <field name=\"NUM\">100<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"57\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"58\" inline=\"true\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"59\">\n                                            <field name=\"NUM\">100<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_turn_simple\" id=\"60\">\n                                            <field name=\"DIRECTION\">LEFT<\/field>\n                                            <next>\n                                              <block type=\"turtle_forward\" id=\"61\" inline=\"true\">\n                                                <value name=\"DISTANCE\">\n                                                  <block type=\"math_number\" id=\"62\">\n                                                    <field name=\"NUM\">100<\/field>\n                                                  <\/block>\n                                                <\/value>\n                                              <\/block>\n                                            <\/next>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Now we just need to put all of these pieces together!\n<\/p>\n"
    },
    {
      "language":1,
      "title":"Studybot - Highlighter or Pen",
      "notes":"",
      "updated_at":"2018-04-26T06:23:41.265047+00:00",
      "label":"aca-blockly-logo-highlighter-or-pen",
      "content":"<p>\n  You're building a virtual robot to help you study. You've got it reading books, - the next step is highlighting and underlining notes!\n<\/p>\n\n<p>\n  Write a program that asks the user <code data-lang=\"in\">Use a pen or highlighter?<\/code> and either highlights or underlines for <strong>100 Turtle steps<\/strong>.\n<\/p>\n\n<p>If the user types in <code data-lang=\"in\">highlighter<\/code>, you should make the pen <strong>yellow<\/strong>, and pen thickness <strong>15<\/strong>.<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Use a pen or highlighter? <\/o><i>highlighter<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"db815b0a-da56-11e7-b063-79225b8c75a8\"]\n[\"create_shape\",\"db816730-da56-11e7-b063-79225b8c75a8\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pencolor\":[0,0,0],\"pensize\":1,\"fillcolor\":[0,0,0]}]\n[\"input_begin\",\"Use a pen or highlighter? \"]\n[\"input_end\"]\n[\"pen\",{\"filled\":false,\"heading\":0.0,\"pendown\":true,\"fillcolor\":[0,0,0],\"shown\":true,\"speed\":3,\"pencolor\":[0,0,0],\"tilt\":0.0,\"pensize\":15}]\n[\"pen\",{\"pencolor\":[255,255,0]}]\n[\"forward\",100]\n[\"end_animation\"]\n\n<\/code><\/pre>\n\n<p>Otherwise, you should draw a line to underline the notes. The line should be <strong>black<\/strong>, and pen thickness <strong>2<\/strong>.<\/p>\n\n<p>Here's how the program should work if the user types in <code data-lang=\"in\">pen<\/code>:<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Use a pen or highlighter? <\/o><i>pen<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"943680fe-da56-11e7-bfd3-b939aa24c591\"]\n[\"create_shape\",\"94368d2e-da56-11e7-bfd3-b939aa24c591\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":true}]\n[\"input_begin\",\"Use a pen or highlighter? \"]\n[\"input_end\"]\n[\"pen\",{\"pensize\":2,\"shown\":true,\"heading\":0.0,\"speed\":3,\"pencolor\":[0,0,0],\"pendown\":true,\"tilt\":0.0,\"fillcolor\":[0,0,0],\"filled\":false}]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>We'll only test <code data-lang=\"in\">highlighter<\/code> or <code data-lang=\"in\">pen<\/code> for this question!<\/p>\n<\/aside>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"io_ask_text\",\"decisions_if_else_compare\",\"turtle_forward\",\"turtle_turn\",\"turtle_pencolor_text\",\"turtle_pensize\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Turtle Playground!",
      "notes":"",
      "updated_at":"2017-12-10T11:57:56.470286+00:00",
      "label":"aca-blockly-logo-playground",
      "content":"<p>\n  Why not have a go at creating your very own drawing! You can write whatever code you like in this question. Consider it your personal playground.\n<\/p>\n\n<p>\n  We've even included a few extra blocks you might not have seen before. Try them out to see what they do! (You can even change how fast the Turtle moves!)\n<\/p>\n\n<aside class=\"info\">\n  <h2>Save or submit your code!<\/h2>\n  <p>There are no points to be earned for this question, so you can submit whatever code you like. Make sure you save programs that you want to keep! <\/p>\n<\/aside>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"decisions_if_compare\",\"decisions_if_else_compare\",\"decisions_if_elif_else_compare\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":"<p>\n  There's no wrong answer in the playground! Have fun drawing!\n<\/p>"
    },
    {
      "language":1,
      "title":"Scaleable House",
      "notes":"",
      "updated_at":"2018-04-27T07:39:12.267065+00:00",
      "label":"aca-blockly-logo-variable-scaleable-house",
      "content":"<p>\nLet's draw a house for ants, or for giants!\n<\/p>\n\n<p>\n  You might have already learned about enlargement transformations - where we can take any shape and then scale it up by multiplying all of the sides by the same number. We'll use this transformation to draw a house of any size!\n<\/p>\n\n<p>\n  Write a program which asks the user what size the house floor is (in turtle steps), the scale they want the house to be transformed by, and then uses the turtle to draw the house.\n<\/p>\n<p>\n  The triangle at the top should have angles that are all 60\u00b0 and all sides of the house should be the same number of turtle steps.\n  Here's an example of a 50 turtle step house, scaled by 2 (so the sides all end up 50 &times; 2 = 100 steps long).\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Size: <\/o><i>50<\/i>\n<o>Scale: <\/o><i>2<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"35721502-7c42-11e5-ab3e-22000afaa3ca\"]\n[\"create_shape\",\"35722bb4-7c42-11e5-ab3e-22000afaa3ca\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"fillcolor\":[0,0,0],\"pensize\":1,\"pencolor\":[0,0,0]}]\n[\"input_begin\",\"Size: \"]\n[\"input_end\"]\n[\"left\",1.0471975511965976]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The top left corner of the square is where the turtle starts.\n<\/p>\n\n<p>Here's another example of a much smaller house:<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Size: <\/o><i>10<\/i>\n<o>Scale: <\/o><i>3<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\"><code data-lang=\"logo\">\n{\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"width\":400,\"height\":300,\"bgcolor\":[255,255,255],\"shapes\":[{\"points\":[[0.0,0.0],[15.000000000000004,25.980762113533157],[30.000000000000007,0.0],[7.105427357601002e-15,-9.64873589805982e-15],[1.594516761437913e-15,-30.00000000000001],[30.0,-30.00000000000001],[30.000000000000004,-1.0658141036401503e-14]],\"filled\":false,\"id\":\"cf5e8e96-77a3-11e5-b354-22000a06912f\",\"kind\":\"line\",\"pencolor\":[0,0,0],\"pensize\":1}],\"zerox\":200}\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Copy Blocks<\/h2>\n  <p>Did you know you can copy blocks you've already made? Just right-click on the block in your answer and choose Duplicate!<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Wooden Fence",
      "notes":"<p>\n  To solve this question, we'll need to work through a few different steps. We'll need to:\n<\/p>\n\n<ol>\n  <li>ask the user how many planks to draw;<\/li>\n  <li>move into the starting position;<\/li>\n  <li>actually draw the planks.<\/li>\n<\/ol>\n\n<p>We'll need to use a <bk class=\"control\">repeat<\/bk> block to draw each plank of wood. Writing the code to draw each one individually would be a lot of repetition!<\/p>\n\n\n<p>To start off, we need to ask <bk class=\"str\"><bk class=\"inner\">How many planks?<\/bk><\/bk>:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" movable=\"false\" x=\"15\" y=\"15\">\n    <field name=\"VAR\">nplanks<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">How many planks?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n\n<p>Once we know how many planks we want to draw we have to move to the very left of the screen to get into position. To do this, we'll need to pick the <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk>, so we don't end up drawing a line:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol2\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pen\" id=\"1\" x=\"10\" y=\"10\">\n    <field name=\"STATE\">UP<\/field>\n    <next>\n      <block type=\"turtle_backward\" id=\"2\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"3\">\n            <field name=\"NUM\">200<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pen\" id=\"4\">\n            <field name=\"STATE\">DOWN<\/field>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Before we start drawing, we need to make sure that the pen is set to the right colour:<\/p>\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol3\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pencolor_text\" id=\"37\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"38\">\n        <field name=\"TEXT\">brown<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Now, we need to draw a number of planks, - the number being <bk class=\"var\"><bk class=\"inner\">nplanks<\/bk><\/bk> that we read in earlier, and finally we need to move into the position to draw the next plank. All this should happen <em>inside<\/em> the <bk class=\"control\">repeat<\/bk> block that runs as many times as there are <bk class=\"var\"><bk class=\"inner\">nplanks<\/bk><\/bk>:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol4\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"10\" inline=\"true\" x=\"17\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"variables_get\" id=\"11\">\n        <field name=\"VAR\">nplanks<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"12\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"13\">\n            <field name=\"NUM\">10<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"14\" inline=\"true\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"15\">\n                <field name=\"NUM\">90<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"16\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"17\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"18\" inline=\"true\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"19\">\n                        <field name=\"NUM\">90<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"20\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"21\">\n                            <field name=\"NUM\">10<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn\" id=\"22\" inline=\"true\">\n                            <field name=\"DIRECTION\">RIGHT<\/field>\n                            <value name=\"ANGLE\">\n                              <block type=\"math_number\" id=\"23\">\n                                <field name=\"NUM\">90<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"24\" inline=\"true\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"25\">\n                                    <field name=\"NUM\">100<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn\" id=\"26\" inline=\"true\">\n                                    <field name=\"DIRECTION\">RIGHT<\/field>\n                                    <value name=\"ANGLE\">\n                                      <block type=\"math_number\" id=\"27\">\n                                        <field name=\"NUM\">90<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"28\" inline=\"true\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"29\">\n                                            <field name=\"NUM\">10<\/field>\n                                          <\/block>\n                                        <\/value>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n",
      "updated_at":"2016-08-15T04:38:27.932903+00:00",
      "label":"bk-logo-build-a-fence",
      "content":"<p>\n  To build the whole fence it will take 40 planks of wood, but you don't have that many.\n  Write a program to see how much fence you can build with the planks that you have:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>How many planks? <\/o><i>11<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"cea0bf7e-5d35-11e6-832d-22000a068b96\"]\n[\"create_shape\",\"cea0d798-5d35-11e6-832d-22000a068b96\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true,\"pensize\":1}]\n[\"input_begin\",\"How many planks? \"]\n[\"input_end\"]\n[\"pen\",{\"heading\":0.0,\"fillcolor\":[0,0,0],\"pendown\":false,\"pencolor\":[0,0,0],\"tilt\":0.0,\"speed\":3,\"shown\":true,\"filled\":false,\"pensize\":1}]\n[\"forward\",-200]\n[\"pen\",{\"pendown\":true}]\n[\"pen\",{\"pencolor\":[165,42,42],\"fillcolor\":[165,42,42]}]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  Your program should start off by moving 200 turtle steps to the left so that it starts off at the left-edge of the screen.\n  Your program should work for any number up to 40 planks.\n<\/p>\n\n<p>Important things to note:<\/p>\n<ul>\n  <li>All lines should use pen colour <bk class=\"str lit\"><bk class=\"inner\">brown<\/bk><\/bk>;<\/li>\n  <li>Each plank should be 100 steps high and 10 steps wide;<\/li>\n  <li>The top of the fence should be the center of the space.<\/li>\n<\/ul>\n\n<p>\n  Here's another example:\n<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>How many planks? <\/o><i>25<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"scaley\":1.0,\"shapes\":[{\"pencolor\":[165,42,42],\"points\":[[-200.0,0.0],[-190.0,0.0],[-190.00000000000003,-100.0],[-200.00000000000003,-100.0],[-200.00000000000003,0.0],[-190.00000000000003,0.0],[-180.00000000000003,0.0],[-180.00000000000006,-100.0],[-190.00000000000006,-100.0],[-190.00000000000006,0.0],[-180.00000000000006,0.0],[-170.00000000000006,0.0],[-170.00000000000009,-100.0],[-180.00000000000009,-100.0],[-180.00000000000009,0.0],[-170.00000000000009,0.0],[-160.00000000000009,0.0],[-160.0000000000001,-100.0],[-170.0000000000001,-100.0],[-170.0000000000001,0.0],[-160.0000000000001,0.0],[-150.0000000000001,0.0],[-150.00000000000014,-100.0],[-160.00000000000014,-100.0],[-160.00000000000014,0.0],[-150.00000000000014,0.0],[-140.00000000000014,0.0],[-140.00000000000017,-100.0],[-150.00000000000017,-100.0],[-150.00000000000017,0.0],[-140.00000000000017,0.0],[-130.00000000000017,0.0],[-130.0000000000002,-100.0],[-140.0000000000002,-100.0],[-140.0000000000002,0.0],[-130.0000000000002,0.0],[-120.0000000000002,0.0],[-120.00000000000021,-100.0],[-130.00000000000023,-100.0],[-130.00000000000023,0.0],[-120.00000000000023,0.0],[-110.00000000000023,0.0],[-110.00000000000024,-100.0],[-120.00000000000024,-100.0],[-120.00000000000024,0.0],[-110.00000000000024,0.0],[-100.00000000000024,0.0],[-100.00000000000026,-100.0],[-110.00000000000026,-100.0],[-110.00000000000026,0.0],[-100.00000000000026,0.0],[-90.00000000000026,0.0],[-90.00000000000027,-100.0],[-100.00000000000027,-100.0],[-100.00000000000027,0.0],[-90.00000000000027,0.0],[-80.00000000000027,0.0],[-80.00000000000028,-100.0],[-90.00000000000028,-100.0],[-90.00000000000028,0.0],[-80.00000000000028,0.0],[-70.00000000000028,0.0],[-70.0000000000003,-100.0],[-80.0000000000003,-100.0],[-80.0000000000003,0.0],[-70.0000000000003,0.0],[-60.0000000000003,0.0],[-60.00000000000032,-100.0],[-70.00000000000031,-100.0],[-70.00000000000031,0.0],[-60.00000000000031,0.0],[-50.00000000000031,0.0],[-50.000000000000334,-100.0],[-60.000000000000334,-100.0],[-60.00000000000033,0.0],[-50.00000000000033,0.0],[-40.00000000000033,0.0],[-40.00000000000035,-100.0],[-50.00000000000035,-100.0],[-50.00000000000034,0.0],[-40.00000000000034,0.0],[-30.00000000000034,0.0],[-30.00000000000036,-100.0],[-40.000000000000355,-100.0],[-40.00000000000035,0.0],[-30.000000000000348,0.0],[-20.000000000000348,0.0],[-20.000000000000366,-100.0],[-30.000000000000366,-100.0],[-30.00000000000036,0.0],[-20.00000000000036,0.0],[-10.000000000000359,0.0],[-10.000000000000377,-100.0],[-20.000000000000377,-100.0],[-20.00000000000037,0.0],[-10.00000000000037,0.0],[-3.694822225952521e-13,0.0],[-3.878519245824624e-13,-100.0],[-10.000000000000387,-100.0],[-10.000000000000382,0.0],[-3.8191672047105385e-13,0.0],[9.999999999999618,0.0],[9.9999999999996,-100.0],[-3.9968028886505635e-13,-100.0],[-3.935570548693196e-13,0.0],[9.999999999999606,0.0],[19.999999999999606,0.0],[19.999999999999588,-100.0],[9.999999999999588,-100.0],[9.999999999999593,0.0],[19.999999999999595,0.0],[29.999999999999595,0.0],[29.999999999999577,-100.0],[19.999999999999577,-100.0],[19.999999999999584,0.0],[29.999999999999584,0.0],[39.99999999999959,0.0],[39.99999999999957,-100.0],[29.999999999999567,-100.0],[29.999999999999574,0.0],[39.999999999999574,0.0],[49.999999999999574,0.0],[49.99999999999955,-100.0],[39.99999999999955,-100.0],[39.99999999999956,0.0],[49.99999999999956,0.0]],\"pensize\":1,\"filled\":false,\"kind\":\"line\",\"id\":\"2bca2d12-5d35-11e6-ad62-22000ae85508\"}],\"zerox\":200,\"height\":300,\"zeroy\":150,\"width\":400,\"scalex\":1.0,\"bgcolor\":[255,255,255]}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"{}",
      "blockly_blocks":"[\"text\",\"math_number\",\"io_print1\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pencolor_text\"]",
      "teacher_notes":"<p>\n  To solve this question, we'll need to work through a few different steps. We'll need to:\n<\/p>\n\n<ol>\n  <li>ask the user how many planks to draw;<\/li>\n  <li>move into the starting position;<\/li>\n  <li>actually draw the planks.<\/li>\n<\/ol>\n\n<p>We'll need to use a <bk class=\"control\">repeat<\/bk> block to draw each plank of wood. Writing the code to draw each one individually would be a lot of repetition!<\/p>\n\n\n<p>To start off, we need to ask <bk class=\"str\"><bk class=\"inner\">How many planks?<\/bk><\/bk>:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" movable=\"false\" x=\"15\" y=\"15\">\n    <field name=\"VAR\">nplanks<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">How many planks?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n\n<p>Once we know how many planks we want to draw we have to move to the very left of the screen to get into position. To do this, we'll need to pick the <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk>, so we don't end up drawing a line:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol2\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pen\" id=\"1\" x=\"10\" y=\"10\">\n    <field name=\"STATE\">UP<\/field>\n    <next>\n      <block type=\"turtle_backward\" id=\"2\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"3\">\n            <field name=\"NUM\">200<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pen\" id=\"4\">\n            <field name=\"STATE\">DOWN<\/field>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Before we start drawing, we need to make sure that the pen is set to the right colour:<\/p>\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol3\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pencolor_text\" id=\"37\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"38\">\n        <field name=\"TEXT\">brown<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Now, we need to draw a number of planks, - the number being <bk class=\"var\"><bk class=\"inner\">nplanks<\/bk><\/bk> that we read in earlier, and finally we need to move into the position to draw the next plank. All this should happen <em>inside<\/em> the <bk class=\"control\">repeat<\/bk> block that runs as many times as there are <bk class=\"var\"><bk class=\"inner\">nplanks<\/bk><\/bk>:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol4\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"10\" inline=\"true\" x=\"17\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"variables_get\" id=\"11\">\n        <field name=\"VAR\">nplanks<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"12\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"13\">\n            <field name=\"NUM\">10<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"14\" inline=\"true\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"15\">\n                <field name=\"NUM\">90<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"16\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"17\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"18\" inline=\"true\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"19\">\n                        <field name=\"NUM\">90<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"20\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"21\">\n                            <field name=\"NUM\">10<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn\" id=\"22\" inline=\"true\">\n                            <field name=\"DIRECTION\">RIGHT<\/field>\n                            <value name=\"ANGLE\">\n                              <block type=\"math_number\" id=\"23\">\n                                <field name=\"NUM\">90<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"24\" inline=\"true\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"25\">\n                                    <field name=\"NUM\">100<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn\" id=\"26\" inline=\"true\">\n                                    <field name=\"DIRECTION\">RIGHT<\/field>\n                                    <value name=\"ANGLE\">\n                                      <block type=\"math_number\" id=\"27\">\n                                        <field name=\"NUM\">90<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"28\" inline=\"true\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"29\">\n                                            <field name=\"NUM\">10<\/field>\n                                          <\/block>\n                                        <\/value>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n"
    },
    {
      "language":1,
      "title":"Heartbeat",
      "notes":"",
      "updated_at":"2018-04-27T03:39:58.620823+00:00",
      "label":"aca-blockly-logo-heartbeat",
      "content":"<p>\n  If you've ever seen a movie where someone is in a hospital bed, you would have seen their heartbeat appear as a line on a heart monitor. When a heartbeat is even, it repeats the same pattern over and over again like this:\n<\/p>\n\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"5849b1da-d649-11e7-8d71-22000afc90e2\"]\n[\"create_shape\",\"5849bf2c-d649-11e7-8d71-22000afc90e2\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pensize\":1,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0]}]\n[\"forward\",20]\n[\"left\",1.3962634015954636]\n[\"forward\",20]\n[\"left\",-2.792526803190927]\n[\"forward\",40]\n[\"left\",2.792526803190927]\n[\"forward\",20]\n[\"left\",-1.3962634015954636]\n[\"forward\",20]\n[\"forward\",20]\n[\"left\",1.3962634015954636]\n[\"forward\",20]\n[\"left\",-2.792526803190927]\n[\"forward\",40]\n[\"left\",2.792526803190927]\n[\"forward\",20]\n[\"left\",-1.3962634015954636]\n[\"forward\",20]\n[\"forward\",20]\n[\"left\",1.3962634015954636]\n[\"forward\",20]\n[\"left\",-2.792526803190927]\n[\"forward\",40]\n[\"left\",2.792526803190927]\n[\"forward\",20]\n[\"left\",-1.3962634015954636]\n[\"forward\",20]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  <em>Notice how the turtle moves forward before it draws the first pulse.<\/em>\n<\/p>\n\n<p>\n  Create a heartbeat pattern of 3 pulses that:\n<\/p>\n\n<ul>\n  <li>Moves 20 steps forward before the start of the pulse;<\/li>\n  <li>Turns 80\u00b0 left to draw the start of the pulse;<\/li>\n  <li>Moves 20 steps up to draw the start of the pulse;<\/li>\n  <li>Turns 160\u00b0 right at the top of the pulse;<\/li>\n  <li>Moves 40 steps to draw the main part of the pulse;<\/li>\n  <li>Turns 160\u00b0 left at the bottom of the pulse;<\/li>\n  <li>Moves another 20 steps to draw the last part of the pulse;<\/li>\n  <li>Has a gap of 40 steps between each pulse (the hint will help with this).<\/li>\n<\/ul>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>For this to work your turtle will need to face the same direction at the start and end of the loop, and the first and last thing it does is move forward 20 steps.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_goto\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Make a move!",
      "notes":"",
      "updated_at":"2017-12-10T12:13:49.897619+00:00",
      "label":"aca-bk-logo-move-forward",
      "content":"<p>\n  Let's make a move!\n<\/p>\n<p>\n  Write a program to move the turtle forward <strong>100 steps<\/strong>.\n<\/p>\n\n<p>\n  The easiest way to do this is to use <bk class=\"lib\">move forward <bk class=\"math\"><bk class=\"inner\">100<\/bk><\/bk> steps<\/bk> to move the turtle forward!\n<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"f57a381a-3395-11e6-9b70-22000ae85508\"]\n[\"create_shape\",\"f57a4eae-3395-11e6-9b70-22000ae85508\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>\n    You will need to change the distance the turtle moves forward from <bk class=\"math\"><bk class=\"inner\">20<\/bk><\/bk> to <bk class=\"math\"><bk class=\"inner\">100<\/bk><\/bk>.\n  <\/p>\n<\/aside>\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"turtle_forward\"]",
      "teacher_notes":"#markdown\n\n> ## Teacher Notes!\n> Lesson plans and support are available on the [Australian Computing Academy website](https:\/\/aca.edu.au\/challenges\/56-blockly-turtle.html).\n\n\n<p>This question reinforces the concept of movement introduced on the previous slides.<\/p>\n\n<p>We want students to learn here that attention to detail is crucial for programs to work.<\/p>\n\n<p>\n  To access blocks, Students need to click on the Editor menu bar to find each type of block. Click or drag a block to add it to the workspace.\n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Blockly editor String menu\" src=\"https:\/\/groklearning-cdn.com\/problems\/bF8ACyqoHKqdvLXCHLvmoK\/blockly-string-menu.png\" width=\"50%\">\n  <figcaption>The blocks appear under different menu headings.<\/figcaption>\n<\/figure>\n\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    Statements are the building blocks of code. They are needed for implementation in Years 3\u20134 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP011\" target=\"_blank\">ACTDIP011<\/a>, 5\u20136 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP020\" target=\"_blank\">ACTDIP020<\/a>, 7\u20138 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP030\" target=\"_blank\">ACTDIP030<\/a>, and 9\u201310 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP041\" target=\"_blank\">ACTDIP041<\/a> even though statements are not mentioned explicitly in the content descriptions.\n  <\/p>\n<\/aside>\n"
    },
    {
      "language":1,
      "title":"Starting from Square One",
      "notes":"#markdown\n\nIn order to draw the shapes with the turtle it's important to learn how to think as if you are the turtle, facing the direction the turtle is facing. The turtle starts facing **right**. We get started by moving forward like with the last question. Then because the turtle needs to draw **down the screen** we need to **turn right**. And then we continue moving forward and turning right until the turtle gets back to the starting point. \n\nThere are two solutions which are **almost identical**. The reason we gave both solutions is because the first one matches the animation exactly the second one is actually a better start for when we start repeating instructions later on in the course. Either of them work here because only the lines and fills are marked, *not the position of the turtle*.",
      "updated_at":"2017-12-10T11:31:04.579660+00:00",
      "label":"bk-logo-square-right-simple",
      "content":"<p>\n  Write a program to draw a square below the turtle.\n<\/p>\n\n<p>\n  The easiest way to do this is to use <bk class=\"lib\">turn <bk class=\"inner\">right<\/bk><\/bk> rather than <bk class=\"lib\">turn <bk class=\"inner\">left<\/bk><\/bk>. The turtle starts in the top left corner of the square:\n<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"cd789e66-dd98-11e7-8ff3-117e717b9f56\"]\n[\"create_shape\",\"cd78ac76-dd98-11e7-8ff3-117e717b9f56\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0]}]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"end_animation\"]\n\n<\/code><\/pre>\n\n<p>\n  Each side should be <strong>50 turtle steps<\/strong> long.\n<\/p>\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":"#markdown\n\nIn order to draw the shapes with the turtle it's important to learn how to think as if you are the turtle, facing the direction the turtle is facing. The turtle starts facing **right**. We get started by moving forward like with the last question. Then because the turtle needs to draw **down the screen** we need to **turn right**. And then we continue moving forward and turning right until the turtle gets back to the starting point. \n\nThere are two solutions which are **almost identical**. The reason we gave both solutions is because the first one matches the animation exactly the second one is actually a better start for when we start repeating instructions later on in the course. Either of them work here because only the lines and fills are marked, *not the position of the turtle*."
    },
    {
      "language":1,
      "title":"Get rect!",
      "notes":"<p>The only difference between a rectangle and a square is the different height and width lengths. You need to use the correct values, and put them in the right order, starting with the width, then the height, then the width, and finally the height again.<\/p>\n\n<p>We've changed the starting position of the turtle in this question too, so that you're still using a 90 degree turn, but this time you're turning left, not right.<\/p>",
      "updated_at":"2018-03-30T08:15:37.386507+00:00",
      "label":"aca-blockly-logo-rectangle",
      "content":"<p>\n  Write a Turtle program to draw a rectangle, with a width (top and bottom sides) of 120 turtle steps, and height (the left and right sides) of 50 turtle steps.\n  The output of your program should look like this:\n<\/p>\n\n<div class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"c8a5f2c0-6765-11e7-8b40-22000afc90c9\"]\n[\"create_shape\",\"c8a602f6-6765-11e7-8b40-22000afc90c9\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1}]\n[\"forward\",120]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",120]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"end_animation\"]\n<\/code><\/div>\n\n<p>The <em>bottom left corner<\/em> of the rectangle is where the turtle starts.<\/p>\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":"<p>The only difference between a rectangle and a square is the differing height and width. You need to use the correct values, and put them in the right order, starting with the width, then the height, then the width, and finally the height again.<\/p>\n\n<p>We've changed the starting position of the turtle in this question too, so that you're still using a 90 degree turn, but this time you're turning left, not right.<\/p>"
    },
    {
      "language":1,
      "title":"Domino",
      "notes":"#markdown \nThe domino is an adaption of the square so you can start with a basic square and then continue from there. \n\nThe fourth line of the bottom square is the first line of the top square so it can be one long line of 100 turtle steps.\n\n```eg:blockly-logo-left;lang:blockly;\n\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_forward\" id=\"5\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"6\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn_simple\" id=\"17\">\n        <field name=\"DIRECTION\">RIGHT<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"7\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"8\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"19\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"-q_F6AwB9~`]`_:$z?0?\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"VS!$_DetOi+\/Xw?T+G_f\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"G0`xGBA9g]wJo0n^9QFR\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"g=igAYaRP[.Bki7k`7HH\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"~G8SkzTw{au;,__Q9zu#\">\n                                <field name=\"NUM\">100<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n\n```\nNow we just need the turtle to complete the shape.",
      "updated_at":"2017-12-10T11:56:19.088637+00:00",
      "label":"bk-logo-domino",
      "content":"<p>\n  Write a program to draw a domino, made up of two squares on top of the other.\n<\/p>\n\n<p>\n  The turtle should start on the left in the middle of the domino:\n<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"5ed6a6c4-ce4d-11e7-bcd2-22000af515f0\"]\n[\"create_shape\",\"5ed6b312-ce4d-11e7-bcd2-22000af515f0\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":true}]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"end_animation\"]\n\n\n<\/code><\/pre>\n\n<p>\n  Each side of each square should be <strong>50 turtle steps<\/strong> long.\n<\/p>\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":"#markdown \nThe domino is an adaption of the square so you can start with a basic square and then continue from there. \n\nThe fourth line of the bottom square is the first line of the top square so it can be one long line of 100 turtle steps.\n\n```eg:blockly-logo-left;lang:blockly;\n\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_forward\" id=\"5\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"6\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn_simple\" id=\"17\">\n        <field name=\"DIRECTION\">RIGHT<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"7\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"8\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"19\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"-q_F6AwB9~`]`_:$z?0?\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"VS!$_DetOi+\/Xw?T+G_f\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"G0`xGBA9g]wJo0n^9QFR\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"g=igAYaRP[.Bki7k`7HH\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"~G8SkzTw{au;,__Q9zu#\">\n                                <field name=\"NUM\">100<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n\n```\nNow we just need the turtle to complete the shape."
    },
    {
      "language":1,
      "title":"Get your house in order",
      "notes":"",
      "updated_at":"2017-12-10T02:39:57.494135+00:00",
      "label":"aca-blockly-logo-house-no-variables",
      "content":"<p>\n  Use the turtle to draw a house!\n<\/p>\n\n<p>\n  The triangle at the top should have angles that are all 60\u00b0 and all sides of the house should be 100 turtle steps long.\n  The sides of the roof will also be 100 steps long.\n<\/p>\n\n<p>The result should look like this:<\/p>\n<pre class=\"js-logo-final\"><code data-lang=\"logo\">\n{\"width\":400,\"height\":300,\"zerox\":200,\"bgcolor\":[255,255,255],\"zeroy\":150,\"scalex\":1.0,\"shapes\":[{\"pencolor\":[0,0,0],\"pensize\":1,\"points\":[[0.0,0.0],[50.000000000000014,86.60254037844386],[100.00000000000003,0.0],[2.842170943040401e-14,-3.2162452993532734e-14],[1.005200744319371e-14,-100.00000000000003],[100.00000000000001,-100.00000000000003],[100.00000000000001,-2.842170943040401e-14]],\"id\":1,\"outline\":1,\"fillcolor\":[0,0,0]}],\"scaley\":1.0}\n<\/code><\/pre>\n\n<p>The top left corner of the square is where the turtle starts.<\/p>\n\n<aside class=\"info\">\n  <h2>Optional challenge!<\/h2>\n  <p>Try drawing the house in one line, without drawing over the same line twice. Think about the <em>order<\/em> you need to draw the lines in.<\/p>\n<\/aside>",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Equilateral triangle",
      "notes":"<p>\n  The tricky part of working with the turtle is imagining the instructions from the perspective of the turtle. To draw the triangle so that the angle between each side is 60\u00b0, the turtle actually needs to turn 120\u00b0.\n<\/p>\n\n",
      "updated_at":"2017-12-10T11:16:51.435102+00:00",
      "label":"aca-blockly-logo-equilateral-triangle-no-variables",
      "content":"<p>\n  Write a Turtle program to draw an equilateral triangle, with the sides being 100 turtle steps long. All angles in an equilateral triangle are 60\u00b0.\n<\/p>\n<p>\n  The output of your program should look like this:\n<\/p>\n\n\n<div class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"763ecd40-dd99-11e7-86fa-b9ca68a86695\"]\n[\"create_shape\",\"763edc40-dd99-11e7-86fa-b9ca68a86695\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"fillcolor\":[0,0,0],\"pensize\":1,\"pencolor\":[0,0,0]}]\n[\"forward\",100]\n[\"left\",2.0943951023931953]\n[\"forward\",100]\n[\"left\",2.0943951023931953]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/div>\n\n\n<p>The <em>bottom left corner<\/em> of the triangle is where the turtle starts.<\/p>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>You need to do an angle calculation to draw this shape!<\/p>\n<\/aside>\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_turn\"]",
      "teacher_notes":"<p>The tricky part of working with the turtle is imagining the instructions from the perspective of the turtle. To draw the triangle so that the angle between each side is 60\u00b0, the turtle actually needs to turn 120\u00b0.<\/p>\n"
    },
    {
      "language":1,
      "title":"Plate instead of bowl",
      "notes":"#markdown\nThe trick here is with the calculation of the angles. It's very important to realise that when the angle between the lines needs to be 135 degrees the turtle only needs to turn 180 degrees - 135 degrees = 45 degrees. This should become apparent as you attempt to turn 135 degrees.\n",
      "updated_at":"2017-12-10T02:36:49.096513+00:00",
      "label":"aca-blockly-logo-plate-bowl",
      "content":"#markdown\nWrite a Turtle program to turn a very steep bowl shape into a plate. \n\nThe lines should all remain the length they are (i.e. 50 turtle steps, 100 turtle steps and 50 turtle steps), but you need to change the angles.\n\nCalculate the size of the turns you need to make. **The angle between the plate side and the plate base is 135\u02da**. \n\nThe turtle will start drawing from the top left corner:\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\" style=\"display: none\">\n[\"begin_animation\",400,300,10,\"564dd098-19c3-11e7-9b77-22000af41c08\"]\n[\"create_shape\",\"564e0bee-19c3-11e7-9b77-22000af41c08\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"filled\":true,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0]}]\n[\"pen\",{\"speed\":3,\"heading\":0.0,\"tilt\":0.0,\"pendown\":true,\"pensize\":1,\"filled\":false,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"shown\":true}]\n[\"pen\",{\"pencolor\":[0,0,0]}]\n[\"left\",-0.78539816339744830961566084581988]\n[\"forward\",50]\n[\"left\",0.78539816339744830961566084581988]\n[\"forward\",100]\n[\"left\",0.78539816339744830961566084581988]\n[\"forward\",50]\n[\"end_animation\"]\n<\/code><\/pre>\n\n> ## Hint\n> Try drawing the shape out on a piece of paper and calculating the angles you need before you start coding, and use the diagram below to help!\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-2.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[{\"content\":\"<xml xmlns=\\\"http:\\\/\\\/www.w3.org\\\/1999\\\/xhtml\\\">\\n  <variables><\\\/variables>\\n  <block type=\\\"turtle_turn\\\" id=\\\"E!?opC=HrVg8|O!guU$O\\\" x=\\\"10\\\" y=\\\"10\\\">\\n    <field name=\\\"DIRECTION\\\">RIGHT<\\\/field>\\n    <value name=\\\"ANGLE\\\">\\n      <block type=\\\"math_number\\\" id=\\\"\\\/aU!Ik[3t8umVpKnywiu\\\">\\n        <field name=\\\"NUM\\\">90<\\\/field>\\n      <\\\/block>\\n    <\\\/value>\\n    <next>\\n      <block type=\\\"turtle_forward\\\" id=\\\"M=lEX.MY!4jbH@[D!)pL\\\">\\n        <value name=\\\"DISTANCE\\\">\\n          <block type=\\\"math_number\\\" id=\\\"b.jZKC;cjyq1vxg-,HtP\\\">\\n            <field name=\\\"NUM\\\">50<\\\/field>\\n          <\\\/block>\\n        <\\\/value>\\n        <next>\\n          <block type=\\\"turtle_turn\\\" id=\\\"L?SElgM3JIhD@[T@|9o|\\\">\\n            <field name=\\\"DIRECTION\\\">LEFT<\\\/field>\\n            <value name=\\\"ANGLE\\\">\\n              <block type=\\\"math_number\\\" id=\\\"@LMB33Q;r+oq]8^B`kMU\\\">\\n                <field name=\\\"NUM\\\">90<\\\/field>\\n              <\\\/block>\\n            <\\\/value>\\n            <next>\\n              <block type=\\\"turtle_forward\\\" id=\\\"C,_68,z^1O-2NL6(BheY\\\">\\n                <value name=\\\"DISTANCE\\\">\\n                  <block type=\\\"math_number\\\" id=\\\"tRU.IdS\\\/@yzyt5[n$Jcg\\\">\\n                    <field name=\\\"NUM\\\">100<\\\/field>\\n                  <\\\/block>\\n                <\\\/value>\\n                <next>\\n                  <block type=\\\"turtle_turn\\\" id=\\\"$CfA#zn_7P{bE5K+hrlb\\\">\\n                    <field name=\\\"DIRECTION\\\">LEFT<\\\/field>\\n                    <value name=\\\"ANGLE\\\">\\n                      <block type=\\\"math_number\\\" id=\\\"sw(yC0e=:L1m1Uq:Ph_p\\\">\\n                        <field name=\\\"NUM\\\">90<\\\/field>\\n                      <\\\/block>\\n                    <\\\/value>\\n                    <next>\\n                      <block type=\\\"turtle_forward\\\" id=\\\"=m^w?l46m?c\\\/%^K,T6ue\\\">\\n                        <value name=\\\"DISTANCE\\\">\\n                          <block type=\\\"math_number\\\" id=\\\"0(FZb04j?7,q0i:F9dxw\\\">\\n                            <field name=\\\"NUM\\\">50<\\\/field>\\n                          <\\\/block>\\n                        <\\\/value>\\n                      <\\\/block>\\n                    <\\\/next>\\n                  <\\\/block>\\n                <\\\/next>\\n              <\\\/block>\\n            <\\\/next>\\n          <\\\/block>\\n        <\\\/next>\\n      <\\\/block>\\n    <\\\/next>\\n  <\\\/block>\\n<\\\/xml>\",\"path\":\"program.blockly\",\"is_static\":false,\"undeletable\":true,\"unrenamable\":true}]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\"]",
      "teacher_notes":"#markdown\nThe trick here is with the calculation of the angles. It's very important to realise that when the angle between the lines needs to be 135 degrees the turtle only needs to turn 180 degrees - 135 degrees = 45 degrees. This should become apparent as you attempt to turn 135 degrees.\n"
    },
    {
      "language":1,
      "title":"Turtle Playground!",
      "notes":"",
      "updated_at":"2018-04-27T02:17:56.006643+00:00",
      "label":"aca-blockly-logo-playground-2",
      "content":"<p>\n  Why not have a go at creating your very own drawing! You can write whatever code you like in this question. Consider it your personal playground.\n<\/p>\n\n<p>\n  We've even included a few extra blocks you might not have seen before. Try them out to see what they do! (You can even change how fast the Turtle moves!)\n<\/p>\n\n<aside class=\"info\">\n  <h2>Save or submit your code!<\/h2>\n  <p>There are no points to be earned for this question, so you can submit whatever code you like. Make sure you save programs that you want to keep! <\/p>\n<\/aside>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"decisions_if_compare\",\"decisions_if_else_compare\",\"decisions_if_elif_else_compare\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":"<p>\n  There's no wrong answer in the playground! Have fun drawing!\n<\/p>"
    },
    {
      "language":1,
      "title":"Turtle Playground!",
      "notes":"",
      "updated_at":"2018-04-27T02:17:42.266383+00:00",
      "label":"aca-blockly-logo-playground-1",
      "content":"<p>\n  Why not have a go at creating your very own drawing! You can write whatever code you like in this question. Consider it your personal playground.\n<\/p>\n\n<p>\n  We've even included a few extra blocks you might not have seen before. Try them out to see what they do! (You can even change how fast the Turtle moves!)\n<\/p>\n\n<aside class=\"info\">\n  <h2>Save or submit your code!<\/h2>\n  <p>There are no points to be earned for this question, so you can submit whatever code you like. Make sure you save programs that you want to keep! <\/p>\n<\/aside>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"decisions_if_compare\",\"decisions_if_else_compare\",\"decisions_if_elif_else_compare\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":"<p>\n  There's no wrong answer in the playground! Have fun drawing!\n<\/p>"
    },
    {
      "language":1,
      "title":"Turtle Playground!",
      "notes":"",
      "updated_at":"2018-04-27T02:17:21.545480+00:00",
      "label":"aca-blockly-logo-playground-0",
      "content":"<p>\n  Why not have a go at creating your very own drawing! You can write whatever code you like in this question. Consider it your personal playground.\n<\/p>\n\n<p>\n  We've even included a few extra blocks you might not have seen before. Try them out to see what they do! (You can even change how fast the Turtle moves!)\n<\/p>\n\n<aside class=\"info\">\n  <h2>Save or submit your code!<\/h2>\n  <p>There are no points to be earned for this question, so you can submit whatever code you like. Make sure you save programs that you want to keep! <\/p>\n<\/aside>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"decisions_if_compare\",\"decisions_if_else_compare\",\"decisions_if_elif_else_compare\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":"<p>\n  There's no wrong answer in the playground! Have fun drawing!\n<\/p>"
    }
  ],
  "lead_text":"Write code to control a turtle and draw fantastic pictures!",
  "short_title":"DT Blockly Turtle",
  "export_version":1,
  "slug":"aca-dt-56-bk-turtle",
  "outline":""
}