{
  "description":"Explore geometry through programming, and draw intricate patterns and explosive fireworks! In this challenge, you'll learn about how computers use angles, parallel lines and geometric transformations to generate the text and images you see on your screen every day. Use what you learn to develop your own fonts, pattern generators and even create a scene of colourful fireworks.\n\nColours, lines, drawings - all of these are produced through numbers, and with a bit of guidance and support, you'll learn the coding techniques game, animation and application developers use to bring your computer experience to life. Unlock the power of Maths + Code!",
  "title":"DT Challenge Blockly - Year 7 Geometry",
  "modules":[
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Maths and computing are BFFs.  Computers were first invented to do maths quickly, but computers wouldn't exist without maths.\n<\/p>\n\n<p>\n  <em>Everything<\/em> on this screen uses lots of maths, including number systems, algebra, equations, and geometry \u2013\u00a0all things you'll learn about in Year 7.\n<\/p>\n\n<p>\n  Since maths and computing go so well together, you're going to <em>learn computer programming and maths<\/em> at the same time. With these two tools, you can conquer the world!\n<\/p>\n\n<p>\n So let's get started...\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Maths + Computers",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Maths and computing are BFFs.  Computers were first invented to do maths quickly, but computers wouldn't exist without maths.\n<\/p>\n\n<p>\n  <em>Everything<\/em> on this screen uses lots of maths, including number systems, algebra, equations, and geometry \u2013\u00a0all things you'll learn about in Year 7.\n<\/p>\n\n<p>\n  Since maths and computing go so well together, you're going to <em>learn computer programming and maths<\/em> at the same time. With these two tools, you can conquer the world!\n<\/p>\n\n<p>\n So let's get started...\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Meet the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Turtle_graphics\" target=\"_blank\">turtle<\/a>!<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\" style=\"display: none\">\n[\"begin_animation\",400,300,10,\"a1c29740-31a1-11e5-acfe-a45e60b77597\"]\n[\"create_shape\",0,[[0,0],[-5,-9],[0,-7],[5,-9]],{\"pencolor\":[0,0,0],\"outline\":1,\"pensize\":1,\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"change_shape\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]]]\n[\"pen\",{\"heading\":0.0,\"outline\":1,\"fillcolor\":[0,0,0],\"tilt\":0.0,\"pencolor\":[0,0,0],\"shown\":true,\"pensize\":1,\"pendown\":false,\"speed\":3}]\n[\"left\",1.5707963267948966]\n[\"forward\",50.0]\n[\"pen\",{\"heading\":1.5707963267948966,\"pendown\":true}]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  In this course, you'll be using Blockly - a visual programming language - to drive the turtle. It's fun, and what you'll learn is the basis for all <a href=\"https:\/\/en.wikipedia.org\/wiki\/Vector_graphics\" target=\"_blank\">vector graphics<\/a> in computers. It also involves lots of geometry - something you'll be learning about in your maths class.\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Introducing the turtle",
              "notes":[
                {
                  "left":"<p>\n  Turtle is an implementation of <a href=\"https:\/\/en.wikipedia.org\/wiki\/Turtle_graphics\" target=\"_blank\">turtle graphics<\/a> originating from Seymour Papert's <a href=\"https:\/\/en.wikipedia.org\/wiki\/Logo_(programming_language)\" target=\"_blank\">Logo<\/a> from the 1960's.\n<\/p>\n\n<p>\n  Our version provides simple blocks to move and rotate the turtle while it draws lines and shapes, with various line and fill properties. It builds on Python's <code data-lang=\"py3\">turtle<\/code> module, which is available in all standard installations.\n<\/p>\n\n<p>\n  Turtle graphics has seen an educational resurgence recently \u2013\u00a0the immediate visual feedback; natural integration of coding with maths, especially geometry; and opportunities for artistic expression continue to delight teachers and students.\n<\/p>\n\n<aside class=\"info\">\n  <h2>We automark the lines and shapes<\/h2>\n  <p>\n    Our intelligent automarker checks the shapes drawn by the turtle. <strong>It ignores the direction and order they are drawn in.<\/strong>\n  <\/p>\n  <p>\n    As long as the shapes are <em>where<\/em> they should be, you can draw them however you wish.  There are many correct answers!\n  <\/p>\n<\/aside>\n"
                }
              ],
              "notes_rendered":"<p>\n  Turtle is an implementation of <a href=\"https:\/\/en.wikipedia.org\/wiki\/Turtle_graphics\" target=\"_blank\">turtle graphics<\/a> originating from Seymour Papert's <a href=\"https:\/\/en.wikipedia.org\/wiki\/Logo_(programming_language)\" target=\"_blank\">Logo<\/a> from the 1960's.\n<\/p>\n\n<p>\n  Our version provides simple blocks to move and rotate the turtle while it draws lines and shapes, with various line and fill properties. It builds on Python's <code data-lang=\"py3\">turtle<\/code> module, which is available in all standard installations.\n<\/p>\n\n<p>\n  Turtle graphics has seen an educational resurgence recently \u2013\u00a0the immediate visual feedback; natural integration of coding with maths, especially geometry; and opportunities for artistic expression continue to delight teachers and students.\n<\/p>\n\n<aside class=\"info\">\n  <h2>We automark the lines and shapes<\/h2>\n  <p>\n    Our intelligent automarker checks the shapes drawn by the turtle. <strong>It ignores the direction and order they are drawn in.<\/strong>\n  <\/p>\n  <p>\n    As long as the shapes are <em>where<\/em> they should be, you can draw them however you wish.  There are many correct answers!\n  <\/p>\n<\/aside>\n",
              "content_rendered":"<p>Meet the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Turtle_graphics\" target=\"_blank\">turtle<\/a>!<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\" style=\"display: none\">\n[\"begin_animation\",400,300,10,\"a1c29740-31a1-11e5-acfe-a45e60b77597\"]\n[\"create_shape\",0,[[0,0],[-5,-9],[0,-7],[5,-9]],{\"pencolor\":[0,0,0],\"outline\":1,\"pensize\":1,\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"change_shape\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]]]\n[\"pen\",{\"heading\":0.0,\"outline\":1,\"fillcolor\":[0,0,0],\"tilt\":0.0,\"pencolor\":[0,0,0],\"shown\":true,\"pensize\":1,\"pendown\":false,\"speed\":3}]\n[\"left\",1.5707963267948966]\n[\"forward\",50.0]\n[\"pen\",{\"heading\":1.5707963267948966,\"pendown\":true}]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"left\",-0.9424777960769379]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  In this course, you'll be using Blockly - a visual programming language - to drive the turtle. It's fun, and what you'll learn is the basis for all <a href=\"https:\/\/en.wikipedia.org\/wiki\/Vector_graphics\" target=\"_blank\">vector graphics<\/a> in computers. It also involves lots of geometry - something you'll be learning about in your maths class.\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Let's make the turtle move! Click the <span class=\"icon-play4\" style=\"font-size: 16px\"><\/span> button:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-move-turtle\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_forward\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"2\">\n        <field name=\"NUM\">30<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>When you run the Blockly code, it makes the turtle move forward!<\/p>\n\n<p>The number is the number of <em>turtle steps<\/em> to move. A bigger number will move the turtle further!<\/p>\n\n<p>Try changing <bk class=\"math\"><bk class=\"inner\">30<\/bk><\/bk> to <bk class=\"math\"><bk class=\"inner\">100<\/bk><\/bk>, and running it again.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Where are the turtle blocks?<\/h2>\n  <p>\n    Turtle blocks only work on turtle questions. If you want to try them, skip to the next question, then come back to the notes!\n  <\/p>\n<\/aside>\n"
                }
              ],
              "layout":0,
              "title":"Make a move!",
              "notes":[
                {
                  "left":"<p>\n  Students find turtle problems hard for three main reasons:\n<\/p>\n\n<ul>\n  <li>the moves and turns are from the <strong>turtle's point of view<\/strong>. If the turtle is facing right, a <bk class=\"lib\">move forward<\/bk> will take the turtle further to the right;<\/li>\n  <li>the angle calculations are tricky \u2013\u00a0you need to <strong>calculate the change in the turtle's direction<\/strong>, not the angle between the lines it draws;<\/li>\n  <li>a <strong>single error can make a mess<\/strong>\u00a0\u2013\u00a0once the turtle is off track, it usually stays off track. A single error can feel overwhelmingly like many many errors.\n<\/ul>\n\n<p>\n  <strong>Students need to focus on fixing the first error the turtle makes.<\/strong>\n<\/p>\n\n<p>\n  In the automarker feedback, we show them the expected output as a dotted line, so they can see when the turtle stops following it.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Turtle blocks in turtle questions only<\/h2>\n  <p>\n    At this stage, turtle blocks (and the turtle output animation) are only available on turtle questions.\n  <\/p>\n\n  <p>\n    In the future, we will have a playground with all of the blocks available, but we haven't had a chance to implement it yet.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "notes_rendered":"<p>\n  Students find turtle problems hard for three main reasons:\n<\/p>\n\n<ul>\n  <li>the moves and turns are from the <strong>turtle's point of view<\/strong>. If the turtle is facing right, a <bk class=\"lib\">move forward<\/bk> will take the turtle further to the right;<\/li>\n  <li>the angle calculations are tricky \u2013\u00a0you need to <strong>calculate the change in the turtle's direction<\/strong>, not the angle between the lines it draws;<\/li>\n  <li>a <strong>single error can make a mess<\/strong>\u00a0\u2013\u00a0once the turtle is off track, it usually stays off track. A single error can feel overwhelmingly like many many errors.\n<\/ul>\n\n<p>\n  <strong>Students need to focus on fixing the first error the turtle makes.<\/strong>\n<\/p>\n\n<p>\n  In the automarker feedback, we show them the expected output as a dotted line, so they can see when the turtle stops following it.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Turtle blocks in turtle questions only<\/h2>\n  <p>\n    At this stage, turtle blocks (and the turtle output animation) are only available on turtle questions.\n  <\/p>\n\n  <p>\n    In the future, we will have a playground with all of the blocks available, but we haven't had a chance to implement it yet.\n  <\/p>\n<\/aside>\n",
              "content_rendered":"<p>Let's make the turtle move! Click the <span class=\"icon-play4\" style=\"font-size: 16px\"><\/span> button:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-move-turtle\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_forward\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"2\">\n        <field name=\"NUM\">30<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>When you run the Blockly code, it makes the turtle move forward!<\/p>\n\n<p>The number is the number of <em>turtle steps<\/em> to move. A bigger number will move the turtle further!<\/p>\n\n<p>Try changing <bk class=\"math\"><bk class=\"inner\">30<\/bk><\/bk> to <bk class=\"math\"><bk class=\"inner\">100<\/bk><\/bk>, and running it again.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Where are the turtle blocks?<\/h2>\n  <p>\n    Turtle blocks only work on turtle questions. If you want to try them, skip to the next question, then come back to the notes!\n  <\/p>\n<\/aside>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  The turtle always starts off facing to the right.\n<\/p>\n\n<p>\n  Things would get boring pretty quickly if the turtle always moved in the same direction. If you want to change which way the turtle is facing, you can \n<bk class=\"lib\">turn <bk class=\"inner\">left<\/bk><\/bk> or <bk class=\"lib\">turn <bk class=\"inner\">right<\/bk><\/bk>. Here's a <bk class=\"lib\">turn <bk class=\"inner\">left<\/bk><\/bk> example:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-turn-left\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_turn_simple\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Now the turtle is facing the top of the screen.<\/p>\n\n<p>\n  If you turn the same direction four times then the turtle will end up facing the same way it started:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-turn-360\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_turn_simple\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <next>\n    <block type=\"turtle_turn_simple\" id=\"2\">\n      <field name=\"DIRECTION\">LEFT<\/field>\n      <next>\n      <block type=\"turtle_turn_simple\" id=\"3\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <next>\n        <block type=\"turtle_turn_simple\" id=\"4\">\n          <field name=\"DIRECTION\">LEFT<\/field>\n        <\/block>\n        <\/next>\n      <\/block>\n      <\/next>\n    <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n"
                }
              ],
              "layout":0,
              "title":"Turning corners",
              "notes":[
                {
                  "left":"<p>\n  There are several buttons to control the turtle animations:\n<\/p>\n\n<div class=\"logo-preview\" style=\"border-bottom: 0\">\n  <div class=\"logo-preview-top-bar\" style=\"display: inline-block\">\n    <menu class=\"logo-preview-actions\">\n      <button class=\"action js-play\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Play animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-loop\"><\/span>\n      <\/button>\n      <button class=\"action js-pause\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Pause animation\" style=\"display: none;\">\n        <span class=\"icon icon-pause2\"><\/span>\n      <\/button>\n      <button class=\"action js-stop\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Stop animation\" style=\"display: none;\">\n        <span class=\"icon icon-stop2\"><\/span>\n      <\/button>\n      <button class=\"action js-turtle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle turtle\">\n        <span class=\"icon icon-eye-blocked\"><\/span>\n      <\/button>\n      <button class=\"action js-grid\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle grid lines\">\n        <span class=\"icon icon-grid7\"><\/span>\n      <\/button>\n    <\/menu>\n  <\/div>\n<\/div>\n\n<p>\n  The <span class=\"icon icon-loop\"><\/span> button (re)plays the animation, regardless of whether the program is running.  The <span class=\"icon icon-eye-blocked\"><\/span> button toggles the turtle visibility itself, so you can just see the lines being drawn.  The <span class=\"icon icon-grid7\"><\/span> button toggles a 50-step grid centred on the turtle's starting point.\n<\/p>\n\n<p>\n  When the animation is running, you will see:\n<\/p>\n\n<div class=\"logo-preview\" style=\"border-bottom: 0\">\n  <div class=\"logo-preview-top-bar\" style=\"display: inline-block\">\n    <menu class=\"logo-preview-actions\">\n      <button class=\"action js-play\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Play animation\" style=\"display: none;\">\n        <span class=\"icon icon-loop\"><\/span>\n      <\/button>\n      <button class=\"action js-pause\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Pause animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-pause2\"><\/span>\n      <\/button>\n      <button class=\"action js-stop\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Stop animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-stop2\"><\/span>\n      <\/button>\n      <button class=\"action js-turtle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle turtle\">\n        <span class=\"icon icon-eye-blocked\"><\/span>\n      <\/button>\n      <button class=\"action js-grid\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle grid lines\">\n        <span class=\"icon icon-grid7\"><\/span>\n      <\/button>\n    <\/menu>\n  <\/div>\n<\/div>\n\n<p>\n  These extra buttons allow you to pause <span class=\"icon icon-pause2\"><\/span> and stop <span class=\"icon icon-stop2\"><\/span> the animation before it finishes.\n<\/p>\n"
                }
              ],
              "notes_rendered":"<p>\n  There are several buttons to control the turtle animations:\n<\/p>\n\n<div class=\"logo-preview\" style=\"border-bottom: 0\">\n  <div class=\"logo-preview-top-bar\" style=\"display: inline-block\">\n    <menu class=\"logo-preview-actions\">\n      <button class=\"action js-play\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Play animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-loop\"><\/span>\n      <\/button>\n      <button class=\"action js-pause\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Pause animation\" style=\"display: none;\">\n        <span class=\"icon icon-pause2\"><\/span>\n      <\/button>\n      <button class=\"action js-stop\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Stop animation\" style=\"display: none;\">\n        <span class=\"icon icon-stop2\"><\/span>\n      <\/button>\n      <button class=\"action js-turtle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle turtle\">\n        <span class=\"icon icon-eye-blocked\"><\/span>\n      <\/button>\n      <button class=\"action js-grid\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle grid lines\">\n        <span class=\"icon icon-grid7\"><\/span>\n      <\/button>\n    <\/menu>\n  <\/div>\n<\/div>\n\n<p>\n  The <span class=\"icon icon-loop\"><\/span> button (re)plays the animation, regardless of whether the program is running.  The <span class=\"icon icon-eye-blocked\"><\/span> button toggles the turtle visibility itself, so you can just see the lines being drawn.  The <span class=\"icon icon-grid7\"><\/span> button toggles a 50-step grid centred on the turtle's starting point.\n<\/p>\n\n<p>\n  When the animation is running, you will see:\n<\/p>\n\n<div class=\"logo-preview\" style=\"border-bottom: 0\">\n  <div class=\"logo-preview-top-bar\" style=\"display: inline-block\">\n    <menu class=\"logo-preview-actions\">\n      <button class=\"action js-play\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Play animation\" style=\"display: none;\">\n        <span class=\"icon icon-loop\"><\/span>\n      <\/button>\n      <button class=\"action js-pause\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Pause animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-pause2\"><\/span>\n      <\/button>\n      <button class=\"action js-stop\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Stop animation\" style=\"display: inline-block;\">\n        <span class=\"icon icon-stop2\"><\/span>\n      <\/button>\n      <button class=\"action js-turtle\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle turtle\">\n        <span class=\"icon icon-eye-blocked\"><\/span>\n      <\/button>\n      <button class=\"action js-grid\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Toggle grid lines\">\n        <span class=\"icon icon-grid7\"><\/span>\n      <\/button>\n    <\/menu>\n  <\/div>\n<\/div>\n\n<p>\n  These extra buttons allow you to pause <span class=\"icon icon-pause2\"><\/span> and stop <span class=\"icon icon-stop2\"><\/span> the animation before it finishes.\n<\/p>\n",
              "content_rendered":"<p>\n  The turtle always starts off facing to the right.\n<\/p>\n\n<p>\n  Things would get boring pretty quickly if the turtle always moved in the same direction. If you want to change which way the turtle is facing, you can \n<bk class=\"lib\">turn <bk class=\"inner\">left<\/bk><\/bk> or <bk class=\"lib\">turn <bk class=\"inner\">right<\/bk><\/bk>. Here's a <bk class=\"lib\">turn <bk class=\"inner\">left<\/bk><\/bk> example:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-turn-left\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_turn_simple\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Now the turtle is facing the top of the screen.<\/p>\n\n<p>\n  If you turn the same direction four times then the turtle will end up facing the same way it started:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-turn-360\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_turn_simple\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <next>\n    <block type=\"turtle_turn_simple\" id=\"2\">\n      <field name=\"DIRECTION\">LEFT<\/field>\n      <next>\n      <block type=\"turtle_turn_simple\" id=\"3\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <next>\n        <block type=\"turtle_turn_simple\" id=\"4\">\n          <field name=\"DIRECTION\">LEFT<\/field>\n        <\/block>\n        <\/next>\n      <\/block>\n      <\/next>\n    <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  You can combine <bk class=\"lib\">move forward<\/bk> and <bk class=\"lib\">turn<\/bk> blocks to draw shapes:\n<\/p>\n\n<p>\n  The turtle follows instructions <strong>from its point of view<\/strong>.  If the turtle is facing right, <bk class=\"lib\">move forward<\/bk> will make the turtle move forward for it (but towards the right of the screen for you):\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-move-forward\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_forward\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"2\">\n        <field name=\"NUM\">30<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  You must always give <bk class=\"lib\">move forward<\/bk> the number of <em>turtle steps<\/em> to take.  As it moves, it draws a line, so you can draw shapes (and <em>art<\/em>)!\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-move-bump\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_forward\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"2\">\n        <field name=\"NUM\">30<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn_simple\" id=\"3\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"4\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"5\">\n                <field name=\"NUM\">30<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"6\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"7\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"8\">\n                        <field name=\"NUM\">30<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"9\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"10\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"11\">\n                                <field name=\"NUM\">30<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn_simple\" id=\"12\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"13\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\"14\">\n                                        <field name=\"NUM\">30<\/field>\n                                      <\/block>\n                                    <\/value>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  This code draws a line with a bump in the middle. See if you can work out how to change the size of the bump by changing some of the numbers in the example.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Moving around",
              "notes_rendered":"",
              "content_rendered":"<p>\n  You can combine <bk class=\"lib\">move forward<\/bk> and <bk class=\"lib\">turn<\/bk> blocks to draw shapes:\n<\/p>\n\n<p>\n  The turtle follows instructions <strong>from its point of view<\/strong>.  If the turtle is facing right, <bk class=\"lib\">move forward<\/bk> will make the turtle move forward for it (but towards the right of the screen for you):\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-move-forward\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_forward\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"2\">\n        <field name=\"NUM\">30<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  You must always give <bk class=\"lib\">move forward<\/bk> the number of <em>turtle steps<\/em> to take.  As it moves, it draws a line, so you can draw shapes (and <em>art<\/em>)!\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-move-bump\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"turtle_forward\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"2\">\n        <field name=\"NUM\">30<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn_simple\" id=\"3\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"4\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"5\">\n                <field name=\"NUM\">30<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"6\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"7\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"8\">\n                        <field name=\"NUM\">30<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"9\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"10\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"11\">\n                                <field name=\"NUM\">30<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn_simple\" id=\"12\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"13\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\"14\">\n                                        <field name=\"NUM\">30<\/field>\n                                      <\/block>\n                                    <\/value>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  This code draws a line with a bump in the middle. See if you can work out how to change the size of the bump by changing some of the numbers in the example.\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Fair and square",
              "purpose":"",
              "problem":"aca-blockly-logo-square",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Get rect!",
              "purpose":"",
              "problem":"aca-blockly-logo-rectangle",
              "type":1
            }
          ],
          "title":"Turtle"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  When drawing our square, we repeated the side length 4 times in our code. If we had made a mistake when typing out the length, we wouldn't end up with a square.\n<\/p>\n\n<p>\n  Since squares use the same side length each time, it would be great if we could store the side length somewhere and reuse it - it would prevent mistakes, and make our code easier to change.\n<\/p>\n\n<p>\n  A <em>variable<\/em> is that place!  Each variable has a <em>name<\/em> which we use to set and get our value:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-variable-intro\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"math_number\" id=\"4\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"5\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"6\">\n            <field name=\"VAR\" id=\"7\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"8\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"9\">\n                <value name=\"DISTANCE\">\n                  <block type=\"variables_get\" id=\"10\">\n                    <field name=\"VAR\" id=\"11\" variabletype=\"\">line_length<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blocky>\n<\/code><\/pre>\n\n<p>\n  The <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block creates a new variable called <code data-lang=\"py3\">line_length<\/code>. It holds the value <bk class=\"math\"><bk class=\"inner\">100<\/bk><\/bk>.\n  We can then use the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> block to use that number as often as we want.\n<\/p>\n\n<p>\n  Change the number in the <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block to different values, and you'll see that all of the lines in the drawing change to that value, and you only have to make one change to your code!\n<\/p>\n\n<aside class=\"info\">\n  <h2>Creating a variable<\/h2>\n  <p>\n    To create a new variable, click the down arrow next to the variable name and select <strong>New Variable...<\/strong>\n  <\/p>\n<\/aside>\n"
                }
              ],
              "layout":0,
              "title":"Remembering things",
              "notes":[
                {
                  "left":"<p>\n  Variables are <em>extremely<\/em> powerful.  <strong>Variables allow the program to store information and retrieve it for future use.<\/strong>  Any substantial program will use many variables.\n<\/p>\n\n<p>\n  Variables help avoid duplicate code, by saving repeatedly used values.\n  <strong>They also make the code easier to understand.<\/strong>  Well-chosen variable names help explain what the program is doing and why.\n<\/p>\n\n<p>\n  Blockly creates a variable called <bk class=\"var\"><bk class=\"inner\">item<\/bk><\/bk> by default:\n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Blockly's default variable\" src=\"https:\/\/groklearning-cdn.com\/modules\/8tr95KARX7utt2SvYKwwYF\/blockly-default-variable.png\" width=\"300px\">\n<\/figure>\n\n<p>\n  After you drag the <bk class=\"var\">set <bk class=\"inner\">item<\/bk><\/bk> onto the workspace, you can click on the variable name to rename <code class=\"txt\">item<\/code> to something else, e.g. <code data-lang=\"py3\">line<\/code>: \n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Rename a variable\" src=\"https:\/\/groklearning-cdn.com\/modules\/4ax6CRAP4d8RV2ED26c2zT\/blockly-rename-var.png\" width=\"300px\">\n<\/figure>\n\n<p>\n  Now the <strong>Variables<\/strong> menu will show a set block <bk class=\"var\">set <bk class=\"inner\">line<\/bk><\/bk> and get block <bk class=\"var\"><bk class=\"inner\">line<\/bk><\/bk> for your new variable.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    AC:DT does not explicitly mention variables. However, variables are central to any collecting, storing, and processing of data (and responding to user input) in a program.\n  <\/p>\n  <p>\n   Spreadsheet cells and database columns also act as variables.  This includes Years 3\u20134 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP009\" target=\"_blank\">ACTDIP009<\/a> and 5\u20136 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP016\" target=\"_blank\">ACTDIP016<\/a>.\n  <\/p>\n  <p>\n    Years 7\u20138 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP026\" target=\"_blank\">ACTDIP026<\/a> and 9\u201310 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP037\" target=\"_blank\">ACTDIP037<\/a> include structured data, which we cover in the other Challenge streams.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "notes_rendered":"<p>\n  Variables are <em>extremely<\/em> powerful.  <strong>Variables allow the program to store information and retrieve it for future use.<\/strong>  Any substantial program will use many variables.\n<\/p>\n\n<p>\n  Variables help avoid duplicate code, by saving repeatedly used values.\n  <strong>They also make the code easier to understand.<\/strong>  Well-chosen variable names help explain what the program is doing and why.\n<\/p>\n\n<p>\n  Blockly creates a variable called <bk class=\"var\"><bk class=\"inner\">item<\/bk><\/bk> by default:\n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Blockly's default variable\" src=\"https:\/\/groklearning-cdn.com\/modules\/8tr95KARX7utt2SvYKwwYF\/blockly-default-variable.png\" width=\"300px\">\n<\/figure>\n\n<p>\n  After you drag the <bk class=\"var\">set <bk class=\"inner\">item<\/bk><\/bk> onto the workspace, you can click on the variable name to rename <code class=\"txt\">item<\/code> to something else, e.g. <code data-lang=\"py3\">line<\/code>: \n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Rename a variable\" src=\"https:\/\/groklearning-cdn.com\/modules\/4ax6CRAP4d8RV2ED26c2zT\/blockly-rename-var.png\" width=\"300px\">\n<\/figure>\n\n<p>\n  Now the <strong>Variables<\/strong> menu will show a set block <bk class=\"var\">set <bk class=\"inner\">line<\/bk><\/bk> and get block <bk class=\"var\"><bk class=\"inner\">line<\/bk><\/bk> for your new variable.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    AC:DT does not explicitly mention variables. However, variables are central to any collecting, storing, and processing of data (and responding to user input) in a program.\n  <\/p>\n  <p>\n   Spreadsheet cells and database columns also act as variables.  This includes Years 3\u20134 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP009\" target=\"_blank\">ACTDIP009<\/a> and 5\u20136 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP016\" target=\"_blank\">ACTDIP016<\/a>.\n  <\/p>\n  <p>\n    Years 7\u20138 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP026\" target=\"_blank\">ACTDIP026<\/a> and 9\u201310 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP037\" target=\"_blank\">ACTDIP037<\/a> include structured data, which we cover in the other Challenge streams.\n  <\/p>\n<\/aside>\n",
              "content_rendered":"<p>\n  When drawing our square, we repeated the side length 4 times in our code. If we had made a mistake when typing out the length, we wouldn't end up with a square.\n<\/p>\n\n<p>\n  Since squares use the same side length each time, it would be great if we could store the side length somewhere and reuse it - it would prevent mistakes, and make our code easier to change.\n<\/p>\n\n<p>\n  A <em>variable<\/em> is that place!  Each variable has a <em>name<\/em> which we use to set and get our value:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-variable-intro\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"math_number\" id=\"4\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"5\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"6\">\n            <field name=\"VAR\" id=\"7\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"8\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"9\">\n                <value name=\"DISTANCE\">\n                  <block type=\"variables_get\" id=\"10\">\n                    <field name=\"VAR\" id=\"11\" variabletype=\"\">line_length<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blocky>\n<\/code><\/pre>\n\n<p>\n  The <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block creates a new variable called <code data-lang=\"py3\">line_length<\/code>. It holds the value <bk class=\"math\"><bk class=\"inner\">100<\/bk><\/bk>.\n  We can then use the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> block to use that number as often as we want.\n<\/p>\n\n<p>\n  Change the number in the <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block to different values, and you'll see that all of the lines in the drawing change to that value, and you only have to make one change to your code!\n<\/p>\n\n<aside class=\"info\">\n  <h2>Creating a variable<\/h2>\n  <p>\n    To create a new variable, click the down arrow next to the variable name and select <strong>New Variable...<\/strong>\n  <\/p>\n<\/aside>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Variables save you from having to type the same values out a lot of times, but they also give us a way to store information that the user might give the program. Let's write a program that lets the user decide how long the line should be:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-input-length\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What length line?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"6\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"8\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Run this program. Even if you haven't run any so far, run this one!\n<\/p>\n\n<p>\n  <strong>You will need to type a number and press <kbd>Enter<\/kbd><\/strong>:\n<\/p>\n\n<p>\n  The <bk class=\"math\">ask<\/bk> block needs a question <bk class=\"str\">string<\/bk> to <em>ask the user<\/em>. It returns the user's answer to our program as a number. Our program stores the answer in the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> variable so we can use it to draw later. You will find the <bk class=\"math\">ask<\/bk> block in the input menu.\n<\/p>\n\n<p>\n  <strong>Run it again with a different number. You should also try changing the wording of the question.<\/strong>\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Asking the user for information",
              "notes":[
                {
                  "left":"<p>\n  <strong>Students really (really!) need to run this slide's example!<\/strong> It is worth running it on a big screen so everyone sees it at least once.\n<\/p>\n\n<p>\n  It is their first <em>interactive<\/em> program \u2013\u00a0i.e. it responds to their input.\n<\/p>\n\n<p>\n  When the program runs, it waits for the user to answer:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>What length line? <\/o>\n<\/code><\/pre>\n\n<p>\n  It won't keep going until the user enters a number and presses <kbd>Enter<\/kbd>.\n<\/p>\n\n<p>\n  The number that the user enters is <em>returned<\/em> by the <bk class=\"math\">ask<\/bk> block. The <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block stores that number in the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> variable.  Finally, the <bk class=\"lib\">move forward<\/bk> block then moves the turtle the specified length.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    Text and numbers are two important types of user input.\n  <\/p>\n  <p>\n    AC:DT requires students to write programs involving <em>user input<\/em> from Years 3\u20134 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP011\" target=\"_blank\">ACTDIP011<\/a> and 5\u20136 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP020\" target=\"_blank\">ACTDIP020<\/a>.\n    Students must <em>predict output for a given input<\/em> in Years 7\u20138 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP029\" target=\"_blank\">ACTDIP029<\/a>.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "notes_rendered":"<p>\n  <strong>Students really (really!) need to run this slide's example!<\/strong> It is worth running it on a big screen so everyone sees it at least once.\n<\/p>\n\n<p>\n  It is their first <em>interactive<\/em> program \u2013\u00a0i.e. it responds to their input.\n<\/p>\n\n<p>\n  When the program runs, it waits for the user to answer:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>What length line? <\/o>\n<\/code><\/pre>\n\n<p>\n  It won't keep going until the user enters a number and presses <kbd>Enter<\/kbd>.\n<\/p>\n\n<p>\n  The number that the user enters is <em>returned<\/em> by the <bk class=\"math\">ask<\/bk> block. The <bk class=\"var\">set <bk class=\"inner\">line_length<\/bk><\/bk> block stores that number in the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> variable.  Finally, the <bk class=\"lib\">move forward<\/bk> block then moves the turtle the specified length.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    Text and numbers are two important types of user input.\n  <\/p>\n  <p>\n    AC:DT requires students to write programs involving <em>user input<\/em> from Years 3\u20134 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP011\" target=\"_blank\">ACTDIP011<\/a> and 5\u20136 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP020\" target=\"_blank\">ACTDIP020<\/a>.\n    Students must <em>predict output for a given input<\/em> in Years 7\u20138 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIP029\" target=\"_blank\">ACTDIP029<\/a>.\n  <\/p>\n<\/aside>\n",
              "content_rendered":"<p>\n  Variables save you from having to type the same values out a lot of times, but they also give us a way to store information that the user might give the program. Let's write a program that lets the user decide how long the line should be:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-input-length\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What length line?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"6\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"8\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Run this program. Even if you haven't run any so far, run this one!\n<\/p>\n\n<p>\n  <strong>You will need to type a number and press <kbd>Enter<\/kbd><\/strong>:\n<\/p>\n\n<p>\n  The <bk class=\"math\">ask<\/bk> block needs a question <bk class=\"str\">string<\/bk> to <em>ask the user<\/em>. It returns the user's answer to our program as a number. Our program stores the answer in the <bk class=\"var\"><bk class=\"inner\">line_length<\/bk><\/bk> variable so we can use it to draw later. You will find the <bk class=\"math\">ask<\/bk> block in the input menu.\n<\/p>\n\n<p>\n  <strong>Run it again with a different number. You should also try changing the wording of the question.<\/strong>\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  The computer uses words and numbers in different ways. This means we need a way to differentiate between them, and to declare whether we are using a string like <bk class=\"str lit\"><bk class=\"inner\">what length?<\/bk><\/bk> or a number like <bk class=\"math\"><bk class=\"inner\">10<\/bk><\/bk>. We call these <strong>data types<\/strong>.\n<\/p>\n\n<p>\n  Blockly uses colour to show the data type: the <bk class=\"str\">green<\/bk> blocks are strings and the <bk class=\"math\">blue<\/bk> blocks are numbers.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-types\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What length line?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"6\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"8\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  We write a question in words, so we need to use a <bk class=\"str\">green<\/bk> string block for our question.\n<\/p>\n\n<p>\n  If we expect the user to type in a number, then we need to make sure that our <bk class=\"math\">ask<\/bk> block is blue, since we'll be using the user's answer as a number.\n<\/p>\n\n<p>\n  Since moving the turtle around means specifying distances, we need to use the <bk class=\"math\">blue<\/bk> blocks in our <bk class=\"lib\">move forward<\/bk> blocks.\n<\/p>\n\n<p>\n  Variable blocks are special - they are <bk class=\"var\">grey<\/bk> because they take on the colour of the value last assigned to them - in this case, the blue of the <bk class=\"math\">ask<\/bk> block.\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Different types of data",
              "notes":[
                {
                  "left":"<p>\n  <strong>Values behave according to their type, not their contents.<\/strong>\n<\/p>\n\n<p>\n  By <em>behave<\/em> we really mean, what operations can you do on the value? and how do they work?\n<\/p>\n\n<p>\n  It doesn't make sense to move <bk class=\"str lit\"><bk class=\"inner\">cat<\/bk><\/bk> distance, since we have no way of knowing what that means. But there is a subtle difference between <bk class=\"str lit\"><bk class=\"inner\">5<\/bk><\/bk> and <bk class=\"math\"><bk class=\"inner\">5<\/bk><\/bk>. The former is the text character \"5\", whereas the latter is the value 5, and can be used for numerical operations.\n<\/p>\n\n<p>\n  In this course, students will only be capturing numbers from the user, so they'll only have access to an ask block that stores the user's data as a number. However, it is important that they recognise that numbers and strings are different, and that this is important for their program to operate properly.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    Students must <em>recognise different types of data<\/em> from Year 3-4 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIK008\" target=\"_blank\">ACTDIK008<\/a>. They have now seen both strings and numbers.\n  <\/p>\n  <p>\n    Students should explore many data types (in coding and elsewhere), but these are the absolute minimum requirement.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "notes_rendered":"<p>\n  <strong>Values behave according to their type, not their contents.<\/strong>\n<\/p>\n\n<p>\n  By <em>behave<\/em> we really mean, what operations can you do on the value? and how do they work?\n<\/p>\n\n<p>\n  It doesn't make sense to move <bk class=\"str lit\"><bk class=\"inner\">cat<\/bk><\/bk> distance, since we have no way of knowing what that means. But there is a subtle difference between <bk class=\"str lit\"><bk class=\"inner\">5<\/bk><\/bk> and <bk class=\"math\"><bk class=\"inner\">5<\/bk><\/bk>. The former is the text character \"5\", whereas the latter is the value 5, and can be used for numerical operations.\n<\/p>\n\n<p>\n  In this course, students will only be capturing numbers from the user, so they'll only have access to an ask block that stores the user's data as a number. However, it is important that they recognise that numbers and strings are different, and that this is important for their program to operate properly.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    Students must <em>recognise different types of data<\/em> from Year 3-4 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIK008\" target=\"_blank\">ACTDIK008<\/a>. They have now seen both strings and numbers.\n  <\/p>\n  <p>\n    Students should explore many data types (in coding and elsewhere), but these are the absolute minimum requirement.\n  <\/p>\n<\/aside>\n",
              "content_rendered":"<p>\n  The computer uses words and numbers in different ways. This means we need a way to differentiate between them, and to declare whether we are using a string like <bk class=\"str lit\"><bk class=\"inner\">what length?<\/bk><\/bk> or a number like <bk class=\"math\"><bk class=\"inner\">10<\/bk><\/bk>. We call these <strong>data types<\/strong>.\n<\/p>\n\n<p>\n  Blockly uses colour to show the data type: the <bk class=\"str\">green<\/bk> blocks are strings and the <bk class=\"math\">blue<\/bk> blocks are numbers.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-types\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">line_length<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">line_length<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What length line?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"6\">\n        <value name=\"DISTANCE\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"8\" variabletype=\"\">line_length<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  We write a question in words, so we need to use a <bk class=\"str\">green<\/bk> string block for our question.\n<\/p>\n\n<p>\n  If we expect the user to type in a number, then we need to make sure that our <bk class=\"math\">ask<\/bk> block is blue, since we'll be using the user's answer as a number.\n<\/p>\n\n<p>\n  Since moving the turtle around means specifying distances, we need to use the <bk class=\"math\">blue<\/bk> blocks in our <bk class=\"lib\">move forward<\/bk> blocks.\n<\/p>\n\n<p>\n  Variable blocks are special - they are <bk class=\"var\">grey<\/bk> because they take on the colour of the value last assigned to them - in this case, the blue of the <bk class=\"math\">ask<\/bk> block.\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Turtles would be boring if they drew the same shape every time.\n<\/p>\n\n<p>\n  Now that we can ask the user for input, let's ask them how high our bump should be:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-input-bump\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">bump_size<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">bump_size<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What size bump?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"2\">\n            <field name=\"NUM\">30<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"3\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"6\">\n                <value name=\"DISTANCE\">\n                  <block type=\"variables_get\" id=\"7\">\n                    <field name=\"VAR\" id=\"8\" variabletype=\"\">bump_size<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"6\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"7\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"8\">\n                            <field name=\"NUM\">30<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"9\">\n                            <field name=\"DIRECTION\">RIGHT<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"6\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"variables_get\" id=\"7\">\n                                    <field name=\"VAR\" id=\"8\" variabletype=\"\">bump_size<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"12\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"13\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"14\">\n                                            <field name=\"NUM\">30<\/field>\n                                          <\/block>\n                                        <\/value>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try running this again and enter different heights!<\/p>"
                }
              ],
              "layout":0,
              "title":"Custom shapes",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Turtles would be boring if they drew the same shape every time.\n<\/p>\n\n<p>\n  Now that we can ask the user for input, let's ask them how high our bump should be:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-input-bump\"><code data-lang=\"blockly\">\n<blockly>\n  <variables>\n    <variable type=\"\" id=\"1\">bump_size<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">bump_size<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What size bump?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"2\">\n            <field name=\"NUM\">30<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"3\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"6\">\n                <value name=\"DISTANCE\">\n                  <block type=\"variables_get\" id=\"7\">\n                    <field name=\"VAR\" id=\"8\" variabletype=\"\">bump_size<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"6\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"7\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"8\">\n                            <field name=\"NUM\">30<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"9\">\n                            <field name=\"DIRECTION\">RIGHT<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"6\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"variables_get\" id=\"7\">\n                                    <field name=\"VAR\" id=\"8\" variabletype=\"\">bump_size<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"12\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"13\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"14\">\n                                            <field name=\"NUM\">30<\/field>\n                                          <\/block>\n                                        <\/value>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try running this again and enter different heights!<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Any square",
              "purpose":"",
              "problem":"aca-blockly-logo-any-square",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Any rectangle",
              "purpose":"",
              "problem":"aca-blockly-logo-any-rectangle",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Step up",
              "purpose":"",
              "problem":"aca-blockly-logo-step-up",
              "type":1
            }
          ],
          "title":"Variables and input"
        }
      ],
      "title":"Drawing shapes with turtle",
      "label":"aca-blockly-maths-yr7-1",
      "updated_at":"2017-11-15T06:38:11.078932+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Two lines are <strong>parallel<\/strong> if they're always the same distance apart. We can draw parallel lines by moving the turtle any distance 90\u00b0 from our first line, then drawing another line in the same direction as the first one (by turning another 90\u00b0).\n<\/p>\n\n<p>\n  In the drawing below, the two horizontal lines at the top and bottom are parallel to one another.\n<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\" style=\"display: none\">\n[\"begin_animation\",400,300,10,\"49c1ddba-69cd-11e7-8d33-22000a150559\"]\n[\"create_shape\",\"49c1f1f6-69cd-11e7-8d33-22000a150559\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1}]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  When we draw parallel lines, we don't want our construction line (the vertical one) to be there. We can move the turtle without drawing a line by lifting our pen up, and putting it back down again.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Parallel lines",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Two lines are <strong>parallel<\/strong> if they're always the same distance apart. We can draw parallel lines by moving the turtle any distance 90\u00b0 from our first line, then drawing another line in the same direction as the first one (by turning another 90\u00b0).\n<\/p>\n\n<p>\n  In the drawing below, the two horizontal lines at the top and bottom are parallel to one another.\n<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\" style=\"display: none\">\n[\"begin_animation\",400,300,10,\"49c1ddba-69cd-11e7-8d33-22000a150559\"]\n[\"create_shape\",\"49c1f1f6-69cd-11e7-8d33-22000a150559\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1}]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  When we draw parallel lines, we don't want our construction line (the vertical one) to be there. We can move the turtle without drawing a line by lifting our pen up, and putting it back down again.\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  To move the turtle around into the right position without drawing anything, use the <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk> block like this:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-penup-pendown\"><code data-lang=\"blockly\">\n<blockly>\n  <variables><\/variables>\n  <block type=\"turtle_forward\" id=\"3Y^dN)}0u-Yv^EjJ+R[^\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"Gk$2hr;ao2q:G[F=b4IG\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pen\" id=\"J*vFFhnDUP#E-BE:SBX]\">\n        <field name=\"STATE\">UP<\/field>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"gIrg%qHV-{hpV3fEq9(^\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"h9VO3^_f6R+K.2VdnB7{\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"ad#z37*Cvjpt*h*Z#Lt-\">\n                    <field name=\"NUM\">50<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"*1rRjhbtH\/P}(sye_Wf=\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <next>\n                      <block type=\"turtle_pen\" id=\"?Yy}D5Hx^gPPInnN!^9\/\">\n                        <field name=\"STATE\">DOWN<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"\/!ad~y059M.VIY\/!H):9\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"w1knWNYjKZ1Hc9W?B=Gx\">\n                                <field name=\"NUM\">100<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Imagine the turtle is holding a pen, after you've lifted up the pen with <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk> the pen is off the paper and the turtle won't draw anything as it moves around. After you've put the pen back down with <bk class=\"lib\">pen <bk class=\"inner\">down<\/bk><\/bk>, the turtle will draw as it moves again.<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Pen up and down",
              "notes_rendered":"",
              "content_rendered":"<p>\n  To move the turtle around into the right position without drawing anything, use the <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk> block like this:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-penup-pendown\"><code data-lang=\"blockly\">\n<blockly>\n  <variables><\/variables>\n  <block type=\"turtle_forward\" id=\"3Y^dN)}0u-Yv^EjJ+R[^\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"Gk$2hr;ao2q:G[F=b4IG\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pen\" id=\"J*vFFhnDUP#E-BE:SBX]\">\n        <field name=\"STATE\">UP<\/field>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"gIrg%qHV-{hpV3fEq9(^\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"h9VO3^_f6R+K.2VdnB7{\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"ad#z37*Cvjpt*h*Z#Lt-\">\n                    <field name=\"NUM\">50<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"*1rRjhbtH\/P}(sye_Wf=\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <next>\n                      <block type=\"turtle_pen\" id=\"?Yy}D5Hx^gPPInnN!^9\/\">\n                        <field name=\"STATE\">DOWN<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"\/!ad~y059M.VIY\/!H):9\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"w1knWNYjKZ1Hc9W?B=Gx\">\n                                <field name=\"NUM\">100<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Imagine the turtle is holding a pen, after you've lifted up the pen with <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk> the pen is off the paper and the turtle won't draw anything as it moves around. After you've put the pen back down with <bk class=\"lib\">pen <bk class=\"inner\">down<\/bk><\/bk>, the turtle will draw as it moves again.<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Dashed line",
              "purpose":"",
              "problem":"aca-blockly-logo-dashed-line",
              "type":1
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  The <bk class=\"lib\">set pen size<\/bk> block sets the width of the pen that the turtle uses to draw.  The width must always be a whole number.\n<\/p>\n\n<p>\n  The default pen width we have used so far is 1.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-pensize-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"12\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"13\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"14\" inline=\"true\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"15\">\n            <field name=\"NUM\">90<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pensize\" id=\"10\" inline=\"true\">\n            <value name=\"SIZE\">\n              <block type=\"math_number\" id=\"11\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"26\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"27\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try it out with different sizes!<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Drawing thicker lines",
              "notes_rendered":"",
              "content_rendered":"<p>\n  The <bk class=\"lib\">set pen size<\/bk> block sets the width of the pen that the turtle uses to draw.  The width must always be a whole number.\n<\/p>\n\n<p>\n  The default pen width we have used so far is 1.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-pensize-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"12\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"13\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"14\" inline=\"true\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"15\">\n            <field name=\"NUM\">90<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pensize\" id=\"10\" inline=\"true\">\n            <value name=\"SIZE\">\n              <block type=\"math_number\" id=\"11\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"26\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"27\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try it out with different sizes!<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: It's growing!",
              "purpose":"",
              "problem":"aca-blockly-logo-growing-lines",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: The hamburger icon",
              "purpose":"",
              "problem":"aca-blockly-logo-hamburger-icon",
              "type":1
            }
          ],
          "title":"Parallel lines: using the pen"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>When another line crosses parallel lines, it's called a <strong>traversal<\/strong>.<\/p>\n\n<p>\nThe black lines below are parallel, with a grey <em>traversal<\/em> line crossing them.  <strong>You can drag the grey turtle to change the traversal angle:<\/strong>\n<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .all > .q2, .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .all > .q3, .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .all > .q4, .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"all\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>As you move the traversal line around, you'll see that different pairs of angles are related in different ways. Let's explore some of these angle relationships...<\/p>"
                }
              ],
              "layout":0,
              "title":"Transversals",
              "notes_rendered":"",
              "content_rendered":"<p>When another line crosses parallel lines, it's called a <strong>traversal<\/strong>.<\/p>\n\n<p>\nThe black lines below are parallel, with a grey <em>traversal<\/em> line crossing them.  <strong>You can drag the grey turtle to change the traversal angle:<\/strong>\n<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .all > .q2, .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .all > .q3, .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .all > .q4, .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"all\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>As you move the traversal line around, you'll see that different pairs of angles are related in different ways. Let's explore some of these angle relationships...<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  When any two lines intersect, the angles that are opposite to each other are equal. There are four pairs of <em>opposite angles<\/em>, and we've highlighted one pair in red:\n<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"opp1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot all four pairs, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('opp1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-warning\" onclick=\"svgMode('opp2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('opp3'); this.blur();\">Pair 3<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('opp4'); this.blur();\">Pair 4<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n\n<aside class=\"info\">\n  <h2>Vertically opposite<\/h2>\n  <p>\n    Opposite angles are also called <em>vertically opposite angles<\/em>. They are called <em>vertical<\/em> because they share a common <em>vertex<\/em>, not because they have to be one on top of the other.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "layout":0,
              "title":"Opposite angles",
              "notes_rendered":"",
              "content_rendered":"<p>\n  When any two lines intersect, the angles that are opposite to each other are equal. There are four pairs of <em>opposite angles<\/em>, and we've highlighted one pair in red:\n<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"opp1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot all four pairs, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('opp1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-warning\" onclick=\"svgMode('opp2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('opp3'); this.blur();\">Pair 3<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('opp4'); this.blur();\">Pair 4<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n\n<aside class=\"info\">\n  <h2>Vertically opposite<\/h2>\n  <p>\n    Opposite angles are also called <em>vertically opposite angles<\/em>. They are called <em>vertical<\/em> because they share a common <em>vertex<\/em>, not because they have to be one on top of the other.\n  <\/p>\n<\/aside>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Corresponding angles on parallel lines are equal. <em>Corresponding<\/em> means they appear in the same position on each parallel line. For example, the two red angles below are corresponding:\n<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"corr1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot all four pairs, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('corr1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-warning\" onclick=\"svgMode('corr2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('corr3'); this.blur();\">Pair 3<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('corr4'); this.blur();\">Pair 4<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Corresponding angles",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Corresponding angles on parallel lines are equal. <em>Corresponding<\/em> means they appear in the same position on each parallel line. For example, the two red angles below are corresponding:\n<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"corr1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot all four pairs, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('corr1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-warning\" onclick=\"svgMode('corr2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('corr3'); this.blur();\">Pair 3<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('corr4'); this.blur();\">Pair 4<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Alternate angles on parallel lines are also equal. There are only two pairs of alternate angles, and we've highlighted one pair in red:<\/p>\n\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"alt1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot the other pair, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('alt1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('alt2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Alternate angles",
              "notes_rendered":"",
              "content_rendered":"<p>Alternate angles on parallel lines are also equal. There are only two pairs of alternate angles, and we've highlighted one pair in red:<\/p>\n\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"alt1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot the other pair, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('alt1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('alt2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Co-interior angles are different to all the rest: a pair of co-interior angles will sum to 180&deg; (this is called <em>supplementary<\/em>). We've highlighted one of the two pairs of co-interior angles in orange:<\/p>\n\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"coint1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot the other pair, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-warning\" onclick=\"svgMode('coint1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('coint2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n\n<br>\n<aside class=\"info\">\n<h2>Complementary or supplementary?<\/h2>\n<p>If you find yourself getting the two confused, remember that complementary angles sum to 90&deg; and supplementary angles sum to 180&deg; because 90 is smaller than 180, and C comes before S in the alphabet!<\/p>\n<\/aside>"
                }
              ],
              "layout":0,
              "title":"Co-interior angles",
              "notes_rendered":"",
              "content_rendered":"<p>Co-interior angles are different to all the rest: a pair of co-interior angles will sum to 180&deg; (this is called <em>supplementary<\/em>). We've highlighted one of the two pairs of co-interior angles in orange:<\/p>\n\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"coint1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot the other pair, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-warning\" onclick=\"svgMode('coint1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('coint2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n\n<br>\n<aside class=\"info\">\n<h2>Complementary or supplementary?<\/h2>\n<p>If you find yourself getting the two confused, remember that complementary angles sum to 90&deg; and supplementary angles sum to 180&deg; because 90 is smaller than 180, and C comes before S in the alphabet!<\/p>\n<\/aside>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Knowing which angles crossing parallel lines and within shapes are related makes it much easier to draw them!  Use the diagram and table below to help you if you get stuck:<\/p>\n\n\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"all\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<br>\n<table class=\"table table-hover table-bordered\">\n  <thead>\n    <tr><th>Relationship<\/th><th>Property<\/th><th>Examples (click number to show)<\/th><\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <td><checkbox name=\"opposite\">Opposite<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('opp1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('opp2'); this.blur();\">Pair 2<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('opp3'); this.blur();\">Pair 3<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('opp4'); this.blur();\">Pair 4<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Corresponding<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('corr1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('corr2'); this.blur();\">Pair 2<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('corr3'); this.blur();\">Pair 3<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('corr4'); this.blur();\">Pair 4<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Alternate<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('alt1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('alt2'); this.blur();\">Pair 2<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Cointerior<\/td>\n      <td>sum to 180\u00b0<\/td>\n      <td>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('coint1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('coint2'); this.blur();\">Pair 2<\/button>\n      <\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>\n\n<p class=\"text-center\">\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear diagram<\/button>\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Angle relationships summary",
              "notes_rendered":"",
              "content_rendered":"<p>Knowing which angles crossing parallel lines and within shapes are related makes it much easier to draw them!  Use the diagram and table below to help you if you get stuck:<\/p>\n\n\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"all\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<br>\n<table class=\"table table-hover table-bordered\">\n  <thead>\n    <tr><th>Relationship<\/th><th>Property<\/th><th>Examples (click number to show)<\/th><\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <td><checkbox name=\"opposite\">Opposite<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('opp1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('opp2'); this.blur();\">Pair 2<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('opp3'); this.blur();\">Pair 3<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('opp4'); this.blur();\">Pair 4<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Corresponding<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('corr1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('corr2'); this.blur();\">Pair 2<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('corr3'); this.blur();\">Pair 3<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('corr4'); this.blur();\">Pair 4<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Alternate<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('alt1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('alt2'); this.blur();\">Pair 2<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Cointerior<\/td>\n      <td>sum to 180\u00b0<\/td>\n      <td>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('coint1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('coint2'); this.blur();\">Pair 2<\/button>\n      <\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>\n\n<p class=\"text-center\">\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear diagram<\/button>\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Letter Z",
              "purpose":"",
              "problem":"aca-blockly-logo-letter-z",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Letter N",
              "purpose":"",
              "problem":"aca-blockly-logo-letter-n",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Parallelogram",
              "purpose":"",
              "problem":"aca-blockly-logo-parallelogram",
              "type":1
            }
          ],
          "title":"Angles on parallel lines"
        }
      ],
      "title":"Parallel lines and controlling the pen",
      "label":"aca-blockly-maths-yr7-3",
      "updated_at":"2017-11-15T06:38:41.196311+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  The colour of the line can be changed using the <bk class=\"lib\">set pen color<\/bk> block:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-pen-colors-isosceles\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pencolor_dropdown\" id=\"66\" x=\"10\" y=\"10\">\n    <field name=\"COLOR\">red<\/field>\n    <next>\n      <block type=\"turtle_forward\" id=\"42\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"43\">\n            <field name=\"NUM\">200<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"44\" inline=\"true\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"47\">\n                <field name=\"NUM\">135<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_pencolor_dropdown\" id=\"67\">\n                <field name=\"COLOR\">purple<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"52\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"53\">\n                        <field name=\"NUM\">141.4213<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"54\" inline=\"true\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"math_number\" id=\"50\">\n                            <field name=\"NUM\">90<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_pencolor_dropdown\" id=\"68\">\n                            <field name=\"COLOR\">blue<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"56\" inline=\"true\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"57\">\n                                    <field name=\"NUM\">141.4213<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  <strong>Try changing the colours in the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Isosceles_triangle\" target=\"_blank\">isosceles triangle<\/a> above!<\/strong>\n<\/p>\n\n<aside class=\"info\">\n  <h2>Most code uses <em>color<\/em> (American spelling)!<\/h2>\n  <p>\n    Most programs and modules (like <code data-lang=\"py3\">turtle<\/code>) will spell colour with the American spelling (c-o-l-o-r, no u) \u2013\u00a0so watch out!\n  <\/p>\n<\/aside>\n"
                }
              ],
              "layout":0,
              "title":"With flying colours!",
              "notes_rendered":"",
              "content_rendered":"<p>\n  The colour of the line can be changed using the <bk class=\"lib\">set pen color<\/bk> block:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-pen-colors-isosceles\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pencolor_dropdown\" id=\"66\" x=\"10\" y=\"10\">\n    <field name=\"COLOR\">red<\/field>\n    <next>\n      <block type=\"turtle_forward\" id=\"42\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"43\">\n            <field name=\"NUM\">200<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"44\" inline=\"true\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"47\">\n                <field name=\"NUM\">135<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_pencolor_dropdown\" id=\"67\">\n                <field name=\"COLOR\">purple<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"52\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"53\">\n                        <field name=\"NUM\">141.4213<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"54\" inline=\"true\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"math_number\" id=\"50\">\n                            <field name=\"NUM\">90<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_pencolor_dropdown\" id=\"68\">\n                            <field name=\"COLOR\">blue<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"56\" inline=\"true\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"57\">\n                                    <field name=\"NUM\">141.4213<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  <strong>Try changing the colours in the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Isosceles_triangle\" target=\"_blank\">isosceles triangle<\/a> above!<\/strong>\n<\/p>\n\n<aside class=\"info\">\n  <h2>Most code uses <em>color<\/em> (American spelling)!<\/h2>\n  <p>\n    Most programs and modules (like <code data-lang=\"py3\">turtle<\/code>) will spell colour with the American spelling (c-o-l-o-r, no u) \u2013\u00a0so watch out!\n  <\/p>\n<\/aside>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Blockly has a version of the <bk class=\"lib\">set pen color<\/bk> block that describes the colour as a string rather than a drop-down list:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-pen-colors-strings\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_pencolor_text\" id=\"K?RdkxT57`B~}\/L=4M\/Y\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"+RWC*#]\/cm{]_bC*j6c4\">\n        <field name=\"TEXT\">darkviolet<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pensize\" id=\"U,vGP0u^q8A:sU2Q7a4d\">\n        <value name=\"SIZE\">\n          <block type=\"math_number\" id=\"W]ybleW@S|31XK7We}Q3\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"vz,`QXo18kl^b1,9nn2D\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"E)aqj?KH)TZTO@O|F^,j\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"8qAPMd9.xG@Hj?Y0jTJ;\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"@pzy(9ApkA@]hQgLFb?j\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"XdU4X]13W,F#eSz!Y9xy\">\n                        <field name=\"NUM\">20<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"{HA|Xg~3zD6rsEe2~Kkp\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\",CeFj54o[TRZAxSHb]eZ\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"|wV.y[q8bmd4;}_po{^F\">\n                                <field name=\"NUM\">20<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn_simple\" id=\"`19ef.2m%U=J$|K+M!gW\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"86Km;#Ua=[t|R}6YLPBj\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\"ki,G-8c_ERVQ2KFw22)V\">\n                                        <field name=\"NUM\">20<\/field>\n                                      <\/block>\n                                    <\/value>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  The square example above also changes the <bk class=\"lib\">pen size<\/bk> - you can change the colour and the thickness of the line in the same program.\n<\/p>\n\n<p>\n  The full set of colour strings that the <code data-lang=\"py3\">turtle<\/code> knows about are <a href=\"http:\/\/wiki.tcl.tk\/37701\" target=\"_blank\">here<\/a>. Just remember that with all colours you need to take the spaces out (so <code data-lang=\"py3\">\"forest green\"<\/code> becomes <code data-lang=\"py3\">\"forestgreen\"<\/code>).\n<\/p>\n\n<p>\n  Here are some of our favourite colours:\n<\/p>\n\n<table class=\"table table-hover table-bordered\" style=\"font-size: 14px\">\n  <tbody>\n    <tr><td style=\"background-color: red; color: white\">red<\/td><td style=\"background-color: orangered; color: white\">orangered<\/td><td style=\"background-color: tomato; color: white\">tomato<\/td><td style=\"background-color: coral; color: white\">coral<\/td><td style=\"background-color: salmon; color: white\">salmon<\/td><\/tr>\n    <tr><td style=\"background-color: darkorange; color: white\">darkorange<\/td><td style=\"background-color: orange; color: white\">orange<\/td><td style=\"background-color: goldenrod; color: white\">goldenrod<\/td><td style=\"background-color: gold; color: black\">gold<\/td><td style=\"background-color: yellow; color: black\">yellow<\/td><\/tr>\n    <tr><td style=\"background-color: darkgreen; color: white\">darkgreen<\/td><td style=\"background-color: forestgreen; color: white\">forestgreen<\/td><td style=\"background-color: springgreen; color: black\">springgreen<\/td><td style=\"background-color: lawngreen; color: black\">lawngreen<\/td><td style=\"background-color: #00ff00; color: black\">green<\/td><\/tr>\n    <tr><td style=\"background-color: navy; color: white\">navy<\/td><td style=\"background-color: mediumblue; color: white\">mediumblue<\/td><td style=\"background-color: royalblue; color: white\">royalblue<\/td><td style=\"background-color: cornflowerblue; color: white\">cornflowerblue<\/td><td style=\"background-color: skyblue; color: black\">skyblue<\/td><\/tr>\n    <tr><td style=\"background-color: darkviolet; color: white\">darkviolet<\/td><td style=\"background-color: purple; color: white\">purple<\/td><td style=\"background-color: orchid; color: white\">orchid<\/td><td style=\"background-color: violet; color: white\">violet<\/td><td style=\"background-color: plum; color: black\">plum<\/td><\/tr>    \n    <tr><td style=\"background-color: deeppink; color: white\">deeppink<\/td><td style=\"background-color: hotpink; color: white\">hotpink<\/td><td style=\"background-color: pink; color: black\">pink<\/td><td style=\"background-color: lightpink; color: black\">lightpink<\/td><td style=\"background-color: mistyrose; color: black\">mistyrose<\/td><\/tr>\n    <tr><td style=\"background-color: brown; color: white\">brown<\/td><td style=\"background-color: saddlebrown; color: white\">saddlebrown<\/td><td style=\"background-color: chocolate; color: white\">chocolate<\/td><td style=\"background-color: tan; color: black\">tan<\/td><td style=\"background-color: wheat; color: black\">wheat<\/td><\/tr>\n    <tr><td style=\"background-color: black; color: white\">black<\/td><td style=\"background-color: slategrey; color: white\">slategrey<\/td><td style=\"background-color: dimgray; color: white\">dimgray<\/td><td style=\"background-color: lightgray; color: black\">lightgray<\/td><td style=\"background-color: white; color: black\">white<\/td><\/tr>    \n  <\/tbody>\n<\/table>\n"
                }
              ],
              "layout":0,
              "title":"More colour choices",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Blockly has a version of the <bk class=\"lib\">set pen color<\/bk> block that describes the colour as a string rather than a drop-down list:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-pen-colors-strings\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_pencolor_text\" id=\"K?RdkxT57`B~}\/L=4M\/Y\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"+RWC*#]\/cm{]_bC*j6c4\">\n        <field name=\"TEXT\">darkviolet<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pensize\" id=\"U,vGP0u^q8A:sU2Q7a4d\">\n        <value name=\"SIZE\">\n          <block type=\"math_number\" id=\"W]ybleW@S|31XK7We}Q3\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"vz,`QXo18kl^b1,9nn2D\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"E)aqj?KH)TZTO@O|F^,j\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"8qAPMd9.xG@Hj?Y0jTJ;\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"@pzy(9ApkA@]hQgLFb?j\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"XdU4X]13W,F#eSz!Y9xy\">\n                        <field name=\"NUM\">20<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"{HA|Xg~3zD6rsEe2~Kkp\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <next>\n                          <block type=\"turtle_forward\" id=\",CeFj54o[TRZAxSHb]eZ\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"|wV.y[q8bmd4;}_po{^F\">\n                                <field name=\"NUM\">20<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn_simple\" id=\"`19ef.2m%U=J$|K+M!gW\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"86Km;#Ua=[t|R}6YLPBj\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\"ki,G-8c_ERVQ2KFw22)V\">\n                                        <field name=\"NUM\">20<\/field>\n                                      <\/block>\n                                    <\/value>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  The square example above also changes the <bk class=\"lib\">pen size<\/bk> - you can change the colour and the thickness of the line in the same program.\n<\/p>\n\n<p>\n  The full set of colour strings that the <code data-lang=\"py3\">turtle<\/code> knows about are <a href=\"http:\/\/wiki.tcl.tk\/37701\" target=\"_blank\">here<\/a>. Just remember that with all colours you need to take the spaces out (so <code data-lang=\"py3\">\"forest green\"<\/code> becomes <code data-lang=\"py3\">\"forestgreen\"<\/code>).\n<\/p>\n\n<p>\n  Here are some of our favourite colours:\n<\/p>\n\n<table class=\"table table-hover table-bordered\" style=\"font-size: 14px\">\n  <tbody>\n    <tr><td style=\"background-color: red; color: white\">red<\/td><td style=\"background-color: orangered; color: white\">orangered<\/td><td style=\"background-color: tomato; color: white\">tomato<\/td><td style=\"background-color: coral; color: white\">coral<\/td><td style=\"background-color: salmon; color: white\">salmon<\/td><\/tr>\n    <tr><td style=\"background-color: darkorange; color: white\">darkorange<\/td><td style=\"background-color: orange; color: white\">orange<\/td><td style=\"background-color: goldenrod; color: white\">goldenrod<\/td><td style=\"background-color: gold; color: black\">gold<\/td><td style=\"background-color: yellow; color: black\">yellow<\/td><\/tr>\n    <tr><td style=\"background-color: darkgreen; color: white\">darkgreen<\/td><td style=\"background-color: forestgreen; color: white\">forestgreen<\/td><td style=\"background-color: springgreen; color: black\">springgreen<\/td><td style=\"background-color: lawngreen; color: black\">lawngreen<\/td><td style=\"background-color: #00ff00; color: black\">green<\/td><\/tr>\n    <tr><td style=\"background-color: navy; color: white\">navy<\/td><td style=\"background-color: mediumblue; color: white\">mediumblue<\/td><td style=\"background-color: royalblue; color: white\">royalblue<\/td><td style=\"background-color: cornflowerblue; color: white\">cornflowerblue<\/td><td style=\"background-color: skyblue; color: black\">skyblue<\/td><\/tr>\n    <tr><td style=\"background-color: darkviolet; color: white\">darkviolet<\/td><td style=\"background-color: purple; color: white\">purple<\/td><td style=\"background-color: orchid; color: white\">orchid<\/td><td style=\"background-color: violet; color: white\">violet<\/td><td style=\"background-color: plum; color: black\">plum<\/td><\/tr>    \n    <tr><td style=\"background-color: deeppink; color: white\">deeppink<\/td><td style=\"background-color: hotpink; color: white\">hotpink<\/td><td style=\"background-color: pink; color: black\">pink<\/td><td style=\"background-color: lightpink; color: black\">lightpink<\/td><td style=\"background-color: mistyrose; color: black\">mistyrose<\/td><\/tr>\n    <tr><td style=\"background-color: brown; color: white\">brown<\/td><td style=\"background-color: saddlebrown; color: white\">saddlebrown<\/td><td style=\"background-color: chocolate; color: white\">chocolate<\/td><td style=\"background-color: tan; color: black\">tan<\/td><td style=\"background-color: wheat; color: black\">wheat<\/td><\/tr>\n    <tr><td style=\"background-color: black; color: white\">black<\/td><td style=\"background-color: slategrey; color: white\">slategrey<\/td><td style=\"background-color: dimgray; color: white\">dimgray<\/td><td style=\"background-color: lightgray; color: black\">lightgray<\/td><td style=\"background-color: white; color: black\">white<\/td><\/tr>    \n  <\/tbody>\n<\/table>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Just like we can ask for numbers, we can also ask the user for text. This looks a little bit different - since text is a string, we use a green <bk class=\"str\">ask<\/bk> block this time.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-input-text\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"1\">colour<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">colour<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_text\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What colour?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pencolor_text\" id=\"6\">\n        <value name=\"COLOR\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"8\" variabletype=\"\">colour<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"8\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"9\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Since strings and numbers are different data types, if you try to use the number (blue) <bk class=\"math\">ask<\/bk> block, your program will throw an error when you type in your text value:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-input-text-error\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"1\">colour<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">colour<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What colour?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pencolor_text\" id=\"6\">\n        <value name=\"COLOR\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"8\" variabletype=\"\">colour<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"8\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"9\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  <strong>Be careful when choosing which ask block to use!<\/strong> Use the blue one for numbers, and the green one for text.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Text input",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Just like we can ask for numbers, we can also ask the user for text. This looks a little bit different - since text is a string, we use a green <bk class=\"str\">ask<\/bk> block this time.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-input-text\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"1\">colour<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">colour<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_text\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What colour?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pencolor_text\" id=\"6\">\n        <value name=\"COLOR\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"8\" variabletype=\"\">colour<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"8\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"9\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Since strings and numbers are different data types, if you try to use the number (blue) <bk class=\"math\">ask<\/bk> block, your program will throw an error when you type in your text value:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-input-text-error\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"1\">colour<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"2\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"3\" variabletype=\"\">colour<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"4\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"5\">\n            <field name=\"TEXT\">What colour?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pencolor_text\" id=\"6\">\n        <value name=\"COLOR\">\n          <block type=\"variables_get\" id=\"7\">\n            <field name=\"VAR\" id=\"8\" variabletype=\"\">colour<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"8\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"9\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  <strong>Be careful when choosing which ask block to use!<\/strong> Use the blue one for numbers, and the green one for text.\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>The <bk class=\"lib\">fill with color<\/bk> block can be used to fill in a shape with colour.<\/p>\n\n<p>\n Any shapes which you draw inside of the <bk class=\"lib\">fill<\/bk> block will be filled with the colour you choose (at the end of drawing the shape).\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-fill-with-color-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_fill_dropdown\" id=\"26\" x=\"10\" y=\"10\">\n    <field name=\"COLOR\">red<\/field>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"37\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"38\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"63\" inline=\"true\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"64\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"49\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"50\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"65\" inline=\"true\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"66\">\n                        <field name=\"NUM\">120<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"51\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"52\">\n                            <field name=\"NUM\">100<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn\" id=\"67\" inline=\"true\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <value name=\"ANGLE\">\n                              <block type=\"math_number\" id=\"68\">\n                                <field name=\"NUM\">120<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try guessing what this program will draw before running the example! Then try changing the fill colour!<\/p>"
                }
              ],
              "layout":0,
              "title":"Filling with colour",
              "notes_rendered":"",
              "content_rendered":"<p>The <bk class=\"lib\">fill with color<\/bk> block can be used to fill in a shape with colour.<\/p>\n\n<p>\n Any shapes which you draw inside of the <bk class=\"lib\">fill<\/bk> block will be filled with the colour you choose (at the end of drawing the shape).\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-fill-with-color-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_fill_dropdown\" id=\"26\" x=\"10\" y=\"10\">\n    <field name=\"COLOR\">red<\/field>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"37\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"38\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"63\" inline=\"true\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"64\">\n                <field name=\"NUM\">120<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"49\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"50\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"65\" inline=\"true\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"66\">\n                        <field name=\"NUM\">120<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"51\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"52\">\n                            <field name=\"NUM\">100<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn\" id=\"67\" inline=\"true\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <value name=\"ANGLE\">\n                              <block type=\"math_number\" id=\"68\">\n                                <field name=\"NUM\">120<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Try guessing what this program will draw before running the example! Then try changing the fill colour!<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  It's boring to always have a plain white background. That's why we have a <bk class=\"lib\">background color<\/bk> block.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-turtle-background-color-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_bgcolor_text\" id=\"47\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"48\">\n        <field name=\"TEXT\">skyblue<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Also try some different colours.\n<\/p>\n<p>\n  The colour names that work are the same as the <bk class=\"lib\">pen color<\/bk> and <bk class=\"lib\">fill color<\/bk> blocks.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Background colours",
              "notes_rendered":"",
              "content_rendered":"<p>\n  It's boring to always have a plain white background. That's why we have a <bk class=\"lib\">background color<\/bk> block.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-turtle-background-color-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_bgcolor_text\" id=\"47\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"48\">\n        <field name=\"TEXT\">skyblue<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Also try some different colours.\n<\/p>\n<p>\n  The colour names that work are the same as the <bk class=\"lib\">pen color<\/bk> and <bk class=\"lib\">fill color<\/bk> blocks.\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Simple Star",
              "purpose":"",
              "problem":"aca-blockly-logo-simple-star-pink",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Red Cross",
              "purpose":"",
              "problem":"aca-blockly-logo-red-cross",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Witches hats",
              "purpose":"",
              "problem":"aca-blockly-logo-witches-hat",
              "type":1
            }
          ],
          "title":"Drawing with colour"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  You probably noticed that you repeated yourself a lot in turtle programs.  Using loops makes turtle much less repetitive!\n<\/p>\n\n<p>Drawing a square the long way:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-drawing-shapes-with-loops-0\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"turtle_forward\" x=\"10\" y=\"10\" inline=\"true\" movable=\"false\">\n    <value name=\"DISTANCE\">\n      <block id=\"2\" type=\"math_number\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block id=\"3\" type=\"turtle_turn\" inline=\"true\">\n        <field name=\"DIRECTION\">RIGHT<\/field>\n        <value name=\"ANGLE\">\n          <block id=\"4\" type=\"math_number\">\n            <field name=\"NUM\">90<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block id=\"5\" type=\"turtle_forward\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block id=\"7\" type=\"turtle_turn\" inline=\"true\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <value name=\"ANGLE\">\n                  <block id=\"8\" type=\"math_number\">\n                    <field name=\"NUM\">90<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block id=\"9\" type=\"turtle_forward\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block id=\"10\" type=\"math_number\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block id=\"11\" type=\"turtle_turn\" inline=\"true\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <value name=\"ANGLE\">\n                          <block id=\"12\" type=\"math_number\">\n                            <field name=\"NUM\">90<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block id=\"13\" type=\"turtle_forward\" inline=\"true\">\n                            <value name=\"DISTANCE\">\n                              <block id=\"14\" type=\"math_number\">\n                                <field name=\"NUM\">50<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block id=\"15\" type=\"turtle_turn\" inline=\"true\">\n                                <field name=\"DIRECTION\">RIGHT<\/field>\n                                <value name=\"ANGLE\">\n                                  <block id=\"16\" type=\"math_number\">\n                                    <field name=\"NUM\">90<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>If we used a loop, then we wouldn't have to repeat same two blocks over and over again.<\/p>\n\n<p>Here's a much shorter way of drawing a square, using loops:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-drawing-shapes-with-loops-1\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"loops_repeat_ext\" x=\"15\" y=\"15\" inline=\"true\" movable=\"false\">\n    <value name=\"TIMES\">\n      <block id=\"2\" type=\"math_number\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block id=\"3\" type=\"turtle_forward\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block id=\"4\" type=\"math_number\">\n            <field name=\"NUM\">50<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block id=\"5\" type=\"turtle_turn\" inline=\"true\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <value name=\"ANGLE\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">90<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n"
                }
              ],
              "layout":0,
              "title":"Drawing shapes with loops",
              "notes_rendered":"",
              "content_rendered":"<p>\n  You probably noticed that you repeated yourself a lot in turtle programs.  Using loops makes turtle much less repetitive!\n<\/p>\n\n<p>Drawing a square the long way:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-drawing-shapes-with-loops-0\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"turtle_forward\" x=\"10\" y=\"10\" inline=\"true\" movable=\"false\">\n    <value name=\"DISTANCE\">\n      <block id=\"2\" type=\"math_number\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block id=\"3\" type=\"turtle_turn\" inline=\"true\">\n        <field name=\"DIRECTION\">RIGHT<\/field>\n        <value name=\"ANGLE\">\n          <block id=\"4\" type=\"math_number\">\n            <field name=\"NUM\">90<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block id=\"5\" type=\"turtle_forward\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block id=\"7\" type=\"turtle_turn\" inline=\"true\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <value name=\"ANGLE\">\n                  <block id=\"8\" type=\"math_number\">\n                    <field name=\"NUM\">90<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block id=\"9\" type=\"turtle_forward\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block id=\"10\" type=\"math_number\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block id=\"11\" type=\"turtle_turn\" inline=\"true\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <value name=\"ANGLE\">\n                          <block id=\"12\" type=\"math_number\">\n                            <field name=\"NUM\">90<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block id=\"13\" type=\"turtle_forward\" inline=\"true\">\n                            <value name=\"DISTANCE\">\n                              <block id=\"14\" type=\"math_number\">\n                                <field name=\"NUM\">50<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block id=\"15\" type=\"turtle_turn\" inline=\"true\">\n                                <field name=\"DIRECTION\">RIGHT<\/field>\n                                <value name=\"ANGLE\">\n                                  <block id=\"16\" type=\"math_number\">\n                                    <field name=\"NUM\">90<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>If we used a loop, then we wouldn't have to repeat same two blocks over and over again.<\/p>\n\n<p>Here's a much shorter way of drawing a square, using loops:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-drawing-shapes-with-loops-1\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"loops_repeat_ext\" x=\"15\" y=\"15\" inline=\"true\" movable=\"false\">\n    <value name=\"TIMES\">\n      <block id=\"2\" type=\"math_number\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block id=\"3\" type=\"turtle_forward\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block id=\"4\" type=\"math_number\">\n            <field name=\"NUM\">50<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block id=\"5\" type=\"turtle_turn\" inline=\"true\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <value name=\"ANGLE\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">90<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Using loops also lets us do things that we couldn't do before.\n<\/p>\n\n<p>We can ask the user to enter a number, and we loop a different number of times depending on that number.<\/p>\n\n<p>Here's a program which draws a row of mountains (a zig-zag line):<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-repeating-shapes-0\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"variables_set\" x=\"15\" y=\"15\" inline=\"true\" movable=\"false\">\n    <field name=\"VAR\">mountains<\/field>\n    <value name=\"VALUE\">\n      <block id=\"2\" type=\"io_ask_num\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block id=\"3\" type=\"text\">\n            <field name=\"TEXT\">How many mountains?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block id=\"4\" type=\"turtle_turn\" inline=\"true\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block id=\"5\" type=\"math_number\">\n            <field name=\"NUM\">80<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block id=\"6\" type=\"loops_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block id=\"7\" type=\"variables_get\">\n                <field name=\"VAR\">mountains<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block id=\"8\" type=\"turtle_forward\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block id=\"9\" type=\"math_number\">\n                    <field name=\"NUM\">50<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block id=\"10\" type=\"turtle_turn\" inline=\"true\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <value name=\"ANGLE\">\n                      <block id=\"11\" type=\"math_number\">\n                        <field name=\"NUM\">160<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block id=\"12\" type=\"turtle_forward\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block id=\"13\" type=\"math_number\">\n                            <field name=\"NUM\">50<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block id=\"14\" type=\"turtle_turn\" inline=\"true\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <value name=\"ANGLE\">\n                              <block id=\"15\" type=\"math_number\">\n                                <field name=\"NUM\">160<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Using this one program, we can draw any number of mountains! Try it out with several different numbers.<\/p><\/o>"
                }
              ],
              "layout":0,
              "title":"Repeating shapes",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Using loops also lets us do things that we couldn't do before.\n<\/p>\n\n<p>We can ask the user to enter a number, and we loop a different number of times depending on that number.<\/p>\n\n<p>Here's a program which draws a row of mountains (a zig-zag line):<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-eg-g3-repeating-shapes-0\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"variables_set\" x=\"15\" y=\"15\" inline=\"true\" movable=\"false\">\n    <field name=\"VAR\">mountains<\/field>\n    <value name=\"VALUE\">\n      <block id=\"2\" type=\"io_ask_num\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block id=\"3\" type=\"text\">\n            <field name=\"TEXT\">How many mountains?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block id=\"4\" type=\"turtle_turn\" inline=\"true\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block id=\"5\" type=\"math_number\">\n            <field name=\"NUM\">80<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block id=\"6\" type=\"loops_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block id=\"7\" type=\"variables_get\">\n                <field name=\"VAR\">mountains<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block id=\"8\" type=\"turtle_forward\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block id=\"9\" type=\"math_number\">\n                    <field name=\"NUM\">50<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block id=\"10\" type=\"turtle_turn\" inline=\"true\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                    <value name=\"ANGLE\">\n                      <block id=\"11\" type=\"math_number\">\n                        <field name=\"NUM\">160<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block id=\"12\" type=\"turtle_forward\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block id=\"13\" type=\"math_number\">\n                            <field name=\"NUM\">50<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block id=\"14\" type=\"turtle_turn\" inline=\"true\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <value name=\"ANGLE\">\n                              <block id=\"15\" type=\"math_number\">\n                                <field name=\"NUM\">160<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Using this one program, we can draw any number of mountains! Try it out with several different numbers.<\/p><\/o>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\nWhen a set of lines meet at a point, the angles between all of those lines always add up to 360\u00b0.\n<\/p>\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-sum-360.svg\" width=\"100%\" height=\"370\" style=\"border: none\"><\/iframe>\n\n<p>\nImagine the turtle is turning left to face each line, one at a time. If the angle of each turn adds up to 360\u00b0 then it has turned a full circle. In fact, here's a program for the turtle to turn 5 times and it ends up facing where it started.\n$$$\n  5 \\times 72^{\\circ} = 360^{\\circ}\n$$$\n<\/p>\n<p>Since we're turning left 5 times and each time we're turning 72\u00b0, we end up turning one full circle.<\/p>\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-hello-world\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"7\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"8\">\n        <field name=\"NUM\">5<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_turn\" id=\"15\" inline=\"true\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"16\">\n            <field name=\"NUM\">72<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>"
                }
              ],
              "layout":0,
              "title":"Adding up angles",
              "notes_rendered":"",
              "content_rendered":"<p>\nWhen a set of lines meet at a point, the angles between all of those lines always add up to 360\u00b0.\n<\/p>\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-sum-360.svg\" width=\"100%\" height=\"370\" style=\"border: none\"><\/iframe>\n\n<p>\nImagine the turtle is turning left to face each line, one at a time. If the angle of each turn adds up to 360\u00b0 then it has turned a full circle. In fact, here's a program for the turtle to turn 5 times and it ends up facing where it started.\n$$$\n  5 \\times 72^{\\circ} = 360^{\\circ}\n$$$\n<\/p>\n<p>Since we're turning left 5 times and each time we're turning 72\u00b0, we end up turning one full circle.<\/p>\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-hello-world\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"7\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"8\">\n        <field name=\"NUM\">5<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_turn\" id=\"15\" inline=\"true\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"16\">\n            <field name=\"NUM\">72<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Using our knowledge that turning a full circle should add up to 360\u00b0 we know that if we want to make 8 even turns, we should turn 45\u00b0 each time.\n$$$\n\\frac{360^{\\circ}}{8} = 45^{\\circ}\n$$$\n<\/p>\n\n<p>The angle to turn is always 360\u00b0 divided by the number of turns we want to make.<\/p>\n\n<p>We can use this formula more generally to draw the same shape (in this case a line) many times around in a circle to make a star with any number of points!<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"drawing-stars0\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"26\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">points<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"52\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"53\">\n            <field name=\"TEXT\">How many points? <\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"33\" inline=\"true\">\n        <field name=\"VAR\">angle<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" id=\"36\" inline=\"true\">\n            <field name=\"OP\">DIVIDE<\/field>\n            <value name=\"A\">\n              <block type=\"math_number\" id=\"39\">\n                <field name=\"NUM\">360<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"variables_get\" id=\"49\">\n                <field name=\"VAR\">points<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"loops_repeat_ext\" id=\"7\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\" id=\"63\">\n                <field name=\"VAR\">points<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block type=\"turtle_forward\" id=\"70\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"71\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_backward\" id=\"72\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"73\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"97\" inline=\"true\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"variables_get\" id=\"120\">\n                            <field name=\"VAR\">angle<\/field>\n                          <\/block>\n                        <\/value>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>"
                }
              ],
              "layout":0,
              "title":"Drawing stars",
              "notes_rendered":"",
              "content_rendered":"<p>Using our knowledge that turning a full circle should add up to 360\u00b0 we know that if we want to make 8 even turns, we should turn 45\u00b0 each time.\n$$$\n\\frac{360^{\\circ}}{8} = 45^{\\circ}\n$$$\n<\/p>\n\n<p>The angle to turn is always 360\u00b0 divided by the number of turns we want to make.<\/p>\n\n<p>We can use this formula more generally to draw the same shape (in this case a line) many times around in a circle to make a star with any number of points!<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"drawing-stars0\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"26\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">points<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"52\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"53\">\n            <field name=\"TEXT\">How many points? <\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"33\" inline=\"true\">\n        <field name=\"VAR\">angle<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" id=\"36\" inline=\"true\">\n            <field name=\"OP\">DIVIDE<\/field>\n            <value name=\"A\">\n              <block type=\"math_number\" id=\"39\">\n                <field name=\"NUM\">360<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"variables_get\" id=\"49\">\n                <field name=\"VAR\">points<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"loops_repeat_ext\" id=\"7\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\" id=\"63\">\n                <field name=\"VAR\">points<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block type=\"turtle_forward\" id=\"70\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"71\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_backward\" id=\"72\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"73\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"97\" inline=\"true\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"variables_get\" id=\"120\">\n                            <field name=\"VAR\">angle<\/field>\n                          <\/block>\n                        <\/value>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>We can use the same calculation to draw regular shapes!<\/p>\n\n<p>You can imagine a turtle drawing a shape by turning left at each corner.\nThe turns that the turtle makes are the <em>exterior angles<\/em>.<\/p>\n\n<p>To draw the whole shape, the turtle must turn one full circle to walk around all the edges, so all the turns it makes (the exterior angles) add up to 360\u00b0.\n\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"drawing-shapes-review\"><code data-lang=\"blockly\">\n <blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"4\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">sides<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"7\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"8\">\n            <field name=\"TEXT\">How many sides?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"9\" inline=\"true\">\n        <field name=\"VAR\">angle<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" id=\"14\" inline=\"true\">\n            <field name=\"OP\">DIVIDE<\/field>\n            <value name=\"A\">\n              <block type=\"math_number\" id=\"17\">\n                <field name=\"NUM\">360<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"variables_get\" id=\"27\">\n                <field name=\"VAR\">sides<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"loops_repeat_ext\" id=\"30\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\" id=\"97\">\n                <field name=\"VAR\">sides<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block type=\"turtle_forward\" id=\"52\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"53\">\n                    <field name=\"NUM\">60<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"76\" inline=\"true\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"variables_get\" id=\"87\">\n                        <field name=\"VAR\">angle<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>"
                }
              ],
              "layout":0,
              "title":"Regular polygons",
              "notes_rendered":"",
              "content_rendered":"<p>We can use the same calculation to draw regular shapes!<\/p>\n\n<p>You can imagine a turtle drawing a shape by turning left at each corner.\nThe turns that the turtle makes are the <em>exterior angles<\/em>.<\/p>\n\n<p>To draw the whole shape, the turtle must turn one full circle to walk around all the edges, so all the turns it makes (the exterior angles) add up to 360\u00b0.\n\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"drawing-shapes-review\"><code data-lang=\"blockly\">\n <blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"4\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">sides<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"7\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"8\">\n            <field name=\"TEXT\">How many sides?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"9\" inline=\"true\">\n        <field name=\"VAR\">angle<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" id=\"14\" inline=\"true\">\n            <field name=\"OP\">DIVIDE<\/field>\n            <value name=\"A\">\n              <block type=\"math_number\" id=\"17\">\n                <field name=\"NUM\">360<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"variables_get\" id=\"27\">\n                <field name=\"VAR\">sides<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"loops_repeat_ext\" id=\"30\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\" id=\"97\">\n                <field name=\"VAR\">sides<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block type=\"turtle_forward\" id=\"52\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"53\">\n                    <field name=\"NUM\">60<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"76\" inline=\"true\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"variables_get\" id=\"87\">\n                        <field name=\"VAR\">angle<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Hexagon",
              "purpose":"",
              "problem":"aca-blockly-logo-hexagon",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: A row of houses",
              "purpose":"",
              "problem":"aca-blockly-logo-row-of-houses",
              "type":1
            }
          ],
          "title":"Loops"
        }
      ],
      "title":"Colours and loops with turtle",
      "label":"aca-blockly-maths-yr7-5",
      "updated_at":"2017-11-15T06:39:08.139442+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  The turtle <em>represents<\/em> a drawing mathematically as lines and angles.  So do <a href=\"\" target=\"_blank\">vector graphics<\/a> tools, e.g. <a href=\"http:\/\/www.adobe.com\/uk\/products\/illustrator.html\" target=\"_blank\">Adobe Illustrator<\/a>, and file formats, e.g. <a href=\"https:\/\/en.wikipedia.org\/wiki\/Portable_Document_Format\" target=\"_blank\">Portable Document Format<\/a> (PDF).\n<\/p>\n\n<p>\n  A <em>vector<\/em> in vector graphics is just a line.  These lines can be moved (e.g. scaled or rotated), so vector graphics can be drawn at any size or angle, and be perfectly crisp and smooth.\n<\/p>\n\n<p>\n  Fonts are also represented as vectors, allowing a browser to draw:\n<\/p>\n\n<p class=\"text-center\" style=\"margin-top: -20px; margin-bottom: -20px\"><span style=\"display: inline-block; font-size: 48px; margin: 10px; text-shadow: -2px -2px 0 #000, 2px -2px 0 #000, -2px 2px 0 #000, 2px 2px 0 #000; color: white\">H<\/span> <span style=\"display: inline-block; font-size: 64px; transform: rotate(-30deg); -webkit-transform: rotate(-30deg); -moz-transform: rotate(-30deg); -ms-transform: rotate(-30deg); -o-transform: rotate(-30deg);\">H<\/span> <span style=\"display: inline-block; margin: 20px; font-size: 32px; transform: rotate(45deg); -webkit-transform: rotate(45deg); -moz-transform: rotate(45deg); -ms-transform: rotate(45deg); -o-transform: rotate(45deg);\">H<\/span> <span style=\"display: inline-block; font-size: 24px; transform: skewX(30deg)\">H<\/span><\/p>\n\n<p>\n  using a single mathematical description of how to draw an <strong>H<\/strong>.\n<\/p>\n\n<p>\n  The 3D graphics and models used in computer games, computer generated imagery (CGI) in movies, and computer aided design (CAD) are also represented using  vectors.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Interested in writing games?<\/h2>\n  <p>Then learn as much geometry (and mathematics) as you can!<\/p>\n<\/aside>\n"
                }
              ],
              "layout":0,
              "title":"Vector graphics",
              "notes_rendered":"",
              "content_rendered":"<p>\n  The turtle <em>represents<\/em> a drawing mathematically as lines and angles.  So do <a href=\"\" target=\"_blank\">vector graphics<\/a> tools, e.g. <a href=\"http:\/\/www.adobe.com\/uk\/products\/illustrator.html\" target=\"_blank\">Adobe Illustrator<\/a>, and file formats, e.g. <a href=\"https:\/\/en.wikipedia.org\/wiki\/Portable_Document_Format\" target=\"_blank\">Portable Document Format<\/a> (PDF).\n<\/p>\n\n<p>\n  A <em>vector<\/em> in vector graphics is just a line.  These lines can be moved (e.g. scaled or rotated), so vector graphics can be drawn at any size or angle, and be perfectly crisp and smooth.\n<\/p>\n\n<p>\n  Fonts are also represented as vectors, allowing a browser to draw:\n<\/p>\n\n<p class=\"text-center\" style=\"margin-top: -20px; margin-bottom: -20px\"><span style=\"display: inline-block; font-size: 48px; margin: 10px; text-shadow: -2px -2px 0 #000, 2px -2px 0 #000, -2px 2px 0 #000, 2px 2px 0 #000; color: white\">H<\/span> <span style=\"display: inline-block; font-size: 64px; transform: rotate(-30deg); -webkit-transform: rotate(-30deg); -moz-transform: rotate(-30deg); -ms-transform: rotate(-30deg); -o-transform: rotate(-30deg);\">H<\/span> <span style=\"display: inline-block; margin: 20px; font-size: 32px; transform: rotate(45deg); -webkit-transform: rotate(45deg); -moz-transform: rotate(45deg); -ms-transform: rotate(45deg); -o-transform: rotate(45deg);\">H<\/span> <span style=\"display: inline-block; font-size: 24px; transform: skewX(30deg)\">H<\/span><\/p>\n\n<p>\n  using a single mathematical description of how to draw an <strong>H<\/strong>.\n<\/p>\n\n<p>\n  The 3D graphics and models used in computer games, computer generated imagery (CGI) in movies, and computer aided design (CAD) are also represented using  vectors.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Interested in writing games?<\/h2>\n  <p>Then learn as much geometry (and mathematics) as you can!<\/p>\n<\/aside>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>You've already drawn some vector graphics! Capital I is just a long skinny rectangle:<\/p>\n\n<\/code><\/pre>\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"446592a4-120c-11e6-a96c-02387658b611\"]\n[\"create_shape\",\"4465ae6a-120c-11e6-a96c-02387658b611\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pensize\":1,\"filled\":true,\"pencolor\":[0,0,0]}]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>And the italic version <em>I<\/em> is just a parallelogram:<\/p>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"cc004fe2-120c-11e6-90b2-02e43099b6af\"]\n[\"create_shape\",\"cc0069e6-120c-11e6-90b2-02e43099b6af\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pencolor\":[0,0,0],\"pensize\":1,\"fillcolor\":[0,0,0]}]\n[\"forward\",20]\n[\"left\",1.0471975511965976]\n[\"forward\",100]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"left\",1.0471975511965976]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n"
                }
              ],
              "layout":0,
              "title":"Letters as shapes",
              "notes_rendered":"",
              "content_rendered":"<p>You've already drawn some vector graphics! Capital I is just a long skinny rectangle:<\/p>\n\n<\/code><\/pre>\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"446592a4-120c-11e6-a96c-02387658b611\"]\n[\"create_shape\",\"4465ae6a-120c-11e6-a96c-02387658b611\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pensize\":1,\"filled\":true,\"pencolor\":[0,0,0]}]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>And the italic version <em>I<\/em> is just a parallelogram:<\/p>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"cc004fe2-120c-11e6-90b2-02e43099b6af\"]\n[\"create_shape\",\"cc0069e6-120c-11e6-90b2-02e43099b6af\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pencolor\":[0,0,0],\"pensize\":1,\"fillcolor\":[0,0,0]}]\n[\"forward\",20]\n[\"left\",1.0471975511965976]\n[\"forward\",100]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"left\",1.0471975511965976]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Straight L",
              "purpose":"",
              "problem":"aca-blockly-logo-font-straight-l",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Straight T",
              "purpose":"",
              "problem":"aca-blockly-logo-font-straight-t",
              "type":1
            }
          ],
          "title":"Vector graphics"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>The rest of the questions in this course are a bit tricky. We're going to apply parallel line angle relationships to real world examples in vector graphics!<\/p>\n\n<p>You'll be drawing italics versions of the letters L and T. There are several sets of parallel lines in the letters L and T:<\/p>\n\n<table>\n  <tr>\n    <td>\n<svg width=\"219px\" height=\"240px\" viewBox=\"0 0 219 240\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\">\n    <defs>\n        <polygon id=\"lpath-1\" points=\"120 18 160 18 80 178 200 178 180 218 20 218\"><\/polygon>\n        <mask id=\"lmask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"180\" height=\"200\" fill=\"white\">\n            <use xlink:href=\"#lpath-1\"><\/use>\n        <\/mask>\n    <\/defs>\n    <g id=\"maths\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Artboard\">\n            <g id=\"italic-l-parallel\">\n                <use id=\"Rectangle\" stroke=\"#979797\" mask=\"url(#lmask-2)\" stroke-width=\"4\" xlink:href=\"#lpath-1\"><\/use>\n                <g id=\"horizontal\" transform=\"translate(0.000000, 17.000000)\" stroke=\"#FB4251\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M-5.68434189e-14,200 L200,200\" id=\"Line\"><\/path>\n                    <path d=\"M60,162 L220,162\" id=\"Line\"><\/path>\n                    <path d=\"M98,2 L178,2\" id=\"Line\"><\/path>\n                <\/g>\n                <g id=\"vertical\" transform=\"translate(10.000000, 0.000000)\" stroke=\"#2891E0\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M120,0 L0,240\" id=\"Line\"><\/path>\n                    <path d=\"M158,0 L58,200\" id=\"Line\"><\/path>\n                    <path d=\"M198,160 L158,240\" id=\"Line\"><\/path>\n                <\/g>\n            <\/g>\n        <\/g>\n    <\/g>\n<\/svg>\n    <\/td>\n    <td>\n<svg width=\"240px\" height=\"242px\" viewBox=\"0 0 240 242\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\">\n    <defs>\n        <polygon id=\"path-1\" points=\"60 18 220 18 200 58 140 58 60 218 20 218 100 58 40 58\"><\/polygon>\n        <mask id=\"mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"200\" height=\"200\" fill=\"white\">\n            <use xlink:href=\"#path-1\"><\/use>\n        <\/mask>\n    <\/defs>\n    <g id=\"maths\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Artboard\" transform=\"translate(-279.000000, 0.000000)\">\n            <g id=\"italic-T-parallel\" transform=\"translate(280.000000, 0.000000)\">\n                <use id=\"Rectangle-2\" stroke=\"#979797\" mask=\"url(#mask-2)\" stroke-width=\"4\" xlink:href=\"#path-1\"><\/use>\n                <g id=\"horizontal\" transform=\"translate(0.000000, 18.000000)\" stroke=\"#FB4251\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M-5.68434189e-14,199 L80,199\" id=\"Line\"><\/path>\n                    <path d=\"M20,39 L112,39\" id=\"Line\"><\/path>\n                    <path d=\"M128,39 L220,39\" id=\"Line\"><\/path>\n                    <path d=\"M38,1 L238,1\" id=\"Line\"><\/path>\n                <\/g>\n                <g id=\"vertical\" transform=\"translate(10.000000, 0.000000)\" stroke=\"#2891E0\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M100,40 L0,240\" id=\"Line\"><\/path>\n                    <path d=\"M138,40 L38,240\" id=\"Line\"><\/path>\n                    <path d=\"M218,0 L178,80\" id=\"Line\"><\/path>\n                    <path d=\"M60,0 L20,80\" id=\"Line\"><\/path>\n                <\/g>\n            <\/g>\n        <\/g>\n    <\/g>\n<\/svg>\n    <\/td>\n  <\/tr>\n<\/table>\n\n<p>But first, let's revise the angle relationships&hellip;<\/p>"
                }
              ],
              "layout":0,
              "title":"Real world examples",
              "notes_rendered":"",
              "content_rendered":"<p>The rest of the questions in this course are a bit tricky. We're going to apply parallel line angle relationships to real world examples in vector graphics!<\/p>\n\n<p>You'll be drawing italics versions of the letters L and T. There are several sets of parallel lines in the letters L and T:<\/p>\n\n<table>\n  <tr>\n    <td>\n<svg width=\"219px\" height=\"240px\" viewBox=\"0 0 219 240\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\">\n    <defs>\n        <polygon id=\"lpath-1\" points=\"120 18 160 18 80 178 200 178 180 218 20 218\"><\/polygon>\n        <mask id=\"lmask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"180\" height=\"200\" fill=\"white\">\n            <use xlink:href=\"#lpath-1\"><\/use>\n        <\/mask>\n    <\/defs>\n    <g id=\"maths\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Artboard\">\n            <g id=\"italic-l-parallel\">\n                <use id=\"Rectangle\" stroke=\"#979797\" mask=\"url(#lmask-2)\" stroke-width=\"4\" xlink:href=\"#lpath-1\"><\/use>\n                <g id=\"horizontal\" transform=\"translate(0.000000, 17.000000)\" stroke=\"#FB4251\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M-5.68434189e-14,200 L200,200\" id=\"Line\"><\/path>\n                    <path d=\"M60,162 L220,162\" id=\"Line\"><\/path>\n                    <path d=\"M98,2 L178,2\" id=\"Line\"><\/path>\n                <\/g>\n                <g id=\"vertical\" transform=\"translate(10.000000, 0.000000)\" stroke=\"#2891E0\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M120,0 L0,240\" id=\"Line\"><\/path>\n                    <path d=\"M158,0 L58,200\" id=\"Line\"><\/path>\n                    <path d=\"M198,160 L158,240\" id=\"Line\"><\/path>\n                <\/g>\n            <\/g>\n        <\/g>\n    <\/g>\n<\/svg>\n    <\/td>\n    <td>\n<svg width=\"240px\" height=\"242px\" viewBox=\"0 0 240 242\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\">\n    <defs>\n        <polygon id=\"path-1\" points=\"60 18 220 18 200 58 140 58 60 218 20 218 100 58 40 58\"><\/polygon>\n        <mask id=\"mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"200\" height=\"200\" fill=\"white\">\n            <use xlink:href=\"#path-1\"><\/use>\n        <\/mask>\n    <\/defs>\n    <g id=\"maths\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Artboard\" transform=\"translate(-279.000000, 0.000000)\">\n            <g id=\"italic-T-parallel\" transform=\"translate(280.000000, 0.000000)\">\n                <use id=\"Rectangle-2\" stroke=\"#979797\" mask=\"url(#mask-2)\" stroke-width=\"4\" xlink:href=\"#path-1\"><\/use>\n                <g id=\"horizontal\" transform=\"translate(0.000000, 18.000000)\" stroke=\"#FB4251\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M-5.68434189e-14,199 L80,199\" id=\"Line\"><\/path>\n                    <path d=\"M20,39 L112,39\" id=\"Line\"><\/path>\n                    <path d=\"M128,39 L220,39\" id=\"Line\"><\/path>\n                    <path d=\"M38,1 L238,1\" id=\"Line\"><\/path>\n                <\/g>\n                <g id=\"vertical\" transform=\"translate(10.000000, 0.000000)\" stroke=\"#2891E0\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M100,40 L0,240\" id=\"Line\"><\/path>\n                    <path d=\"M138,40 L38,240\" id=\"Line\"><\/path>\n                    <path d=\"M218,0 L178,80\" id=\"Line\"><\/path>\n                    <path d=\"M60,0 L20,80\" id=\"Line\"><\/path>\n                <\/g>\n            <\/g>\n        <\/g>\n    <\/g>\n<\/svg>\n    <\/td>\n  <\/tr>\n<\/table>\n\n<p>But first, let's revise the angle relationships&hellip;<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  When any two lines intersect, the angles that are opposite to each other are equal. There are four pairs of <em>opposite angles<\/em>, and we've highlighted one pair in red:\n<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"opp1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot all four pairs, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('opp1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-warning\" onclick=\"svgMode('opp2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('opp3'); this.blur();\">Pair 3<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('opp4'); this.blur();\">Pair 4<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n\n<aside class=\"info\">\n  <h2>Vertically opposite<\/h2>\n  <p>\n    Opposite angles are also called <em>vertically opposite angles<\/em>. They are called <em>vertical<\/em> because they share a common <em>vertex<\/em>, not because they have to be one on top of the other.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "layout":0,
              "title":"Opposite angles",
              "notes_rendered":"",
              "content_rendered":"<p>\n  When any two lines intersect, the angles that are opposite to each other are equal. There are four pairs of <em>opposite angles<\/em>, and we've highlighted one pair in red:\n<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"opp1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot all four pairs, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('opp1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-warning\" onclick=\"svgMode('opp2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('opp3'); this.blur();\">Pair 3<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('opp4'); this.blur();\">Pair 4<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n\n<aside class=\"info\">\n  <h2>Vertically opposite<\/h2>\n  <p>\n    Opposite angles are also called <em>vertically opposite angles<\/em>. They are called <em>vertical<\/em> because they share a common <em>vertex<\/em>, not because they have to be one on top of the other.\n  <\/p>\n<\/aside>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Corresponding angles on parallel lines are equal. <em>Corresponding<\/em> means they appear in the same position on each parallel line. For example, the two red angles below are corresponding:\n<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"corr1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot all four pairs, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('corr1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-warning\" onclick=\"svgMode('corr2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('corr3'); this.blur();\">Pair 3<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('corr4'); this.blur();\">Pair 4<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Corresponding angles",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Corresponding angles on parallel lines are equal. <em>Corresponding<\/em> means they appear in the same position on each parallel line. For example, the two red angles below are corresponding:\n<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"corr1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot all four pairs, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('corr1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-warning\" onclick=\"svgMode('corr2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('corr3'); this.blur();\">Pair 3<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('corr4'); this.blur();\">Pair 4<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Alternate angles on parallel lines are also equal. There are only two pairs of alternate angles, and we've highlighted one pair in red:<\/p>\n\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"alt1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot the other pair, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('alt1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('alt2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Alternate angles",
              "notes_rendered":"",
              "content_rendered":"<p>Alternate angles on parallel lines are also equal. There are only two pairs of alternate angles, and we've highlighted one pair in red:<\/p>\n\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"alt1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot the other pair, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-danger\" onclick=\"svgMode('alt1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-info\" onclick=\"svgMode('alt2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Co-interior angles are different to all the rest: a pair of co-interior angles will sum to 180&deg; (this is called <em>supplementary<\/em>). We've highlighted one of the two pairs of co-interior angles in orange:<\/p>\n\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"coint1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot the other pair, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-warning\" onclick=\"svgMode('coint1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('coint2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n\n<br>\n<aside class=\"info\">\n<h2>Complementary or supplementary?<\/h2>\n<p>If you find yourself getting the two confused, remember that complementary angles sum to 90&deg; and supplementary angles sum to 180&deg; because 90 is smaller than 180, and C comes before S in the alphabet!<\/p>\n<\/aside>"
                }
              ],
              "layout":0,
              "title":"Co-interior angles",
              "notes_rendered":"",
              "content_rendered":"<p>Co-interior angles are different to all the rest: a pair of co-interior angles will sum to 180&deg; (this is called <em>supplementary<\/em>). We've highlighted one of the two pairs of co-interior angles in orange:<\/p>\n\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"coint1\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<p>\n  Try to spot the other pair, and then click these to check your answer:\n<\/p>\n\n<p align=\"center\">\n<button class=\"btn btn-warning\" onclick=\"svgMode('coint1'); this.blur();\">Pair 1<\/button>&nbsp;\n<button class=\"btn btn-success\" onclick=\"svgMode('coint2'); this.blur();\">Pair 2<\/button>&nbsp;\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear<\/button>\n<\/p>\n\n<br>\n<aside class=\"info\">\n<h2>Complementary or supplementary?<\/h2>\n<p>If you find yourself getting the two confused, remember that complementary angles sum to 90&deg; and supplementary angles sum to 180&deg; because 90 is smaller than 180, and C comes before S in the alphabet!<\/p>\n<\/aside>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Knowing which angles crossing parallel lines and within shapes are related makes it much easier to draw them!  Use the diagram and table below to help you if you get stuck:<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"all\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<br>\n<table class=\"table table-hover table-bordered\">\n  <thead>\n    <tr><th>Relationship<\/th><th>Property<\/th><th>Examples (click number to show)<\/th><\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <td><checkbox name=\"opposite\">Opposite<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('opp1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('opp2'); this.blur();\">Pair 2<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('opp3'); this.blur();\">Pair 3<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('opp4'); this.blur();\">Pair 4<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Corresponding<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('corr1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('corr2'); this.blur();\">Pair 2<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('corr3'); this.blur();\">Pair 3<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('corr4'); this.blur();\">Pair 4<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Alternate<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('alt1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('alt2'); this.blur();\">Pair 2<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Cointerior<\/td>\n      <td>sum to 180\u00b0<\/td>\n      <td>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('coint1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('coint2'); this.blur();\">Pair 2<\/button>\n      <\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>\n\n<p class=\"text-center\">\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear diagram<\/button>\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Angle relationships summary",
              "notes_rendered":"",
              "content_rendered":"<p>Knowing which angles crossing parallel lines and within shapes are related makes it much easier to draw them!  Use the diagram and table below to help you if you get stuck:<\/p>\n\n<svg width=\"500px\" height=\"360px\" viewBox=\"0 0 500 360\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: -35px auto 5 auto;\" id=\"logo-parallel-interactive-1\">\n  <defs>\n    <marker id=\"arrow-black\" style=\"color: black\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-grey\" style=\"color: #999999\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-red\" style=\"color: #fb4251\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-blue\" style=\"color: #2891e0\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-green\" style=\"color: #54c552\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <marker id=\"arrow-orange\" style=\"color: #ff8c44\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"6\" markerHeight=\"4\" orient=\"auto\">\n      <path d=\"M 0 0 L 10 5 L 0 10 z\"><\/path>\n    <\/marker>\n    <style><![CDATA[\n      text {\n        fill: currentColor;\n        stroke: none;\n        -moz-user-select: -moz-none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n\n      .axes {\n        stroke: currentColor;\n        stroke-width: 2;\n        stroke-dasharray: 4, 4, 4, 4;\n        stroke-linecap: butt;\n        fill: none;\n      }\n\n      #dir-behind {\n        stroke-dasharray: none;\n        marker-end: none;\n      }\n      #dir-ahead {\n        marker-end: url(#arrow-dir);\n      }\n      #par-fwd {\n        stroke-dasharray: none;\n        marker-end: url(#arrow-dir);\n      }\n\n      .q1, .q2, .q3, .q4 {\n        color: #eeeeee;\n      }\n\n      .all > .q1, .all > .q2, .all > .q3, .all > .q4 {\n        color: #999999;\n        marker-end: url(#arrow-grey);\n      }\n\n      .opp1 > .top.q1, .opp1 > .top.q3, .corr1 > .q1, .alt1 > .top.q3, .alt1 > .bottom.q1 {\n        display: inline;\n        color: #fb4251;\n        marker-end: url(#arrow-red);\n      }\n\n      .opp2 > .top.q2, .opp2 > .top.q4, .corr2 > .q2, .coint1 > .top.q3, .coint1 > .bottom.q2 {\n        display: inline;\n        color: #ff8c44;\n        marker-end: url(#arrow-orange);\n      }\n\n      .opp3 > .bottom.q1, .opp3 > .bottom.q3, .corr3 > .q3, .alt2 > .top.q4, .alt2 > .bottom.q2 {\n        display: inline;\n        color: #2891e0;\n        marker-end: url(#arrow-blue);\n      }\n\n      .opp4 > .bottom.q2, .opp4 > .bottom.q4, .corr4 > .q4, .coint2 > .top.q4, .coint2 > .bottom.q1 {\n        display: inline;\n        color: #54c552;\n        marker-end: url(#arrow-green);\n      }\n\n      .turtle {\n        fill: black;\n        stroke: black;\n        stroke-width: 1;\n      }\n\n      marker {\n        fill: currentColor;\n      }\n\n      #top-turtle { display: none; }\n\n      #arm {\n        stroke: #bbbbbb;\n        stroke-width: 2;\n      }\n      #handle {\n        stroke: #bbbbbb;\n        stroke-width: 1;\n        fill: #eeeeee;\n      }\n        #handle:hover {\n          cursor: pointer;\n        }\n    ]]><\/style>\n    <script type=\"text\/javascript\"><![CDATA[\n      var CENTER_X = 250;\n      var CENTER_Y = 300;\n      var TOP_Y = 100;\n      var ARC_RADIUS = 50;\n      var svgDoc = null;\n      var swingAngle = 300;\n      var isMovingArm = false;\n\n      var elDiagram = null;\n      var elSwing = null;\n      var elArm = null;\n      var elTopTurtle = null;\n      var elParFwd = null;\n      var elBottomArcs = [];\n      var elBottomLabels = [];\n      var elTopArcs = [];\n      var elTopLabels = [];\n\n      var ua = window.navigator.userAgent;\n      var msie_10 = ua.indexOf('MSIE 10');\n      var trident = ua.indexOf('Trident\/');\n      var edge = ua.indexOf('Edge\/');\n      var IE_GT_10 = msie_10 > 0 || trident > 0 || edge > 0;\n\n      function svgMode(mode) {\n        if (elDiagram === null) {\n          return;\n        }\n        elDiagram.setAttribute('class', mode);\n      }\n      \n      function deg2rad(degrees) {\n        return degrees * (Math.PI \/ 180.0);\n      };\n\n      function rad2deg(radians) {\n        return (radians * 180.0) \/ Math.PI;\n      };\n\n      function getElemArrayById(doc, base, elems) {\n        for (var i = 1; i != 5; ++i) {\n          var elem = doc.getElementById(base + i);\n          if (elem === null) {\n            setTimeout(initialise, 500);\n            return false;\n          }\n          elems.push(elem);\n        }\n        return true;\n      }\n\n      function initialise() {\n        svgDoc = document.getElementById('logo-parallel-interactive-1');\n        if (svgDoc == null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ We use a ref to the diagram to force redrawing properly on IE1[01]\n        elDiagram = svgDoc.getElementById('diagram');\n\n        \/\/ Obtain references to the diagram specific nodes we frequently modify.\n        elSwing = svgDoc.getElementById('swing');\n        elArm = svgDoc.getElementById('arm');\n        elTopTurtle = svgDoc.getElementById('top-turtle');\n        elParFwd = svgDoc.getElementById('par-fwd');\n\n        if (elDiagram === null || elSwing === null || elArm === null || elTopTurtle === null || elParFwd === null) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Obtain references to the bottom and top arcs and labels;\n        if (!getElemArrayById(svgDoc, 'bottom', elBottomArcs) ||\n            !getElemArrayById(svgDoc, 'bottom-label', elBottomLabels) ||\n            !getElemArrayById(svgDoc, 'top', elTopArcs) ||\n            !getElemArrayById(svgDoc, 'top-label', elTopLabels)) {\n          setTimeout(initialise, 500);\n          return;\n        }\n\n        \/\/ Set the initial rotation.\n        rotateSwing();\n\n        \/\/ Bind event listeners.\n        svgDoc.addEventListener('mousemove', handleOnMouseMove, false);\n        svgDoc.addEventListener('touchmove', handleOnMouseMove, false);\n        svgDoc.addEventListener('mouseup', handleOnMouseUp, false);\n        svgDoc.addEventListener('touchend', handleOnMouseUp, false);\n        var handle = svgDoc.getElementById('handle');\n        handle.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        handle.addEventListener('touchstart', handleHandleOnMouseDown, false);\n        elArm.addEventListener('mousedown', handleHandleOnMouseDown, false);\n        elArm.addEventListener('touchstart', handleHandleOnMouseDown, false);\n      }\n\n      function handleHandleOnMouseDown(evt) {\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = true;\n      }\n\n      function handleOnMouseMove(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n\n        var mouseX = evt.layerX, mouseY = evt.layerY;\n        var angle;\n        if (evt.touches && evt.touches.length) {\n          var offset = $(svgDoc).offset()\n          mouseX = evt.touches[0].pageX - offset.left;\n          mouseY = evt.touches[0].pageY - offset.top\n        }\n\n        \/\/ Which quadrant are we in?\n        if (mouseX === CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ At the origin.\n            return;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Between T and C.\n            swingAngle = 90.0;\n          } else {\n            \/\/ Between A and S.\n            swingAngle = 270.0;\n          }\n        } else if (mouseX > CENTER_X) {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between A and C.\n            swingAngle = 0.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant A.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = angle;\n          } else {\n            \/\/ Quadrant C.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/(mouseX - CENTER_X)));\n            swingAngle = 360.0 - angle;\n          }\n        } else {\n          if (mouseY === CENTER_Y) {\n            \/\/ Between S and T.\n            swingAngle = 180.0;\n          } else if (mouseY >= CENTER_Y) {\n            \/\/ Quadrant S.\n            angle = rad2deg(Math.atan((mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 - angle;\n          } else {\n            \/\/ Quadrant T.\n            angle = rad2deg(Math.atan(Math.abs(mouseY - CENTER_Y)\/Math.abs(mouseX - CENTER_X)));\n            swingAngle = 180.0 + angle;\n          }\n        }\n\n        \/\/ Perform the rotation.\n        rotateSwing();\n      }\n\n      function handleOnMouseUp(evt) {\n        if (isMovingArm === false) {\n          return;\n        }\n        if (evt.preventDefault) {\n          evt.preventDefault();\n        }\n        isMovingArm = false;\n      }\n\n      function forceRedrawIE() {\n        if (elDiagram && IE_GT_10) {\n          elDiagram.parentNode.insertBefore(elDiagram, elDiagram);\n        }\n      }\n\n      function rotateSwing() {\n        var gap, dX, dArm, armStart, armEnd, path, transform;\n\n        if (swingAngle < 90 || swingAngle > 315) {\n          swingAngle = 315;\n        } else if (swingAngle < 225) {\n          swingAngle = 225;\n        }\n\n        \/\/ Update the rotate angle of the transform.\n        elSwing.setAttribute('transform', 'translate(238, 291) rotate(' + swingAngle + ', 11, 9)');\n\n        \/\/ Update the arcs on the bottom intersection.\n        drawArcs(swingAngle, CENTER_X, CENTER_Y, ARC_RADIUS, elBottomArcs, elBottomLabels);\n\n        \/\/ Update the arcs on the top intersection.\n        gap = CENTER_Y - TOP_Y;\n        dX = -gap\/Math.tan(deg2rad(swingAngle));\n        drawArcs(swingAngle, CENTER_X + dX, TOP_Y, ARC_RADIUS, elTopArcs, elTopLabels);\n        path = ['M', CENTER_X + dX, '100', 'L 10 100'].join(' ');\n        elParFwd.setAttribute('d', path);\n\n        \/\/ Update the length of the traversal.\n        dArm = -gap\/Math.sin(deg2rad(swingAngle));\n        armStart = 9 + -ARC_RADIUS - 20;\n        armEnd = 9 + dArm + ARC_RADIUS + 20;\n\n        path = ['M', armStart.toString(), '9', 'L', armEnd.toString(), '9'].join(' ');\n        elArm.setAttribute('d', path);\n        transform = 'translate(' + (CENTER_X + dX - 21) + ', 82) scale(2) rotate(180, 10, 9)';\n        elTopTurtle.setAttribute('transform', transform);\n\n        forceRedrawIE();\n      }\n\n      function drawArc(sx, sy, r, config, ex, ey, elem) {\n        sx = sx.toString();\n        sy = sy.toString();\n        r = r.toString();\n        ex = ex.toString();\n        ey = ey.toString();\n        elem.setAttribute('d', ['M', sx, sy, 'A', r, r, config, ex, ey].join(' '));\n      }\n\n      \/\/ Takes the angle (positive x-axis is 0\/360, clockwise is +angle) and the centre cx, cy.\n      \/\/ Draws the four arc and text element pairs around the angle;\n      function drawArcs(angle, CX, CY, R, arcs, labels) {\n        var dx = R*Math.cos(deg2rad(angle));\n        var dy = R*Math.sin(deg2rad(angle));\n\n        \/\/ Update the 1st quadrant (top right).\n        drawArc(CX + R, CY, R, '0 0 0', CX + dx, CY + dy, arcs[0]);\n        labels[0].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[0].setAttribute('x', CX + R);\n\n        \/\/ Update the 2nd quadrant (top left).\n        drawArc(CX - R, CY, R, '0 0 1', CX + dx, CY + dy, arcs[1]);\n        labels[1].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        \/\/ + 30 is space for the text itself.\n        labels[1].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 3rd quadrant (bottom left).\n        drawArc(CX - R, CY, R, '0 0 0', CX - dx, CY - dy, arcs[2]);\n        labels[2].textContent = (360 - angle).toFixed(0) + '\u00b0';\n        labels[2].setAttribute('x', CX - (R + 30));\n\n        \/\/ Update the 4th quadrant (bottom right).\n        drawArc(CX + R, CY, R, '0 0 1', CX - dx, CY - dy, arcs[3]);\n        labels[3].textContent = (angle - 180).toFixed(0) + '\u00b0';\n        labels[3].setAttribute('x', CX + R);\n      }\n\n      initialise();\n    ]]>\n    <\/script>\n  <\/defs>\n  <g id=\"diagram\" fill-rule=\"evenodd\" class=\"all\">\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 0 390.4700538379252 56.69872981077807\" class=\"axes top q1\" id=\"top1\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 1 390.4700538379252 56.69872981077807\" class=\"axes top q2\" id=\"top2\"\/>\n    <path d=\"M 315.4700538379252 100 A 50 50 0 0 0 340.4700538379252 143.30127018922192\" class=\"axes top q3\" id=\"top3\"\/>\n    <path d=\"M 415.4700538379252 100 A 50 50 0 0 1 340.4700538379252 143.30127018922192\" class=\"axes top q4\" id=\"top4\"\/>\n\n    <path d=\"M 300 300 A 50 50 0 0 0 274.68027597291905 256.51570423819015\" class=\"axes bottom q1\" id=\"bottom1\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 1 274.68027597291905 256.51570423819015\" class=\"axes bottom q2\" id=\"bottom2\"\/>\n    <path d=\"M 200 300 A 50 50 0 0 0 225.31972402708092 343.48429576180985\" class=\"axes bottom q3\" id=\"bottom3\"\/>\n    <path d=\"M 300 300 A 50 50 0 0 1 225.31972402708092 343.48429576180985\" class=\"axes bottom q4\" id=\"bottom4\"\/>\n\n    <path d=\"M10,300 L250,300\" class=\"axes\" id=\"dir-behind\"><\/path>\n    <path d=\"M250,300 L490,300\" class=\"axes\" id=\"dir-ahead\"><\/path>\n    <path d=\"M10,100 L490,100\" class=\"axes\" id=\"par\"><\/path>\n    <path d=\"M 343 100 L 10 100\" class=\"axes\" id=\"par-fwd\"><\/path>\n\n    <g id=\"swing\" transform=\"translate(238, 291) rotate(300, 11, 9)\">\n      <path d=\"M -61 9 L 309.9401076758503 9\" id=\"arm\"><\/path>\n      <g transform=\"translate(94, -9) scale(2)\">\n        <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" id=\"handle\"><\/path>\n      <\/g>\n    <\/g>\n    <g transform=\"translate(229, 282) scale(2)\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <g transform=\"translate(229, 82) scale(2) rotate(180)\" id=\"top-turtle\">\n      <path d=\"M24,9 L22,7 L18,8 L15,5 L17,2 L16,0 L13,3 L9,2 L5,4 L2,1 L0,3 L3,5 L1,9 L3,13 L0,15 L2,17 L5,14 L9,16 L13,15 L16,18 L17,16 L15,13 L18,10 L22,11 L24,9 Z\" class=\"turtle\"><\/path>\n    <\/g>\n\n    <text x=\"415.4700538379252\" y=\"75\" class=\"top q1\" id=\"top-label1\">60\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"75\" class=\"top q2\" id=\"top-label2\">120\u00b0<\/text>\n    <text x=\"285.4700538379252\" y=\"137\" class=\"top q3\" id=\"top-label3\">60\u00b0<\/text>\n    <text x=\"415.4700538379252\" y=\"137\" class=\"top q4\" id=\"top-label4\">120\u00b0<\/text>\n\n    <text x=\"300\" y=\"275\" class=\"bottom q1\" id=\"bottom-label1\">60\u00b0<\/text>\n    <text x=\"170\" y=\"275\" class=\"bottom q2\" id=\"bottom-label2\">120\u00b0<\/text>\n    <text x=\"170\" y=\"337\" class=\"bottom q3\" id=\"bottom-label3\">60\u00b0<\/text>\n    <text x=\"300\" y=\"337\" class=\"bottom q4\" id=\"bottom-label4\">120\u00b0<\/text>\n  <\/g>\n<\/svg>\n\n<br>\n<table class=\"table table-hover table-bordered\">\n  <thead>\n    <tr><th>Relationship<\/th><th>Property<\/th><th>Examples (click number to show)<\/th><\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <td><checkbox name=\"opposite\">Opposite<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('opp1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('opp2'); this.blur();\">Pair 2<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('opp3'); this.blur();\">Pair 3<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('opp4'); this.blur();\">Pair 4<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Corresponding<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('corr1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('corr2'); this.blur();\">Pair 2<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('corr3'); this.blur();\">Pair 3<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('corr4'); this.blur();\">Pair 4<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Alternate<\/td>\n      <td>are the same<\/td>\n      <td>\n        <button class=\"btn btn-danger\" style=\"font-size: 12px\" onclick=\"svgMode('alt1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-info\" style=\"font-size: 12px\" onclick=\"svgMode('alt2'); this.blur();\">Pair 2<\/button>\n      <\/td>\n    <\/tr>\n    <tr>\n      <td>Cointerior<\/td>\n      <td>sum to 180\u00b0<\/td>\n      <td>\n        <button class=\"btn btn-warning\" style=\"font-size: 12px\" onclick=\"svgMode('coint1'); this.blur();\">Pair 1<\/button>\n        <button class=\"btn btn-success\" style=\"font-size: 12px\" onclick=\"svgMode('coint2'); this.blur();\">Pair 2<\/button>\n      <\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>\n\n<p class=\"text-center\">\n<button class=\"btn btn-disable\" onclick=\"svgMode('all')\">Clear diagram<\/button>\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Italic L",
              "purpose":"",
              "problem":"aca-blockly-logo-font-italic-l",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Italic T",
              "purpose":"",
              "problem":"aca-blockly-logo-font-italic-t",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Any Italic L",
              "purpose":"",
              "problem":"aca-blockly-logo-font-any-italic-l",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Any Italic T",
              "purpose":"",
              "problem":"aca-blockly-logo-font-any-italic-t",
              "type":1
            }
          ],
          "title":"Italics"
        }
      ],
      "title":"Project: Vector graphics",
      "label":"aca-blockly-maths-yr7-4",
      "updated_at":"2017-11-15T06:38:53.542621+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  <strong>You can think of an <em>angle<\/em> as a <em>change of direction<\/em>.<\/strong>\n  The angle between two lines is the turn you'd make to go from one line to the other.  Here, the lines are the turtle's old and new directions.\n<\/p>\n\n<p>\n  Angles can be measured in <em>degrees<\/em> (written as \u00b0).  A 360\u00b0 turn is a complete circle (a <em>revolution<\/em>).  Other turns are fractions of 360\u00b0.\n<\/p>\n\n<p>\n  <strong>Try our interactive diagram! You can drag the <span style=\"color: #bbb\">grey<\/span> turtle around.<\/strong>\n<\/p>\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-1.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n\n<p>\n  <strong>Turning a quarter of a circle (to face sideways) is 360\u00b0&nbsp;\u00f7&nbsp;4&nbsp;=&nbsp;90\u00b0.<\/strong><br>\n  This is called a <em>right angle<\/em> (don't confuse it with turning right!)\n<\/p>\n    \n<p>\n  <strong>Turning half a circle (to face backwards) is 360\u00b0&nbsp;\u00f7&nbsp;2&nbsp;=&nbsp;180\u00b0.<\/strong><br>\n  This is called a <em>straight angle<\/em> (it looks like a straight line).\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Angles and direction",
              "notes_rendered":"",
              "content_rendered":"<p>\n  <strong>You can think of an <em>angle<\/em> as a <em>change of direction<\/em>.<\/strong>\n  The angle between two lines is the turn you'd make to go from one line to the other.  Here, the lines are the turtle's old and new directions.\n<\/p>\n\n<p>\n  Angles can be measured in <em>degrees<\/em> (written as \u00b0).  A 360\u00b0 turn is a complete circle (a <em>revolution<\/em>).  Other turns are fractions of 360\u00b0.\n<\/p>\n\n<p>\n  <strong>Try our interactive diagram! You can drag the <span style=\"color: #bbb\">grey<\/span> turtle around.<\/strong>\n<\/p>\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-1.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n\n<p>\n  <strong>Turning a quarter of a circle (to face sideways) is 360\u00b0&nbsp;\u00f7&nbsp;4&nbsp;=&nbsp;90\u00b0.<\/strong><br>\n  This is called a <em>right angle<\/em> (don't confuse it with turning right!)\n<\/p>\n    \n<p>\n  <strong>Turning half a circle (to face backwards) is 360\u00b0&nbsp;\u00f7&nbsp;2&nbsp;=&nbsp;180\u00b0.<\/strong><br>\n  This is called a <em>straight angle<\/em> (it looks like a straight line).\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  So far we've only turned right angles (90\u00b0 to the left or right).\n<\/p>\n\n<p>\n  If we want to turn more or less, we need to use different angles!  Blockly has a <bk class=\"lib\">turn<\/bk> block that includes the angle to turn.\n<\/p>\n  \n<p>\n  For example, if the turtle is pointing right, and we want to go to the top right of the screen, we should turn left by 45\u00b0:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-logo-turn-30deg\" data-codegen=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_turn\" id=\"5\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <value name=\"ANGLE\">\n      <block type=\"math_number\" id=\"6\">\n        <field name=\"NUM\">45<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"11\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"12\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Notice that you can end up in the same direction by turning either left or right. The two angles sum to 360\u00b0:\n<\/p>\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-1.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n"
                }
              ],
              "layout":0,
              "title":"How much do I turn?",
              "notes_rendered":"",
              "content_rendered":"<p>\n  So far we've only turned right angles (90\u00b0 to the left or right).\n<\/p>\n\n<p>\n  If we want to turn more or less, we need to use different angles!  Blockly has a <bk class=\"lib\">turn<\/bk> block that includes the angle to turn.\n<\/p>\n  \n<p>\n  For example, if the turtle is pointing right, and we want to go to the top right of the screen, we should turn left by 45\u00b0:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-logo-turn-30deg\" data-codegen=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_turn\" id=\"5\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"DIRECTION\">LEFT<\/field>\n    <value name=\"ANGLE\">\n      <block type=\"math_number\" id=\"6\">\n        <field name=\"NUM\">45<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_forward\" id=\"11\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"12\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Notice that you can end up in the same direction by turning either left or right. The two angles sum to 360\u00b0:\n<\/p>\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-1.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  When you want the angle <em>between<\/em> two lines to be 30\u00b0, you might try turning 30\u00b0, then drawing the next line:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-30deg-error\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"4\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"7\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"11\" inline=\"true\">\n        <field name=\"DIRECTION\">RIGHT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"12\">\n            <field name=\"NUM\">30<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"13\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"14\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  <strong>but turning 30\u00b0 is not far enough!<\/strong> The turtle needs to turn much further to make the angle 30\u00b0 between the lines.\n<\/p>\n\n<p>\n  The correct turn is actually 180\u00b0&nbsp;\u2013&nbsp;30\u00b0&nbsp;=&nbsp;150\u00b0.  We want to <em>almost<\/em> reverse (turn 180\u00b0) but stop when we're 30\u00b0 short:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-logo-30deg-correct\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"4\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"7\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"11\" inline=\"true\">\n        <field name=\"DIRECTION\">RIGHT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"12\">\n            <field name=\"NUM\">150<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"13\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"14\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n"
                }
              ],
              "layout":0,
              "title":"Some turns need angle calculations",
              "notes_rendered":"",
              "content_rendered":"<p>\n  When you want the angle <em>between<\/em> two lines to be 30\u00b0, you might try turning 30\u00b0, then drawing the next line:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-30deg-error\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"4\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"7\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"11\" inline=\"true\">\n        <field name=\"DIRECTION\">RIGHT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"12\">\n            <field name=\"NUM\">30<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"13\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"14\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  <strong>but turning 30\u00b0 is not far enough!<\/strong> The turtle needs to turn much further to make the angle 30\u00b0 between the lines.\n<\/p>\n\n<p>\n  The correct turn is actually 180\u00b0&nbsp;\u2013&nbsp;30\u00b0&nbsp;=&nbsp;150\u00b0.  We want to <em>almost<\/em> reverse (turn 180\u00b0) but stop when we're 30\u00b0 short:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-logo-30deg-correct\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"4\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"7\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"11\" inline=\"true\">\n        <field name=\"DIRECTION\">RIGHT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"12\">\n            <field name=\"NUM\">150<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"13\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"14\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  We've added a green <em>internal<\/em> angle between the two lines in our diagram.  You can see the 180\u00b0&nbsp;\u2013&nbsp;<span style=\"color: blue\">150\u00b0<\/span>&nbsp;=&nbsp;<span style=\"color: green\">30\u00b0<\/span> turn you need:\n<\/p>\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-2.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n\n<p>\n  The 30\u00b0 angle and 150\u00b0 are called <em>supplementary angles<\/em>, because they sum together to 180\u00b0. Knowing this relationship between supplementary angles and the straight angle is important for angle calculations with the turtle.\n<\/p>\n\n<p>\n  <strong>If you get stuck with angle calculations, use the diagram!<\/strong>\n  It also helps to get some paper and draw a quick diagram by hand.\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Use our turn calculator!",
              "notes_rendered":"",
              "content_rendered":"<p>\n  We've added a green <em>internal<\/em> angle between the two lines in our diagram.  You can see the 180\u00b0&nbsp;\u2013&nbsp;<span style=\"color: blue\">150\u00b0<\/span>&nbsp;=&nbsp;<span style=\"color: green\">30\u00b0<\/span> turn you need:\n<\/p>\n\n<iframe src=\"https:\/\/static.groklearning-cdn.com\/static\/images\/interactive-svgs\/logo-angles-2.svg\" width=\"100%\" height=\"360\" style=\"border: none\"><\/iframe>\n\n<p>\n  The 30\u00b0 angle and 150\u00b0 are called <em>supplementary angles<\/em>, because they sum together to 180\u00b0. Knowing this relationship between supplementary angles and the straight angle is important for angle calculations with the turtle.\n<\/p>\n\n<p>\n  <strong>If you get stuck with angle calculations, use the diagram!<\/strong>\n  It also helps to get some paper and draw a quick diagram by hand.\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Equilateral triangle",
              "purpose":"",
              "problem":"aca-blockly-logo-equilateral-triangle",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Get your house in order",
              "purpose":"",
              "problem":"aca-blockly-logo-house",
              "type":1
            }
          ],
          "title":"Calculating angles"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Blockly can do maths too!\n<\/p>\n\n<p>\n  Let's calculate how many minutes there are in a day:\n<\/p>\n\n<p class=\"text-center\"><b>60 minutes per hour &times; 24 hours per day<\/b><\/p>\n\n<p>\n  In Blockly, this calculation looks like:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-s-per-day\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"io_print1\" id=\"15\" inline=\"true\" x=\"10\" y=\"25\">\n    <value name=\"ANY0\">\n      <block type=\"math_arithmetic\" id=\"8\" inline=\"true\">\n        <field name=\"OP\">MULTIPLY<\/field>\n        <value name=\"A\">\n          <block type=\"math_number\" id=\"18\">\n            <field name=\"NUM\">60<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"B\">\n          <block type=\"math_number\" id=\"19\">\n            <field name=\"NUM\">24<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\nThe same calculation can be done with variables:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-s-per-hr1-var\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"variables_set\" id=\"8\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">mins per hour<\/field>\n    <value name=\"VALUE\">\n      <block type=\"math_number\" id=\"3\">\n        <field name=\"NUM\">60<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"13\" inline=\"true\">\n        <field name=\"VAR\">hrs per day<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_number\" id=\"14\">\n            <field name=\"NUM\">24<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"io_print1\" id=\"1\" inline=\"true\">\n            <value name=\"ANY0\">\n              <block type=\"math_arithmetic\" id=\"2\" inline=\"true\">\n                <field name=\"OP\">MULTIPLY<\/field>\n                <value name=\"A\">\n                  <block type=\"variables_get\" id=\"15\">\n                    <field name=\"VAR\">mins per hour<\/field>\n                  <\/block>\n                <\/value>\n                <value name=\"B\">\n                  <block type=\"variables_get\" id=\"16\">\n                    <field name=\"VAR\">hrs per day<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  <strong>This code is longer, but a lot easier to understand.<\/strong>\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Blockly, the calculator",
              "notes":[
                {
                  "left":"<p>\n  <strong>Numbers are a distinct type of data<\/strong>.  Blockly uses <bk class=\"math\">blue<\/bk> to indicate a block returns a number, and <bk class=\"str\">green<\/bk> for a string.\n<\/p>\n\n<p>\n  Computers represent numbers in two ways: one for whole numbers (<em>integers<\/em>) and another for decimals (<em>floating point<\/em> values, or <em>floats<\/em>).\n<\/p>\n\n<p>\n  Computers have different instructions for processing strings, integers, and floats. Each data type has different behaviour, and advantages\/disadvantages for representing particular information.\n<\/p>\n\n<p>\n  For simplicity, Blockly doesn't distinguish integers and floats, treating numbers as a one data type.\n  Division always creates a decimal value, even when the numbers divide evenly:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"teacher-division-result-float\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"io_print1\" id=\"15\" inline=\"true\" x=\"10\" y=\"25\">\n    <value name=\"ANY0\">\n      <block type=\"math_arithmetic\" id=\"8\" inline=\"true\">\n        <field name=\"OP\">DIVIDE<\/field>\n        <value name=\"A\">\n          <block type=\"math_number\" id=\"18\">\n            <field name=\"NUM\">60<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"B\">\n          <block type=\"math_number\" id=\"19\">\n            <field name=\"NUM\">20<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  For newbies, we try to design problems that use whole numbers and avoid division where possible.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    AC:DT requires students to <em>recognise different types of data<\/em> from Year 3-4 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIK008\" target=\"_blank\">ACTDIK008<\/a> onwards.\n    In later bands, students learn about the underlying whole number (integer), and then binary, representation of these data types.\n  <\/p>\n  <p>\n    Student have now been exposed to numbers, as distinct from strings. They will see their different behaviour shortly.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "notes_rendered":"<p>\n  <strong>Numbers are a distinct type of data<\/strong>.  Blockly uses <bk class=\"math\">blue<\/bk> to indicate a block returns a number, and <bk class=\"str\">green<\/bk> for a string.\n<\/p>\n\n<p>\n  Computers represent numbers in two ways: one for whole numbers (<em>integers<\/em>) and another for decimals (<em>floating point<\/em> values, or <em>floats<\/em>).\n<\/p>\n\n<p>\n  Computers have different instructions for processing strings, integers, and floats. Each data type has different behaviour, and advantages\/disadvantages for representing particular information.\n<\/p>\n\n<p>\n  For simplicity, Blockly doesn't distinguish integers and floats, treating numbers as a one data type.\n  Division always creates a decimal value, even when the numbers divide evenly:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"teacher-division-result-float\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"io_print1\" id=\"15\" inline=\"true\" x=\"10\" y=\"25\">\n    <value name=\"ANY0\">\n      <block type=\"math_arithmetic\" id=\"8\" inline=\"true\">\n        <field name=\"OP\">DIVIDE<\/field>\n        <value name=\"A\">\n          <block type=\"math_number\" id=\"18\">\n            <field name=\"NUM\">60<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"B\">\n          <block type=\"math_number\" id=\"19\">\n            <field name=\"NUM\">20<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  For newbies, we try to design problems that use whole numbers and avoid division where possible.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Australian Curriculum: Digital Technologies<\/h2>\n  <p>\n    AC:DT requires students to <em>recognise different types of data<\/em> from Year 3-4 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACTDIK008\" target=\"_blank\">ACTDIK008<\/a> onwards.\n    In later bands, students learn about the underlying whole number (integer), and then binary, representation of these data types.\n  <\/p>\n  <p>\n    Student have now been exposed to numbers, as distinct from strings. They will see their different behaviour shortly.\n  <\/p>\n<\/aside>\n",
              "content_rendered":"<p>\n  Blockly can do maths too!\n<\/p>\n\n<p>\n  Let's calculate how many minutes there are in a day:\n<\/p>\n\n<p class=\"text-center\"><b>60 minutes per hour &times; 24 hours per day<\/b><\/p>\n\n<p>\n  In Blockly, this calculation looks like:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-s-per-day\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"io_print1\" id=\"15\" inline=\"true\" x=\"10\" y=\"25\">\n    <value name=\"ANY0\">\n      <block type=\"math_arithmetic\" id=\"8\" inline=\"true\">\n        <field name=\"OP\">MULTIPLY<\/field>\n        <value name=\"A\">\n          <block type=\"math_number\" id=\"18\">\n            <field name=\"NUM\">60<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"B\">\n          <block type=\"math_number\" id=\"19\">\n            <field name=\"NUM\">24<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\nThe same calculation can be done with variables:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-s-per-hr1-var\"><code data-lang=\"blockly\">\n<blockly>\n  <block type=\"variables_set\" id=\"8\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">mins per hour<\/field>\n    <value name=\"VALUE\">\n      <block type=\"math_number\" id=\"3\">\n        <field name=\"NUM\">60<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"13\" inline=\"true\">\n        <field name=\"VAR\">hrs per day<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_number\" id=\"14\">\n            <field name=\"NUM\">24<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"io_print1\" id=\"1\" inline=\"true\">\n            <value name=\"ANY0\">\n              <block type=\"math_arithmetic\" id=\"2\" inline=\"true\">\n                <field name=\"OP\">MULTIPLY<\/field>\n                <value name=\"A\">\n                  <block type=\"variables_get\" id=\"15\">\n                    <field name=\"VAR\">mins per hour<\/field>\n                  <\/block>\n                <\/value>\n                <value name=\"B\">\n                  <block type=\"variables_get\" id=\"16\">\n                    <field name=\"VAR\">hrs per day<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  <strong>This code is longer, but a lot easier to understand.<\/strong>\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Our turn calculator showed us the result of converting an external angle into an internal angle, using our knowledge that a straight angle is 180\u00b0.\n<\/p>\n\n<p>\n  We can do this in blocks using our new <bk class=\"math\">numbers<\/bk> blocks:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-internal-angle\"><code data-lang=\"blockly\">\n<blockly>\n  <variables><\/variables>\n  <block type=\"turtle_forward\" id=\"Jr#8Iw9GN9r4VwpE4w3e\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"wu52.oouqR]_3fk=l!|.\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"-kYo-9ZS:nCq:y\/IC4Ml\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_arithmetic\" id=\"N]l:bhSJCJdI)oN8Ut27\">\n            <field name=\"OP\">MINUS<\/field>\n            <value name=\"A\">\n              <block type=\"math_number\" id=\"]q4!8aihce80%h[wQp@V\">\n                <field name=\"NUM\">180<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"math_number\" id=\"BDSpK)3V~Mv*{!;[*kJb\">\n                <field name=\"NUM\">30<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"[7`t]RW1Txu~a[\/Z@yQ:\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"rHw0v^FaRK\/_$pH7G]TJ\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  <strong>This means we no longer need to do our angle calculations by hand<\/strong> - we can let the computer do them for us!\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Straight angle calculations",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Our turn calculator showed us the result of converting an external angle into an internal angle, using our knowledge that a straight angle is 180\u00b0.\n<\/p>\n\n<p>\n  We can do this in blocks using our new <bk class=\"math\">numbers<\/bk> blocks:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-internal-angle\"><code data-lang=\"blockly\">\n<blockly>\n  <variables><\/variables>\n  <block type=\"turtle_forward\" id=\"Jr#8Iw9GN9r4VwpE4w3e\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"wu52.oouqR]_3fk=l!|.\">\n        <field name=\"NUM\">50<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"-kYo-9ZS:nCq:y\/IC4Ml\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_arithmetic\" id=\"N]l:bhSJCJdI)oN8Ut27\">\n            <field name=\"OP\">MINUS<\/field>\n            <value name=\"A\">\n              <block type=\"math_number\" id=\"]q4!8aihce80%h[wQp@V\">\n                <field name=\"NUM\">180<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"math_number\" id=\"BDSpK)3V~Mv*{!;[*kJb\">\n                <field name=\"NUM\">30<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"[7`t]RW1Txu~a[\/Z@yQ:\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"rHw0v^FaRK\/_$pH7G]TJ\">\n                <field name=\"NUM\">50<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  <strong>This means we no longer need to do our angle calculations by hand<\/strong> - we can let the computer do them for us!\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Draw any angle",
              "purpose":"",
              "problem":"aca-blockly-logo-draw-any-angle",
              "type":1
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>We've been using <bk class=\"lib\">move forward<\/bk> a lot so far, but did you know the turtle could also <bk class=\"lib\">move backward<\/bk>?<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-eg-moving-backwards\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"44\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"45\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_backward\" id=\"76\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"77\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"58\" inline=\"true\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"59\">\n                <field name=\"NUM\">45<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"60\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"61\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_backward\" id=\"80\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"81\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"82\" inline=\"true\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"math_number\" id=\"83\">\n                            <field name=\"NUM\">45<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"64\" inline=\"true\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"65\">\n                                <field name=\"NUM\">100<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_backward\" id=\"84\" inline=\"true\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"85\">\n                                    <field name=\"NUM\">100<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>This makes it much easier to draw lines and go back to the start of the line without having to turn around 180\u00b0.<\/p>"
                }
              ],
              "layout":0,
              "title":"Going backwards",
              "notes_rendered":"",
              "content_rendered":"<p>We've been using <bk class=\"lib\">move forward<\/bk> a lot so far, but did you know the turtle could also <bk class=\"lib\">move backward<\/bk>?<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-eg-moving-backwards\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"44\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"45\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_backward\" id=\"76\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"77\">\n            <field name=\"NUM\">100<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn\" id=\"58\" inline=\"true\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n            <value name=\"ANGLE\">\n              <block type=\"math_number\" id=\"59\">\n                <field name=\"NUM\">45<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"60\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"61\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_backward\" id=\"80\" inline=\"true\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"81\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"82\" inline=\"true\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"math_number\" id=\"83\">\n                            <field name=\"NUM\">45<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"64\" inline=\"true\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"65\">\n                                <field name=\"NUM\">100<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_backward\" id=\"84\" inline=\"true\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"85\">\n                                    <field name=\"NUM\">100<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>This makes it much easier to draw lines and go back to the start of the line without having to turn around 180\u00b0.<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Draw any angle, backwards!",
              "purpose":"",
              "problem":"aca-blockly-logo-draw-any-angle-backwards",
              "type":1
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\nBlockly can do all the maths a calculator can do:\n<\/p>\n\n<table class=\"table table-hover table-bordered\">\n  <thead>\n    <tr><th>Sign<\/th> <th>Name<\/th><\/tr>\n  <\/thead>\n  <tbody>\n    <tr><td><code data-lang=\"txt\">+<\/code><\/td> <td>add<\/td><\/tr>\n    <tr><td><code data-lang=\"txt\">-<\/code><\/td> <td>subtract<\/td><\/tr>\n    <tr><td><code data-lang=\"txt\">\u00d7<\/code><\/td> <td>multiply<\/td><\/tr>\n    <tr><td><code data-lang=\"txt\">\u00f7<\/code><\/td> <td>divide<\/td><\/tr>\n  <\/tbody>\n<\/table>\n\n<p>\n  <strong>Click on the sign in the maths block to change what it does.<\/strong>\n<\/p>\n\n<p>\n  Blockly calculates the inner maths blocks first, so:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-nested-maths\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"io_print1\" x=\"15\" y=\"15\" inline=\"true\" movable=\"false\">\n    <value name=\"ANY0\">\n      <block id=\"2\" type=\"math_arithmetic\" inline=\"true\">\n        <field name=\"OP\">MULTIPLY<\/field>\n        <value name=\"A\">\n          <block id=\"3\" type=\"math_number\">\n            <field name=\"NUM\">5<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"B\">\n          <block id=\"4\" type=\"math_arithmetic\" inline=\"true\">\n            <field name=\"OP\">ADD<\/field>\n            <value name=\"A\">\n              <block id=\"5\" type=\"math_number\">\n                <field name=\"NUM\">4<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">3<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  calculates the <code data-lang=\"py3\">4<\/code>&nbsp;+&nbsp;<code data-lang=\"py3\">3<\/code> first (to give <code data-lang=\"py3\">7<\/code>) and then does <code data-lang=\"py3\">5<\/code>&nbsp;\u00d7&nbsp;<code data-lang=\"py3\">7<\/code>.\n<\/p>\n\n<p>\n  In maths, we use brackets like this: 5\u00d7(4 + 3) to say <em>do the add before the multiply<\/em>.\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Doing maths",
              "notes":[
                {
                  "left":"<p>\n  Blockly imposes an order of operations explicitly on calculations.  <strong>The innermost blocks are always evaluated first<\/strong>, working outwards until the entire calculation is complete.\n<\/p>\n\n<p>\n   It is equivalent to using brackets for every expression in maths.  For example, if an add block is inside a multiply block, then the add is done first, because it is like (<code data-lang=\"py3\">5<\/code>&nbsp;\u00d7&nbsp;(<code data-lang=\"py3\">4<\/code>&nbsp;+&nbsp;<code data-lang=\"py3\">3<\/code>)) in maths:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"teacher-bk-py3-nested-maths\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"io_print1\" x=\"15\" y=\"15\" inline=\"true\" movable=\"false\">\n    <value name=\"ANY0\">\n      <block id=\"2\" type=\"math_arithmetic\" inline=\"true\">\n        <field name=\"OP\">MULTIPLY<\/field>\n        <value name=\"A\">\n          <block id=\"3\" type=\"math_number\">\n            <field name=\"NUM\">5<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"B\">\n          <block id=\"4\" type=\"math_arithmetic\" inline=\"true\">\n            <field name=\"OP\">ADD<\/field>\n            <value name=\"A\">\n              <block id=\"5\" type=\"math_number\">\n                <field name=\"NUM\">4<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">3<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  calculates the <code data-lang=\"py3\">4<\/code>&nbsp;+&nbsp;<code data-lang=\"py3\">3<\/code> first (to give <code data-lang=\"py3\">7<\/code>) and then does <code data-lang=\"py3\">5<\/code>&nbsp;\u00d7&nbsp;<code data-lang=\"py3\">7<\/code>.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Mathemantics: Order of operations<\/h2>\n  <p>\n    Since Blockly makes the <a href=\"http:\/\/www.australiancurriculum.edu.au\/Glossary\/Index?a=M&t=Order+of+operations\" target=\"_blank\">order of operations<\/a> explicit, this is a great opportunity to discuss them in maths.  Students learn to use <em>brackets and order of operations<\/em> in Year 6 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACMNA134\" target=\"_blank\">ACMNA134<\/a>.\n  <\/p>\n  <p>\n    The essential idea is when two operations are next to each other, e.g. 5&nbsp;\u00d7&nbsp;4&nbsp;+&nbsp;3, it is <strong>ambiguous which should happen first<\/strong>. Do you add 4&nbsp;+&nbsp;3 first or multiply 5&nbsp;\u00d7&nbsp;4 first? They give a different answer, so we had better be consistent!\n  <\/p>\n  <p>\n    <em>Order of operations<\/em> is simply a <strong>convention<\/strong> to resolve this ambiguity by evaluating:\n  <\/p>\n  <ol>\n    <li>brackets (<em>parentheses<\/em>) e.g. (5&nbsp;+&nbsp;3)<\/li>\n    <li>exponents (<em>indices<\/em>) e.g. 4<sup>2<\/sup><\/li>\n    <li>multiply and divide<\/li>\n    <li>add and subtract<\/li>\n  <\/ol>\n  <p>\n    If you want to do an addition before a multiplication, the convention says you must put brackets around the addition.\n  <\/p>\n<\/aside>\n"
                }
              ],
              "notes_rendered":"<p>\n  Blockly imposes an order of operations explicitly on calculations.  <strong>The innermost blocks are always evaluated first<\/strong>, working outwards until the entire calculation is complete.\n<\/p>\n\n<p>\n   It is equivalent to using brackets for every expression in maths.  For example, if an add block is inside a multiply block, then the add is done first, because it is like (<code data-lang=\"py3\">5<\/code>&nbsp;\u00d7&nbsp;(<code data-lang=\"py3\">4<\/code>&nbsp;+&nbsp;<code data-lang=\"py3\">3<\/code>)) in maths:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"teacher-bk-py3-nested-maths\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"io_print1\" x=\"15\" y=\"15\" inline=\"true\" movable=\"false\">\n    <value name=\"ANY0\">\n      <block id=\"2\" type=\"math_arithmetic\" inline=\"true\">\n        <field name=\"OP\">MULTIPLY<\/field>\n        <value name=\"A\">\n          <block id=\"3\" type=\"math_number\">\n            <field name=\"NUM\">5<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"B\">\n          <block id=\"4\" type=\"math_arithmetic\" inline=\"true\">\n            <field name=\"OP\">ADD<\/field>\n            <value name=\"A\">\n              <block id=\"5\" type=\"math_number\">\n                <field name=\"NUM\">4<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">3<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  calculates the <code data-lang=\"py3\">4<\/code>&nbsp;+&nbsp;<code data-lang=\"py3\">3<\/code> first (to give <code data-lang=\"py3\">7<\/code>) and then does <code data-lang=\"py3\">5<\/code>&nbsp;\u00d7&nbsp;<code data-lang=\"py3\">7<\/code>.\n<\/p>\n\n<aside class=\"info curriculum\">\n  <h2>Mathemantics: Order of operations<\/h2>\n  <p>\n    Since Blockly makes the <a href=\"http:\/\/www.australiancurriculum.edu.au\/Glossary\/Index?a=M&t=Order+of+operations\" target=\"_blank\">order of operations<\/a> explicit, this is a great opportunity to discuss them in maths.  Students learn to use <em>brackets and order of operations<\/em> in Year 6 <a href=\"http:\/\/www.australiancurriculum.edu.au\/curriculum\/contentdescription\/ACMNA134\" target=\"_blank\">ACMNA134<\/a>.\n  <\/p>\n  <p>\n    The essential idea is when two operations are next to each other, e.g. 5&nbsp;\u00d7&nbsp;4&nbsp;+&nbsp;3, it is <strong>ambiguous which should happen first<\/strong>. Do you add 4&nbsp;+&nbsp;3 first or multiply 5&nbsp;\u00d7&nbsp;4 first? They give a different answer, so we had better be consistent!\n  <\/p>\n  <p>\n    <em>Order of operations<\/em> is simply a <strong>convention<\/strong> to resolve this ambiguity by evaluating:\n  <\/p>\n  <ol>\n    <li>brackets (<em>parentheses<\/em>) e.g. (5&nbsp;+&nbsp;3)<\/li>\n    <li>exponents (<em>indices<\/em>) e.g. 4<sup>2<\/sup><\/li>\n    <li>multiply and divide<\/li>\n    <li>add and subtract<\/li>\n  <\/ol>\n  <p>\n    If you want to do an addition before a multiplication, the convention says you must put brackets around the addition.\n  <\/p>\n<\/aside>\n",
              "content_rendered":"<p>\nBlockly can do all the maths a calculator can do:\n<\/p>\n\n<table class=\"table table-hover table-bordered\">\n  <thead>\n    <tr><th>Sign<\/th> <th>Name<\/th><\/tr>\n  <\/thead>\n  <tbody>\n    <tr><td><code data-lang=\"txt\">+<\/code><\/td> <td>add<\/td><\/tr>\n    <tr><td><code data-lang=\"txt\">-<\/code><\/td> <td>subtract<\/td><\/tr>\n    <tr><td><code data-lang=\"txt\">\u00d7<\/code><\/td> <td>multiply<\/td><\/tr>\n    <tr><td><code data-lang=\"txt\">\u00f7<\/code><\/td> <td>divide<\/td><\/tr>\n  <\/tbody>\n<\/table>\n\n<p>\n  <strong>Click on the sign in the maths block to change what it does.<\/strong>\n<\/p>\n\n<p>\n  Blockly calculates the inner maths blocks first, so:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-nested-maths\"><code data-lang=\"blockly\">\n<blockly>\n  <block id=\"1\" type=\"io_print1\" x=\"15\" y=\"15\" inline=\"true\" movable=\"false\">\n    <value name=\"ANY0\">\n      <block id=\"2\" type=\"math_arithmetic\" inline=\"true\">\n        <field name=\"OP\">MULTIPLY<\/field>\n        <value name=\"A\">\n          <block id=\"3\" type=\"math_number\">\n            <field name=\"NUM\">5<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"B\">\n          <block id=\"4\" type=\"math_arithmetic\" inline=\"true\">\n            <field name=\"OP\">ADD<\/field>\n            <value name=\"A\">\n              <block id=\"5\" type=\"math_number\">\n                <field name=\"NUM\">4<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block id=\"6\" type=\"math_number\">\n                <field name=\"NUM\">3<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  calculates the <code data-lang=\"py3\">4<\/code>&nbsp;+&nbsp;<code data-lang=\"py3\">3<\/code> first (to give <code data-lang=\"py3\">7<\/code>) and then does <code data-lang=\"py3\">5<\/code>&nbsp;\u00d7&nbsp;<code data-lang=\"py3\">7<\/code>.\n<\/p>\n\n<p>\n  In maths, we use brackets like this: 5\u00d7(4 + 3) to say <em>do the add before the multiply<\/em>.\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: What's the time?",
              "purpose":"",
              "problem":"aca-blockly-logo-clock-angle",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Scaleable House",
              "purpose":"",
              "problem":"aca-blockly-logo-variable-scaleable-house",
              "type":1
            }
          ],
          "title":"Variables in calculations"
        }
      ],
      "title":"Angles, variables and calculations",
      "label":"aca-blockly-maths-yr7-2",
      "updated_at":"2017-11-15T06:38:25.199677+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Maths is important in all aspects of computing, especially colours! A computer stores the colour information about pixel colour as three numbers - an amount of red, green and blue. The computer then combines these individual amounts of colour to create the colour you see on your screen.\n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Pixels represented as their red, green and blue components\" src=\"https:\/\/groklearning-cdn.com\/modules\/8VqaJruzYad9rtXRmGazuj\/LCD_pixels_RGB.png\" width=\"80%\">\n  <figcaption>This is what an LCD monitor looks like when you zoom in. A single pixel is made up of red, green and blue parts.<\/figcaption>\n<\/figure>\n\n<p>\n  This <a href=\"https:\/\/en.wikipedia.org\/wiki\/RGB_color_model\" target=\"_blank\">RGB Colour Model<\/a> is an example of an additive colour model, because the final colour is created by adding the separate colours together.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Colour in computers",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Maths is important in all aspects of computing, especially colours! A computer stores the colour information about pixel colour as three numbers - an amount of red, green and blue. The computer then combines these individual amounts of colour to create the colour you see on your screen.\n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"Pixels represented as their red, green and blue components\" src=\"https:\/\/groklearning-cdn.com\/modules\/8VqaJruzYad9rtXRmGazuj\/LCD_pixels_RGB.png\" width=\"80%\">\n  <figcaption>This is what an LCD monitor looks like when you zoom in. A single pixel is made up of red, green and blue parts.<\/figcaption>\n<\/figure>\n\n<p>\n  This <a href=\"https:\/\/en.wikipedia.org\/wiki\/RGB_color_model\" target=\"_blank\">RGB Colour Model<\/a> is an example of an additive colour model, because the final colour is created by adding the separate colours together.\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  The blocks we use to write our programs are actually generating code in the <a href=\"https:\/\/www.python.org\/\" target=\"_blank\">Python programming language<\/a>. You would have seen the python code appear underneath your blocks in the questions you've been answering.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-colormode\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_colormode_dropdown\" id=\"a_p?:[6,WJHZ2tYsyGqi\" x=\"10\" y=\"10\">\n    <field name=\"COLORMODE\">255<\/field>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  When using the turtle, Python needs to know what range you are using to describe each of your colours. We do this using the <bk class=\"lib\">use color range<\/bk> block, and it has two settings:\n<\/p>\n\n<ul>\n  <li><bk class=\"lib\"><bk class=\"inner\">255<\/bk><\/bk> - Colour values are set as a range from 0 - 255<\/li>\n  <li><bk class=\"lib\"><bk class=\"inner\">1.0<\/bk><\/bk> - Colour values are set as a range from 0.0 - 1.0<\/li>\n<\/ul>\n\n<p>\n  We'll be using the <bk class=\"lib\"><bk class=\"inner\">255<\/bk><\/bk> setting in all of our examples and problems, so you should always choose that setting in this course.\n<\/p>\n\n<p>\n  The value you set is a measure of the intensity of the colour, so the higher the value the more of that colour is added to the mix. A value of zero means no colour (black), and a value of 255 means that colour is set to its highest value (e.g. 255 on the red channel means 100% red).\n<\/p>"
                }
              ],
              "layout":0,
              "title":"The use color range block",
              "notes_rendered":"",
              "content_rendered":"<p>\n  The blocks we use to write our programs are actually generating code in the <a href=\"https:\/\/www.python.org\/\" target=\"_blank\">Python programming language<\/a>. You would have seen the python code appear underneath your blocks in the questions you've been answering.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-colormode\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_colormode_dropdown\" id=\"a_p?:[6,WJHZ2tYsyGqi\" x=\"10\" y=\"10\">\n    <field name=\"COLORMODE\">255<\/field>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  When using the turtle, Python needs to know what range you are using to describe each of your colours. We do this using the <bk class=\"lib\">use color range<\/bk> block, and it has two settings:\n<\/p>\n\n<ul>\n  <li><bk class=\"lib\"><bk class=\"inner\">255<\/bk><\/bk> - Colour values are set as a range from 0 - 255<\/li>\n  <li><bk class=\"lib\"><bk class=\"inner\">1.0<\/bk><\/bk> - Colour values are set as a range from 0.0 - 1.0<\/li>\n<\/ul>\n\n<p>\n  We'll be using the <bk class=\"lib\"><bk class=\"inner\">255<\/bk><\/bk> setting in all of our examples and problems, so you should always choose that setting in this course.\n<\/p>\n\n<p>\n  The value you set is a measure of the intensity of the colour, so the higher the value the more of that colour is added to the mix. A value of zero means no colour (black), and a value of 255 means that colour is set to its highest value (e.g. 255 on the red channel means 100% red).\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Once you set your <bk class=\"lib\">color range<\/bk> you need to make sure you always use values that are in that range, otherwise your program will raise an error. The example below tries to use a value of <bk class=\"math\"><bk class=\"inner\">256<\/bk><\/bk> which is larger than the maximum 255 allowed in the selected <bk class=\"lib\">color range<\/bk>.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bad-colour-value\"><code data-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_colormode_dropdown\" id=\"JT`TZ~be6gBofJE+[|TR\" x=\"10\" y=\"10\">\n    <field name=\"COLORMODE\">255<\/field>\n    <next>\n      <block type=\"turtle_bgcolor_rgb\" id=\")tliNO}W;vx!L?07AkKh\">\n        <value name=\"RED\">\n          <block type=\"math_number\" id=\"x}F}9.viwWpaYgAJhEbh\">\n            <field name=\"NUM\">256<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"GREEN\">\n          <block type=\"math_number\" id=\"R}=2T;-|jBY5\/{+KnrqO\">\n            <field name=\"NUM\">165<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"BLUE\">\n          <block type=\"math_number\" id=\"Tl#FDQ_s%luCa\/r;:CPu\">\n            <field name=\"NUM\">0<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<pre class=\"js-terminal\" data-eg-id=\"bad-colour-value\"><code data-lang=\"logo\"><o>Traceback (most recent call last):\n  File \"program.py\", line 5, in <module>\n    bgcolor(256, 165, 0)\n  File \"\/opt\/grok\/python3\/turtle.py\", line 2237, in bgcolor\n    return WORLD.api_bgcolor(check_color(*color))\n  File \"\/opt\/grok\/python3\/turtle.py\", line 1597, in check_color\n    raise ValueError('{} component of colour must be in the range [0, {}] (not {})'.format(component, WORLD.api_colormode(None), val))\nValueError: red component of colour must be in the range [0, 255] (not 256)<\/o>\n<\/code><\/pre>\n\n<p>\n  The error message generated gives you a hint about the error in your code - this is telling us that the red component of our colour needs to be in the range 0 - 255, not the <bk class=\"math\"><bk class=\"inner\">256<\/bk><\/bk> we have used. You can change the values in the example above to see how the error message changes for incorrect green and blue values.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Numbers outside the range",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Once you set your <bk class=\"lib\">color range<\/bk> you need to make sure you always use values that are in that range, otherwise your program will raise an error. The example below tries to use a value of <bk class=\"math\"><bk class=\"inner\">256<\/bk><\/bk> which is larger than the maximum 255 allowed in the selected <bk class=\"lib\">color range<\/bk>.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bad-colour-value\"><code data-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_colormode_dropdown\" id=\"JT`TZ~be6gBofJE+[|TR\" x=\"10\" y=\"10\">\n    <field name=\"COLORMODE\">255<\/field>\n    <next>\n      <block type=\"turtle_bgcolor_rgb\" id=\")tliNO}W;vx!L?07AkKh\">\n        <value name=\"RED\">\n          <block type=\"math_number\" id=\"x}F}9.viwWpaYgAJhEbh\">\n            <field name=\"NUM\">256<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"GREEN\">\n          <block type=\"math_number\" id=\"R}=2T;-|jBY5\/{+KnrqO\">\n            <field name=\"NUM\">165<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"BLUE\">\n          <block type=\"math_number\" id=\"Tl#FDQ_s%luCa\/r;:CPu\">\n            <field name=\"NUM\">0<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<pre class=\"js-terminal\" data-eg-id=\"bad-colour-value\"><code data-lang=\"logo\"><o>Traceback (most recent call last):\n  File \"program.py\", line 5, in <module>\n    bgcolor(256, 165, 0)\n  File \"\/opt\/grok\/python3\/turtle.py\", line 2237, in bgcolor\n    return WORLD.api_bgcolor(check_color(*color))\n  File \"\/opt\/grok\/python3\/turtle.py\", line 1597, in check_color\n    raise ValueError('{} component of colour must be in the range [0, {}] (not {})'.format(component, WORLD.api_colormode(None), val))\nValueError: red component of colour must be in the range [0, 255] (not 256)<\/o>\n<\/code><\/pre>\n\n<p>\n  The error message generated gives you a hint about the error in your code - this is telling us that the red component of our colour needs to be in the range 0 - 255, not the <bk class=\"math\"><bk class=\"inner\">256<\/bk><\/bk> we have used. You can change the values in the example above to see how the error message changes for incorrect green and blue values.\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Once you've defined your colour range, you can then use the <bk class=\"lib\">set pen color to RGB<\/bk> block any time you want to set a colour. This means you can access even more colours to use in your programs (in fact, with 255 values possible in each of red, green and blue, that's 255 &times; 255 &times; 255 = 16,777,216 different colours!).\n<\/p>\n\n<p>\n  Use the example code below to draw a line of any colour by changing the value of the red, green and blue values, and see what cool colours you can make!\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-rgb-example\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_colormode_dropdown\" id=\"a_p?:[6,WJHZ2tYsyGqi\" x=\"10\" y=\"10\">\n    <field name=\"COLORMODE\">255<\/field>\n    <next>\n      <block type=\"turtle_pencolor_rgb\" id=\"*a3kz,I]_drnaOoc5^^5\">\n        <value name=\"RED\">\n          <block type=\"math_number\" id=\"XTH#Y@._j-q0O6S2BzzM\">\n            <field name=\"NUM\">255<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"GREEN\">\n          <block type=\"math_number\" id=\"cb8wuLZ3aVx\/H{=8JSc4\">\n            <field name=\"NUM\">165<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"BLUE\">\n          <block type=\"math_number\" id=\"}N6A9.cdhpK*VehGlq~#\">\n            <field name=\"NUM\">0<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pensize\" id=\"~yLJa9phVjX[e+5O4aLq\">\n            <value name=\"SIZE\">\n              <block type=\"math_number\" id=\"yV7CzDz3~-~l%ads0kB@\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"#=@FQqfKr9\/)^ik.^gP!\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"UTGaqz*cA~Z\/#`Tf|NEJ\">\n                    <field name=\"NUM\">80<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  <strong>Remember, you should always set your colour range before using the RGB blocks!<\/strong>\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Using RGB with blocks",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Once you've defined your colour range, you can then use the <bk class=\"lib\">set pen color to RGB<\/bk> block any time you want to set a colour. This means you can access even more colours to use in your programs (in fact, with 255 values possible in each of red, green and blue, that's 255 &times; 255 &times; 255 = 16,777,216 different colours!).\n<\/p>\n\n<p>\n  Use the example code below to draw a line of any colour by changing the value of the red, green and blue values, and see what cool colours you can make!\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-rgb-example\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_colormode_dropdown\" id=\"a_p?:[6,WJHZ2tYsyGqi\" x=\"10\" y=\"10\">\n    <field name=\"COLORMODE\">255<\/field>\n    <next>\n      <block type=\"turtle_pencolor_rgb\" id=\"*a3kz,I]_drnaOoc5^^5\">\n        <value name=\"RED\">\n          <block type=\"math_number\" id=\"XTH#Y@._j-q0O6S2BzzM\">\n            <field name=\"NUM\">255<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"GREEN\">\n          <block type=\"math_number\" id=\"cb8wuLZ3aVx\/H{=8JSc4\">\n            <field name=\"NUM\">165<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"BLUE\">\n          <block type=\"math_number\" id=\"}N6A9.cdhpK*VehGlq~#\">\n            <field name=\"NUM\">0<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pensize\" id=\"~yLJa9phVjX[e+5O4aLq\">\n            <value name=\"SIZE\">\n              <block type=\"math_number\" id=\"yV7CzDz3~-~l%ads0kB@\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_forward\" id=\"#=@FQqfKr9\/)^ik.^gP!\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"UTGaqz*cA~Z\/#`Tf|NEJ\">\n                    <field name=\"NUM\">80<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  <strong>Remember, you should always set your colour range before using the RGB blocks!<\/strong>\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  To make your program even more flexible so that it changes each time it is run, you can use variables to collect values from the user for each of the RGB channels, then use these in the <bk class=\"lib\">set pen color to RGB<\/bk> block. You don't have to modify your code, and the user can now create any of the 16 million colours themselves.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-rgb-variables\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"gzu+W`ZSG;Q-_RxIF$VO\">blue<\/variable>\n    <variable type=\"\" id=\"J|FHIAG.6k$PYG6Q\/#!o\">green<\/variable>\n    <variable type=\"\" id=\"JxpxbJTLn5M,qd,_jNmX\">red<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"y\/6u=zd0!pLFFZFInL_a\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"JxpxbJTLn5M,qd,_jNmX\" variabletype=\"\">red<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"T(ltiY~bh)N#1gf0ZoW?\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"T@R^9LX*^RIK0g]y]ZYP\">\n            <field name=\"TEXT\">Red:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"uM3Pt3quD`x,L\/MYte*e\">\n        <field name=\"VAR\" id=\"J|FHIAG.6k$PYG6Q\/#!o\" variabletype=\"\">green<\/field>\n        <value name=\"VALUE\">\n          <block type=\"io_ask_num\" id=\"$?S.XBQBcvr6bIFG%sm|\">\n            <value name=\"TEXT\">\n              <block type=\"text\" id=\"M^gUR\/]])9L63fZsZ[Cl\">\n                <field name=\"TEXT\">Green:<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"variables_set\" id=\".\/:;aQNI;lnzcizNG@SP\">\n            <field name=\"VAR\" id=\"gzu+W`ZSG;Q-_RxIF$VO\" variabletype=\"\">blue<\/field>\n            <value name=\"VALUE\">\n              <block type=\"io_ask_num\" id=\"Bux%YrH:^-opt7To_jh!\">\n                <value name=\"TEXT\">\n                  <block type=\"text\" id=\"{?cmWP@%xWi@8XtnySRw\">\n                    <field name=\"TEXT\">Blue:<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_colormode_dropdown\" id=\"a_p?:[6,WJHZ2tYsyGqi\">\n                <field name=\"COLORMODE\">255<\/field>\n                <next>\n                  <block type=\"turtle_pencolor_rgb\" id=\"*a3kz,I]_drnaOoc5^^5\">\n                    <value name=\"RED\">\n                      <block type=\"variables_get\" id=\"IV.r!Ypw8Y;Qn2KMTGY?\">\n                        <field name=\"VAR\" id=\"JxpxbJTLn5M,qd,_jNmX\" variabletype=\"\">red<\/field>\n                      <\/block>\n                    <\/value>\n                    <value name=\"GREEN\">\n                      <block type=\"variables_get\" id=\"5Tp!.TA=H+gq5hLF+ox%\">\n                        <field name=\"VAR\" id=\"J|FHIAG.6k$PYG6Q\/#!o\" variabletype=\"\">green<\/field>\n                      <\/block>\n                    <\/value>\n                    <value name=\"BLUE\">\n                      <block type=\"variables_get\" id=\"hW;T!Gw-*P+jt%21]{qM\">\n                        <field name=\"VAR\" id=\"gzu+W`ZSG;Q-_RxIF$VO\" variabletype=\"\">blue<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_pensize\" id=\"~yLJa9phVjX[e+5O4aLq\">\n                        <value name=\"SIZE\">\n                          <block type=\"math_number\" id=\"yV7CzDz3~-~l%ads0kB@\">\n                            <field name=\"NUM\">10<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"#=@FQqfKr9\/)^ik.^gP!\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"UTGaqz*cA~Z\/#`Tf|NEJ\">\n                                <field name=\"NUM\">80<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre> \n\n<p>\n  There are also RGB versions of the <bk class=\"lib\">set fill color<\/bk> and <bk class=\"lib\">set background color<\/bk> blocks, so you can use RGB colours for any part of your drawings.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Variables and RGB",
              "notes_rendered":"",
              "content_rendered":"<p>\n  To make your program even more flexible so that it changes each time it is run, you can use variables to collect values from the user for each of the RGB channels, then use these in the <bk class=\"lib\">set pen color to RGB<\/bk> block. You don't have to modify your code, and the user can now create any of the 16 million colours themselves.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-rgb-variables\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"gzu+W`ZSG;Q-_RxIF$VO\">blue<\/variable>\n    <variable type=\"\" id=\"J|FHIAG.6k$PYG6Q\/#!o\">green<\/variable>\n    <variable type=\"\" id=\"JxpxbJTLn5M,qd,_jNmX\">red<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"y\/6u=zd0!pLFFZFInL_a\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"JxpxbJTLn5M,qd,_jNmX\" variabletype=\"\">red<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"T(ltiY~bh)N#1gf0ZoW?\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"T@R^9LX*^RIK0g]y]ZYP\">\n            <field name=\"TEXT\">Red:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"uM3Pt3quD`x,L\/MYte*e\">\n        <field name=\"VAR\" id=\"J|FHIAG.6k$PYG6Q\/#!o\" variabletype=\"\">green<\/field>\n        <value name=\"VALUE\">\n          <block type=\"io_ask_num\" id=\"$?S.XBQBcvr6bIFG%sm|\">\n            <value name=\"TEXT\">\n              <block type=\"text\" id=\"M^gUR\/]])9L63fZsZ[Cl\">\n                <field name=\"TEXT\">Green:<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"variables_set\" id=\".\/:;aQNI;lnzcizNG@SP\">\n            <field name=\"VAR\" id=\"gzu+W`ZSG;Q-_RxIF$VO\" variabletype=\"\">blue<\/field>\n            <value name=\"VALUE\">\n              <block type=\"io_ask_num\" id=\"Bux%YrH:^-opt7To_jh!\">\n                <value name=\"TEXT\">\n                  <block type=\"text\" id=\"{?cmWP@%xWi@8XtnySRw\">\n                    <field name=\"TEXT\">Blue:<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_colormode_dropdown\" id=\"a_p?:[6,WJHZ2tYsyGqi\">\n                <field name=\"COLORMODE\">255<\/field>\n                <next>\n                  <block type=\"turtle_pencolor_rgb\" id=\"*a3kz,I]_drnaOoc5^^5\">\n                    <value name=\"RED\">\n                      <block type=\"variables_get\" id=\"IV.r!Ypw8Y;Qn2KMTGY?\">\n                        <field name=\"VAR\" id=\"JxpxbJTLn5M,qd,_jNmX\" variabletype=\"\">red<\/field>\n                      <\/block>\n                    <\/value>\n                    <value name=\"GREEN\">\n                      <block type=\"variables_get\" id=\"5Tp!.TA=H+gq5hLF+ox%\">\n                        <field name=\"VAR\" id=\"J|FHIAG.6k$PYG6Q\/#!o\" variabletype=\"\">green<\/field>\n                      <\/block>\n                    <\/value>\n                    <value name=\"BLUE\">\n                      <block type=\"variables_get\" id=\"hW;T!Gw-*P+jt%21]{qM\">\n                        <field name=\"VAR\" id=\"gzu+W`ZSG;Q-_RxIF$VO\" variabletype=\"\">blue<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_pensize\" id=\"~yLJa9phVjX[e+5O4aLq\">\n                        <value name=\"SIZE\">\n                          <block type=\"math_number\" id=\"yV7CzDz3~-~l%ads0kB@\">\n                            <field name=\"NUM\">10<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_forward\" id=\"#=@FQqfKr9\/)^ik.^gP!\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"UTGaqz*cA~Z\/#`Tf|NEJ\">\n                                <field name=\"NUM\">80<\/field>\n                              <\/block>\n                            <\/value>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre> \n\n<p>\n  There are also RGB versions of the <bk class=\"lib\">set fill color<\/bk> and <bk class=\"lib\">set background color<\/bk> blocks, so you can use RGB colours for any part of your drawings.\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Any coloured square",
              "purpose":"",
              "problem":"aca-blockly-logo-any-coloured-square",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Pixel",
              "purpose":"",
              "problem":"aca-blockly-logo-pixel",
              "type":1
            }
          ],
          "title":"Representations of colour"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>When we use a loop block, it repeats everything inside of it. If we put another loop inside a loop block we can do even more fun things!<\/p>\n\n<p>Try to work out what this is going to print before you click run!<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"loop-inside-a-loop-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"1069\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"1070\">\n        <field name=\"NUM\">6<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"1090\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"1091\">\n            <field name=\"NUM\">6<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"1183\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"1184\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn\" id=\"1270\" inline=\"true\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <value name=\"ANGLE\">\n                  <block type=\"math_number\" id=\"1271\">\n                    <field name=\"NUM\">60<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n        <next>\n          <block type=\"turtle_forward\" id=\"1185\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"1186\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn\" id=\"1272\" inline=\"true\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <value name=\"ANGLE\">\n                  <block type=\"math_number\" id=\"1273\">\n                    <field name=\"NUM\">60<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>The whole inside loop is repeated each time the outside loop repeats.<\/p>"
                }
              ],
              "layout":0,
              "title":"Loops inside loops",
              "notes_rendered":"",
              "content_rendered":"<p>When we use a loop block, it repeats everything inside of it. If we put another loop inside a loop block we can do even more fun things!<\/p>\n\n<p>Try to work out what this is going to print before you click run!<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"loop-inside-a-loop-eg1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"1069\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"1070\">\n        <field name=\"NUM\">6<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"1090\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"1091\">\n            <field name=\"NUM\">6<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"1183\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"1184\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn\" id=\"1270\" inline=\"true\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <value name=\"ANGLE\">\n                  <block type=\"math_number\" id=\"1271\">\n                    <field name=\"NUM\">60<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n        <next>\n          <block type=\"turtle_forward\" id=\"1185\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"1186\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn\" id=\"1272\" inline=\"true\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <value name=\"ANGLE\">\n                  <block type=\"math_number\" id=\"1273\">\n                    <field name=\"NUM\">60<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>The whole inside loop is repeated each time the outside loop repeats.<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  A lot of the shapes we've been drawing throughout the course can be simplified with loops. This is because the way the shape is drawn is by repeating the instructions you use to move the turtle.\n<\/p>\n\n<p>\n  Here's a loop that draws a square:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-loop-square\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"U[nQ2J[T;WtYc:KiKR%w\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"[nB6N~k%EVar6LT^?z\/B\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"JQT0YXx$vfOLt;|5*C[p\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"^#yz?y|fE#w^Sql4nOhb\">\n            <field name=\"NUM\">20<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"5%@5zE]w5PU35nzPufJp\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  We can then use another loop to repeat our square code, moving the turtle between squares to reposition it for the next one:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-loop-squares\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\")}oh3AypoxF}^(zZz0\/=\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"=lrFI~dQQ#R,igdke[O{\">\n        <field name=\"NUM\">6<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"U[nQ2J[T;WtYc:KiKR%w\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"[nB6N~k%EVar6LT^?z\/B\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"JQT0YXx$vfOLt;|5*C[p\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"^#yz?y|fE#w^Sql4nOhb\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"5%@5zE]w5PU35nzPufJp\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n        <next>\n          <block type=\"turtle_forward\" id=\"D9as:v1Gmf,eM83%4cGP\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"yhWCjA0[{,qCA+BGl[Ob\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  When creating code with a loop in a loop, you should always make sure the inner loop is correct first. So, in this example, draw one square and move the turtle to its new starting position before you make the outer loop.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Looping shapes",
              "notes_rendered":"",
              "content_rendered":"<p>\n  A lot of the shapes we've been drawing throughout the course can be simplified with loops. This is because the way the shape is drawn is by repeating the instructions you use to move the turtle.\n<\/p>\n\n<p>\n  Here's a loop that draws a square:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-loop-square\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"U[nQ2J[T;WtYc:KiKR%w\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"[nB6N~k%EVar6LT^?z\/B\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"JQT0YXx$vfOLt;|5*C[p\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"^#yz?y|fE#w^Sql4nOhb\">\n            <field name=\"NUM\">20<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"5%@5zE]w5PU35nzPufJp\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  We can then use another loop to repeat our square code, moving the turtle between squares to reposition it for the next one:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-loop-squares\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\")}oh3AypoxF}^(zZz0\/=\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"=lrFI~dQQ#R,igdke[O{\">\n        <field name=\"NUM\">6<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"U[nQ2J[T;WtYc:KiKR%w\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"[nB6N~k%EVar6LT^?z\/B\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"JQT0YXx$vfOLt;|5*C[p\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"^#yz?y|fE#w^Sql4nOhb\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"5%@5zE]w5PU35nzPufJp\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n        <next>\n          <block type=\"turtle_forward\" id=\"D9as:v1Gmf,eM83%4cGP\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"yhWCjA0[{,qCA+BGl[Ob\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  When creating code with a loop in a loop, you should always make sure the inner loop is correct first. So, in this example, draw one square and move the turtle to its new starting position before you make the outer loop.\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  You can make all kinds of interesting patterns by trying different things with your loops.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-loop-pattern\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_pencolor_dropdown\" id=\"8Ke`iBknHBhMkND_m%%\/\" x=\"14\" y=\"27\">\n    <field name=\"COLOR\">purple<\/field>\n    <next>\n      <block type=\"loops_repeat_ext\" id=\"~qLTc[kS%!SNFh[DL792\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"!A6hTKlfu%gBV~ydDELR\">\n            <field name=\"NUM\">9<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"loops_repeat_ext\" id=\"U[nQ2J[T;WtYc:KiKR%w\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\" id=\"[nB6N~k%EVar6LT^?z\/B\">\n                <field name=\"NUM\">5<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block type=\"turtle_forward\" id=\"JQT0YXx$vfOLt;|5*C[p\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"^#yz?y|fE#w^Sql4nOhb\">\n                    <field name=\"NUM\">80<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"AFkX*:e){[d3d!+qwK[0\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"E3}fG?1ztXi]~h$blqAT\">\n                        <field name=\"NUM\">104<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/pre><\/code>\n\n<p>\n  This type of drawing is known as a <a href=\"https:\/\/en.wikipedia.org\/wiki\/Spirograph\" target=\"_blank\">spirograph<\/a>.\n<\/p>\n\n<p>\n  Notice how in this example, the turtle ends up back where it started? This is due to the mathematical relationship between our angle and the number of times we loop in the program.\n<\/p>\n\n$$$104\u00b0 \\times 5 = 520\u00b0$$$\n\n<p>\n  In our inner loop, our turtle turns 520\u00b0. Since this isn't a multiple of 360\u00b0, the turtle doesn't end up starting where it finishes (which is what we want for this pattern!)\n<\/p>\n\n$$$520\u00b0 \\times 9 = 4680\u00b0$$$\n$$$4680\u00b0 \\div 360\u00b0 = 13$$$\n\n<p>\n  If we repeat our inner loop 9 times, the turtle rotates a total of 4680\u00b0, which is a multiple of 360\u00b0 since it divides equally into 13.\n<\/p>\n\n<p>\n  Use this relationship to try different values and see what other patterns you an create!\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Interesting patterns",
              "notes_rendered":"",
              "content_rendered":"<p>\n  You can make all kinds of interesting patterns by trying different things with your loops.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-py3-logo-loop-pattern\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"turtle_pencolor_dropdown\" id=\"8Ke`iBknHBhMkND_m%%\/\" x=\"14\" y=\"27\">\n    <field name=\"COLOR\">purple<\/field>\n    <next>\n      <block type=\"loops_repeat_ext\" id=\"~qLTc[kS%!SNFh[DL792\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"!A6hTKlfu%gBV~ydDELR\">\n            <field name=\"NUM\">9<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"loops_repeat_ext\" id=\"U[nQ2J[T;WtYc:KiKR%w\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\" id=\"[nB6N~k%EVar6LT^?z\/B\">\n                <field name=\"NUM\">5<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block type=\"turtle_forward\" id=\"JQT0YXx$vfOLt;|5*C[p\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"^#yz?y|fE#w^Sql4nOhb\">\n                    <field name=\"NUM\">80<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"AFkX*:e){[d3d!+qwK[0\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"E3}fG?1ztXi]~h$blqAT\">\n                        <field name=\"NUM\">104<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/pre><\/code>\n\n<p>\n  This type of drawing is known as a <a href=\"https:\/\/en.wikipedia.org\/wiki\/Spirograph\" target=\"_blank\">spirograph<\/a>.\n<\/p>\n\n<p>\n  Notice how in this example, the turtle ends up back where it started? This is due to the mathematical relationship between our angle and the number of times we loop in the program.\n<\/p>\n\n$$$104\u00b0 \\times 5 = 520\u00b0$$$\n\n<p>\n  In our inner loop, our turtle turns 520\u00b0. Since this isn't a multiple of 360\u00b0, the turtle doesn't end up starting where it finishes (which is what we want for this pattern!)\n<\/p>\n\n$$$520\u00b0 \\times 9 = 4680\u00b0$$$\n$$$4680\u00b0 \\div 360\u00b0 = 13$$$\n\n<p>\n  If we repeat our inner loop 9 times, the turtle rotates a total of 4680\u00b0, which is a multiple of 360\u00b0 since it divides equally into 13.\n<\/p>\n\n<p>\n  Use this relationship to try different values and see what other patterns you an create!\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Wooden Fence",
              "purpose":"",
              "problem":"aca-blockly-logo-build-a-fence",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Daisy Chains",
              "purpose":"",
              "problem":"aca-blockly-logo-daisy-chains",
              "type":1
            }
          ],
          "title":"Loops in loops"
        }
      ],
      "title":"More colours and loops",
      "label":"aca-blockly-maths-yr7-6",
      "updated_at":"2017-11-15T06:39:42.096726+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  This module focuses on geometric transformations - ways that we can change how our shapes are drawn. The first of these we'll investigate is translation.\n<\/p>\n\n<p>\n  Translation is a transformation that moves every point in the shape the same distance in the same direction. We've already been using translation a lot in our course - quite a few of our loop questions involved some translation.\n<\/p>\n\n<p>\n  The example below draws a 50 &times; 50 square, then changes the pen colour and draws another 50 &times; 50 square in a new position. That position is 20 turtle steps up and 20 turtle steps right from the original square's position:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"square-translation\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"U[nQ2J[T;WtYc:KiKR%w\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"[nB6N~k%EVar6LT^?z\/B\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"JQT0YXx$vfOLt;|5*C[p\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"^#yz?y|fE#w^Sql4nOhb\">\n            <field name=\"NUM\">50<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"lEWD`q!Z@XJd$*j0,P6n\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n    <next>\n      <block type=\"turtle_pen\" id=\"j%[sj{wL71^5MHz!k`{1\">\n        <field name=\"STATE\">UP<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"Ee$-@V(a`x^s)J~BX5XB\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"74SG]J_,PpHxrDU`}2EH\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"[8w.;VxMlZ+B[Yctans4\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"?Q[sIXMdMfbE\/?0gROar\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"e8qE(EW]bIqcx6TiLmhq\">\n                        <field name=\"NUM\">20<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"aaZy?aA*S{@vRo|R~:b7\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <next>\n                          <block type=\"turtle_pencolor_dropdown\" id=\"8Ke`iBknHBhMkND_m%%\/\">\n                            <field name=\"COLOR\">red<\/field>\n                            <next>\n                              <block type=\"turtle_pen\" id=\"dSX2NO:2^r5xo^\/P(nz{\">\n                                <field name=\"STATE\">DOWN<\/field>\n                                <next>\n                                  <block type=\"loops_repeat_ext\" id=\")Bu6SL9vztdijGvQPg2w\">\n                                    <value name=\"TIMES\">\n                                      <block type=\"math_number\" id=\"tq}%zjIg_14HQ}P8amUE\">\n                                        <field name=\"NUM\">4<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <statement name=\"DO\">\n                                      <block type=\"turtle_forward\" id=\"%}]$247vS2eq!U-1`y)6\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"b,y?=HFs((hKIKZ)lTuQ\">\n                                            <field name=\"NUM\">50<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_turn_simple\" id=\"V^GO6ay{[KVpbFFc7D1w\">\n                                            <field name=\"DIRECTION\">LEFT<\/field>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/statement>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>"
                }
              ],
              "layout":0,
              "title":"What is translation?",
              "notes_rendered":"",
              "content_rendered":"<p>\n  This module focuses on geometric transformations - ways that we can change how our shapes are drawn. The first of these we'll investigate is translation.\n<\/p>\n\n<p>\n  Translation is a transformation that moves every point in the shape the same distance in the same direction. We've already been using translation a lot in our course - quite a few of our loop questions involved some translation.\n<\/p>\n\n<p>\n  The example below draws a 50 &times; 50 square, then changes the pen colour and draws another 50 &times; 50 square in a new position. That position is 20 turtle steps up and 20 turtle steps right from the original square's position:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"square-translation\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"U[nQ2J[T;WtYc:KiKR%w\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"[nB6N~k%EVar6LT^?z\/B\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"JQT0YXx$vfOLt;|5*C[p\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"^#yz?y|fE#w^Sql4nOhb\">\n            <field name=\"NUM\">50<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"lEWD`q!Z@XJd$*j0,P6n\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n    <next>\n      <block type=\"turtle_pen\" id=\"j%[sj{wL71^5MHz!k`{1\">\n        <field name=\"STATE\">UP<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"Ee$-@V(a`x^s)J~BX5XB\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"74SG]J_,PpHxrDU`}2EH\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"[8w.;VxMlZ+B[Yctans4\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"?Q[sIXMdMfbE\/?0gROar\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"e8qE(EW]bIqcx6TiLmhq\">\n                        <field name=\"NUM\">20<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"aaZy?aA*S{@vRo|R~:b7\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                        <next>\n                          <block type=\"turtle_pencolor_dropdown\" id=\"8Ke`iBknHBhMkND_m%%\/\">\n                            <field name=\"COLOR\">red<\/field>\n                            <next>\n                              <block type=\"turtle_pen\" id=\"dSX2NO:2^r5xo^\/P(nz{\">\n                                <field name=\"STATE\">DOWN<\/field>\n                                <next>\n                                  <block type=\"loops_repeat_ext\" id=\")Bu6SL9vztdijGvQPg2w\">\n                                    <value name=\"TIMES\">\n                                      <block type=\"math_number\" id=\"tq}%zjIg_14HQ}P8amUE\">\n                                        <field name=\"NUM\">4<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <statement name=\"DO\">\n                                      <block type=\"turtle_forward\" id=\"%}]$247vS2eq!U-1`y)6\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"b,y?=HFs((hKIKZ)lTuQ\">\n                                            <field name=\"NUM\">50<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_turn_simple\" id=\"V^GO6ay{[KVpbFFc7D1w\">\n                                            <field name=\"DIRECTION\">LEFT<\/field>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/statement>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Translation is used in computers all the time to position images and text on your screen. Each image or letter is defined by drawing some lines in a specific direction (just like we explored in the Vector Graphics module), and then translation is used to place it in the correct location on the screen.\n<\/p>\n\n<p>\n  The example below asks you to indicate where you would like to position the letter I (a rectangle) by specifying how far you want to move it right, and how far you want to move it up. If you want to move it left or down, you just use negative numbers:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"translation-move-i\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"8!f7NnenjvY6QEE-R5^A\">dist_right<\/variable>\n    <variable type=\"\" id=\",2Wj]rDp,]GR0?o*3!(F\">dist_up<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"kZCo8Q-rbjaZwqrrAG\/[\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"8!f7NnenjvY6QEE-R5^A\" variabletype=\"\">dist_right<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"}usNyu8v*:A(ih#S]cII\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"o+gH%_8(,@Wn{ygAG?O_\">\n            <field name=\"TEXT\">How far right?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"jU#PHjlR,(Q0YWqC)zC4\">\n        <field name=\"VAR\" id=\",2Wj]rDp,]GR0?o*3!(F\" variabletype=\"\">dist_up<\/field>\n        <value name=\"VALUE\">\n          <block type=\"io_ask_num\" id=\"NHCZ?*rY_+3wAslm7qPT\">\n            <value name=\"TEXT\">\n              <block type=\"text\" id=\"s1W*M+`fsuJ1OZ,mhJaR\">\n                <field name=\"TEXT\">How far up?<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pen\" id=\"j%[sj{wL71^5MHz!k`{1\">\n            <field name=\"STATE\">UP<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"Ee$-@V(a`x^s)J~BX5XB\">\n                <value name=\"DISTANCE\">\n                  <block type=\"variables_get\" id=\"YyyvgAHn%G%*X_7A30.^\">\n                    <field name=\"VAR\" id=\"8!f7NnenjvY6QEE-R5^A\" variabletype=\"\">dist_right<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"[8w.;VxMlZ+B[Yctans4\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"?Q[sIXMdMfbE\/?0gROar\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"variables_get\" id=\"[1(P4CYhy=h~{lZzex@$\">\n                            <field name=\"VAR\" id=\",2Wj]rDp,]GR0?o*3!(F\" variabletype=\"\">dist_up<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"aaZy?aA*S{@vRo|R~:b7\">\n                            <field name=\"DIRECTION\">RIGHT<\/field>\n                            <next>\n                              <block type=\"turtle_pen\" id=\"dSX2NO:2^r5xo^\/P(nz{\">\n                                <field name=\"STATE\">DOWN<\/field>\n                                <next>\n                                  <block type=\"loops_repeat_ext\" id=\"$#{:WLpM[p]n%UD%+Wj6\">\n                                    <value name=\"TIMES\">\n                                      <block type=\"math_number\" id=\"lUV=e`.U\/HFVI_``?.;.\">\n                                        <field name=\"NUM\">2<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <statement name=\"DO\">\n                                      <block type=\"turtle_forward\" id=\"JQT0YXx$vfOLt;|5*C[p\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"^#yz?y|fE#w^Sql4nOhb\">\n                                            <field name=\"NUM\">20<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_turn_simple\" id=\"lEWD`q!Z@XJd$*j0,P6n\">\n                                            <field name=\"DIRECTION\">LEFT<\/field>\n                                            <next>\n                                              <block type=\"turtle_forward\" id=\"?]hYE%wThr,K1xa+T#C)\">\n                                                <value name=\"DISTANCE\">\n                                                  <block type=\"math_number\" id=\"qNf\/W%wL#v-P[1mK;F=#\">\n                                                    <field name=\"NUM\">80<\/field>\n                                                  <\/block>\n                                                <\/value>\n                                                <next>\n                                                  <block type=\"turtle_turn_simple\" id=\"zA^*:3Sw}4Bg`NQ05L\/_\">\n                                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                                  <\/block>\n                                                <\/next>\n                                              <\/block>\n                                            <\/next>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/statement>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  <strong>Run this example and watch how the turtle moves when you use different values.<\/strong> You can position the I anywhere on the screen - try different positive and negative numbers and see what happens.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Uses of translation",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Translation is used in computers all the time to position images and text on your screen. Each image or letter is defined by drawing some lines in a specific direction (just like we explored in the Vector Graphics module), and then translation is used to place it in the correct location on the screen.\n<\/p>\n\n<p>\n  The example below asks you to indicate where you would like to position the letter I (a rectangle) by specifying how far you want to move it right, and how far you want to move it up. If you want to move it left or down, you just use negative numbers:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"translation-move-i\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"8!f7NnenjvY6QEE-R5^A\">dist_right<\/variable>\n    <variable type=\"\" id=\",2Wj]rDp,]GR0?o*3!(F\">dist_up<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"kZCo8Q-rbjaZwqrrAG\/[\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"8!f7NnenjvY6QEE-R5^A\" variabletype=\"\">dist_right<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"}usNyu8v*:A(ih#S]cII\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"o+gH%_8(,@Wn{ygAG?O_\">\n            <field name=\"TEXT\">How far right?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"jU#PHjlR,(Q0YWqC)zC4\">\n        <field name=\"VAR\" id=\",2Wj]rDp,]GR0?o*3!(F\" variabletype=\"\">dist_up<\/field>\n        <value name=\"VALUE\">\n          <block type=\"io_ask_num\" id=\"NHCZ?*rY_+3wAslm7qPT\">\n            <value name=\"TEXT\">\n              <block type=\"text\" id=\"s1W*M+`fsuJ1OZ,mhJaR\">\n                <field name=\"TEXT\">How far up?<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pen\" id=\"j%[sj{wL71^5MHz!k`{1\">\n            <field name=\"STATE\">UP<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"Ee$-@V(a`x^s)J~BX5XB\">\n                <value name=\"DISTANCE\">\n                  <block type=\"variables_get\" id=\"YyyvgAHn%G%*X_7A30.^\">\n                    <field name=\"VAR\" id=\"8!f7NnenjvY6QEE-R5^A\" variabletype=\"\">dist_right<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"[8w.;VxMlZ+B[Yctans4\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"?Q[sIXMdMfbE\/?0gROar\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"variables_get\" id=\"[1(P4CYhy=h~{lZzex@$\">\n                            <field name=\"VAR\" id=\",2Wj]rDp,]GR0?o*3!(F\" variabletype=\"\">dist_up<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"aaZy?aA*S{@vRo|R~:b7\">\n                            <field name=\"DIRECTION\">RIGHT<\/field>\n                            <next>\n                              <block type=\"turtle_pen\" id=\"dSX2NO:2^r5xo^\/P(nz{\">\n                                <field name=\"STATE\">DOWN<\/field>\n                                <next>\n                                  <block type=\"loops_repeat_ext\" id=\"$#{:WLpM[p]n%UD%+Wj6\">\n                                    <value name=\"TIMES\">\n                                      <block type=\"math_number\" id=\"lUV=e`.U\/HFVI_``?.;.\">\n                                        <field name=\"NUM\">2<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <statement name=\"DO\">\n                                      <block type=\"turtle_forward\" id=\"JQT0YXx$vfOLt;|5*C[p\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"^#yz?y|fE#w^Sql4nOhb\">\n                                            <field name=\"NUM\">20<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_turn_simple\" id=\"lEWD`q!Z@XJd$*j0,P6n\">\n                                            <field name=\"DIRECTION\">LEFT<\/field>\n                                            <next>\n                                              <block type=\"turtle_forward\" id=\"?]hYE%wThr,K1xa+T#C)\">\n                                                <value name=\"DISTANCE\">\n                                                  <block type=\"math_number\" id=\"qNf\/W%wL#v-P[1mK;F=#\">\n                                                    <field name=\"NUM\">80<\/field>\n                                                  <\/block>\n                                                <\/value>\n                                                <next>\n                                                  <block type=\"turtle_turn_simple\" id=\"zA^*:3Sw}4Bg`NQ05L\/_\">\n                                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                                  <\/block>\n                                                <\/next>\n                                              <\/block>\n                                            <\/next>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/statement>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  <strong>Run this example and watch how the turtle moves when you use different values.<\/strong> You can position the I anywhere on the screen - try different positive and negative numbers and see what happens.\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Solitaire",
              "purpose":"",
              "problem":"aca-blockly-logo-solitaire-win",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Noooooooooooo",
              "purpose":"",
              "problem":"aca-blockly-logo-nooooooo",
              "type":1
            }
          ],
          "title":"Translation"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Rotations describes how shapes move around a point in two-dimensional space. Where translation moves the turtle to a new position but leaves it facing the same way, rotation changes the starting direction of the turtle.\n<\/p>\n\n<p>\n  The example below draws a 50 &times; 50 square, changes the pen colour and draws another 50 &times; 50 square with a rotation angle of 30\u00b0, and does this one more time but with a green pen:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"square-rotation\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"8!f7NnenjvY6QEE-R5^A\">dist_right<\/variable>\n    <variable type=\"\" id=\",2Wj]rDp,]GR0?o*3!(F\">dist_up<\/variable>\n  <\/variables>\n  <block type=\"loops_repeat_ext\" id=\":z0sYH@`h]Ro#(uzfUeH\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"T?D-wdka^ZXjf~n?XY7C\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"LrN7riusjFgM)2p#d0ik\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"Yr)b?6C!%,N5zuKJQi{t\">\n            <field name=\"NUM\">50<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"\/uY39SfdaeLw3f+3~2^K\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n    <next>\n      <block type=\"turtle_turn\" id=\"LbE_Kj\/1Kz\/$%:qM@.n(\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"=ZyXzVn{@\/DZ\/4vS@R}i\">\n            <field name=\"NUM\">30<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pencolor_dropdown\" id=\"zT.tDB1xl61Y^teo5[P@\">\n            <field name=\"COLOR\">red<\/field>\n            <next>\n              <block type=\"loops_repeat_ext\" id=\"\/LVdzyGK+B#[GWS(.+=~\">\n                <value name=\"TIMES\">\n                  <block type=\"math_number\" id=\"6%aIcsk$hV)7%c]982~V\">\n                    <field name=\"NUM\">4<\/field>\n                  <\/block>\n                <\/value>\n                <statement name=\"DO\">\n                  <block type=\"turtle_forward\" id=\"R6:24L5*_KFeJzfK;+en\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"lx28!$@xTME}lO=]cFS@\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"~M}F6D_uaG+vkE0^hh*\/\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/statement>\n                <next>\n                  <block type=\"turtle_turn\" id=\"`d)%}cjjCgBOprX0fhUY\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"hPgm3GHA;FacQMTBl~mc\">\n                        <field name=\"NUM\">30<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_pencolor_dropdown\" id=\"yZd#Y4jymN0pXWG{y~K#\">\n                        <field name=\"COLOR\">darkgreen<\/field>\n                        <next>\n                          <block type=\"loops_repeat_ext\" id=\"nuHD~T63?Vtd]T1IP=4W\">\n                            <value name=\"TIMES\">\n                              <block type=\"math_number\" id=\"X];\/_[R6RY~sN@G`%Mw2\">\n                                <field name=\"NUM\">4<\/field>\n                              <\/block>\n                            <\/value>\n                            <statement name=\"DO\">\n                              <block type=\"turtle_forward\" id=\"z0#[yaq~A1j_i^?q}L}0\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"EOa77@N)$fmsa^x5d(qn\">\n                                    <field name=\"NUM\">50<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"7oM;))~q[|t|rAqVS``3\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/statement>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>"
                }
              ],
              "layout":0,
              "title":"What is rotation?",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Rotations describes how shapes move around a point in two-dimensional space. Where translation moves the turtle to a new position but leaves it facing the same way, rotation changes the starting direction of the turtle.\n<\/p>\n\n<p>\n  The example below draws a 50 &times; 50 square, changes the pen colour and draws another 50 &times; 50 square with a rotation angle of 30\u00b0, and does this one more time but with a green pen:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"square-rotation\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"8!f7NnenjvY6QEE-R5^A\">dist_right<\/variable>\n    <variable type=\"\" id=\",2Wj]rDp,]GR0?o*3!(F\">dist_up<\/variable>\n  <\/variables>\n  <block type=\"loops_repeat_ext\" id=\":z0sYH@`h]Ro#(uzfUeH\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"T?D-wdka^ZXjf~n?XY7C\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"LrN7riusjFgM)2p#d0ik\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"Yr)b?6C!%,N5zuKJQi{t\">\n            <field name=\"NUM\">50<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"\/uY39SfdaeLw3f+3~2^K\">\n            <field name=\"DIRECTION\">LEFT<\/field>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n    <next>\n      <block type=\"turtle_turn\" id=\"LbE_Kj\/1Kz\/$%:qM@.n(\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"=ZyXzVn{@\/DZ\/4vS@R}i\">\n            <field name=\"NUM\">30<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pencolor_dropdown\" id=\"zT.tDB1xl61Y^teo5[P@\">\n            <field name=\"COLOR\">red<\/field>\n            <next>\n              <block type=\"loops_repeat_ext\" id=\"\/LVdzyGK+B#[GWS(.+=~\">\n                <value name=\"TIMES\">\n                  <block type=\"math_number\" id=\"6%aIcsk$hV)7%c]982~V\">\n                    <field name=\"NUM\">4<\/field>\n                  <\/block>\n                <\/value>\n                <statement name=\"DO\">\n                  <block type=\"turtle_forward\" id=\"R6:24L5*_KFeJzfK;+en\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"lx28!$@xTME}lO=]cFS@\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"~M}F6D_uaG+vkE0^hh*\/\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/statement>\n                <next>\n                  <block type=\"turtle_turn\" id=\"`d)%}cjjCgBOprX0fhUY\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"math_number\" id=\"hPgm3GHA;FacQMTBl~mc\">\n                        <field name=\"NUM\">30<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_pencolor_dropdown\" id=\"yZd#Y4jymN0pXWG{y~K#\">\n                        <field name=\"COLOR\">darkgreen<\/field>\n                        <next>\n                          <block type=\"loops_repeat_ext\" id=\"nuHD~T63?Vtd]T1IP=4W\">\n                            <value name=\"TIMES\">\n                              <block type=\"math_number\" id=\"X];\/_[R6RY~sN@G`%Mw2\">\n                                <field name=\"NUM\">4<\/field>\n                              <\/block>\n                            <\/value>\n                            <statement name=\"DO\">\n                              <block type=\"turtle_forward\" id=\"z0#[yaq~A1j_i^?q}L}0\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"EOa77@N)$fmsa^x5d(qn\">\n                                    <field name=\"NUM\">50<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"7oM;))~q[|t|rAqVS``3\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/statement>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  In our previous example, we rotated the shape around the turtle's starting point, meaning the squares all shared a common corner. Sometimes, you want to rotate an image around a point that isn't on the corner of the shape.\n<\/p>\n\n<p>\n  To make this work, you need to combine translation and rotation. You include the initial translation from the origin point inside the code that you repeat, and make sure the turtle moves back to the starting point before you perform the rotation:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"square-rotation-translation\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"8!f7NnenjvY6QEE-R5^A\">dist_right<\/variable>\n    <variable type=\"\" id=\",2Wj]rDp,]GR0?o*3!(F\">dist_up<\/variable>\n  <\/variables>\n  <block type=\"loops_repeat_ext\" id=\"UgX;K^PI#N)49O=glSr`\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"|L!T$XT4ZJai#iLu+OLA\">\n        <field name=\"NUM\">7<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_pen\" id=\",[l;pr@A#:I1sh-1!\/yn\">\n        <field name=\"STATE\">UP<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"AC4RB%-cS84R4-*7sF_I\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"WeX-Q-8XWXDL@9jie8Kk\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_pen\" id=\"DesW973CMa0-8}QSu0H[\">\n                <field name=\"STATE\">DOWN<\/field>\n                <next>\n                  <block type=\"loops_repeat_ext\" id=\":z0sYH@`h]Ro#(uzfUeH\">\n                    <value name=\"TIMES\">\n                      <block type=\"math_number\" id=\"T?D-wdka^ZXjf~n?XY7C\">\n                        <field name=\"NUM\">4<\/field>\n                      <\/block>\n                    <\/value>\n                    <statement name=\"DO\">\n                      <block type=\"turtle_forward\" id=\"LrN7riusjFgM)2p#d0ik\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"Yr)b?6C!%,N5zuKJQi{t\">\n                            <field name=\"NUM\">50<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"\/uY39SfdaeLw3f+3~2^K\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/statement>\n                    <next>\n                      <block type=\"turtle_pen\" id=\"f|RC^rh1PWL^:RzEb,.a\">\n                        <field name=\"STATE\">UP<\/field>\n                        <next>\n                          <block type=\"turtle_backward\" id=\"RMm|22~$CAeC;!!=~5!C\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"?_zRSqRhitF3Nl{oP]xX\">\n                                <field name=\"NUM\">20<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_pen\" id=\"eGm|$[$}mn#1hP[5B?4\/\">\n                                <field name=\"STATE\">DOWN<\/field>\n                                <next>\n                                  <block type=\"turtle_turn\" id=\"LbE_Kj\/1Kz\/$%:qM@.n(\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <value name=\"ANGLE\">\n                                      <block type=\"math_number\" id=\"=ZyXzVn{@\/DZ\/4vS@R}i\">\n                                        <field name=\"NUM\">30<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_pencolor_dropdown\" id=\"zT.tDB1xl61Y^teo5[P@\">\n                                        <field name=\"COLOR\">red<\/field>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  Here, we draw our original square in black, moving the turtle forward 20 steps before putting the pen down. After we finish the square, we move the turtle back to the start, then draw 6 more squares using the same process, but with the red pen.\n<\/p>\n\n<p>\n  Notice that instead of sharing a common corner, all of these squares are 10 steps away from the origin point, but each one is rotated 30\u00b0 from the previous one.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Rotation around different points",
              "notes_rendered":"",
              "content_rendered":"<p>\n  In our previous example, we rotated the shape around the turtle's starting point, meaning the squares all shared a common corner. Sometimes, you want to rotate an image around a point that isn't on the corner of the shape.\n<\/p>\n\n<p>\n  To make this work, you need to combine translation and rotation. You include the initial translation from the origin point inside the code that you repeat, and make sure the turtle moves back to the starting point before you perform the rotation:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"square-rotation-translation\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"8!f7NnenjvY6QEE-R5^A\">dist_right<\/variable>\n    <variable type=\"\" id=\",2Wj]rDp,]GR0?o*3!(F\">dist_up<\/variable>\n  <\/variables>\n  <block type=\"loops_repeat_ext\" id=\"UgX;K^PI#N)49O=glSr`\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"|L!T$XT4ZJai#iLu+OLA\">\n        <field name=\"NUM\">7<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_pen\" id=\",[l;pr@A#:I1sh-1!\/yn\">\n        <field name=\"STATE\">UP<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"AC4RB%-cS84R4-*7sF_I\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"WeX-Q-8XWXDL@9jie8Kk\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_pen\" id=\"DesW973CMa0-8}QSu0H[\">\n                <field name=\"STATE\">DOWN<\/field>\n                <next>\n                  <block type=\"loops_repeat_ext\" id=\":z0sYH@`h]Ro#(uzfUeH\">\n                    <value name=\"TIMES\">\n                      <block type=\"math_number\" id=\"T?D-wdka^ZXjf~n?XY7C\">\n                        <field name=\"NUM\">4<\/field>\n                      <\/block>\n                    <\/value>\n                    <statement name=\"DO\">\n                      <block type=\"turtle_forward\" id=\"LrN7riusjFgM)2p#d0ik\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"Yr)b?6C!%,N5zuKJQi{t\">\n                            <field name=\"NUM\">50<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"\/uY39SfdaeLw3f+3~2^K\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/statement>\n                    <next>\n                      <block type=\"turtle_pen\" id=\"f|RC^rh1PWL^:RzEb,.a\">\n                        <field name=\"STATE\">UP<\/field>\n                        <next>\n                          <block type=\"turtle_backward\" id=\"RMm|22~$CAeC;!!=~5!C\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"?_zRSqRhitF3Nl{oP]xX\">\n                                <field name=\"NUM\">20<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_pen\" id=\"eGm|$[$}mn#1hP[5B?4\/\">\n                                <field name=\"STATE\">DOWN<\/field>\n                                <next>\n                                  <block type=\"turtle_turn\" id=\"LbE_Kj\/1Kz\/$%:qM@.n(\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <value name=\"ANGLE\">\n                                      <block type=\"math_number\" id=\"=ZyXzVn{@\/DZ\/4vS@R}i\">\n                                        <field name=\"NUM\">30<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_pencolor_dropdown\" id=\"zT.tDB1xl61Y^teo5[P@\">\n                                        <field name=\"COLOR\">red<\/field>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  Here, we draw our original square in black, moving the turtle forward 20 steps before putting the pen down. After we finish the square, we move the turtle back to the start, then draw 6 more squares using the same process, but with the red pen.\n<\/p>\n\n<p>\n  Notice that instead of sharing a common corner, all of these squares are 10 steps away from the origin point, but each one is rotated 30\u00b0 from the previous one.\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Rotation is used all the time in computers. In everything from a word processor or image editing program through to computer games, items on the screen are often rotated either by the user or the player. The items themselves aren't changed - instead, the items are rotated around a defined point by setting a rotation angle and performing the same kind of instructions we saw on the last slide.\n<\/p>\n\n<p>\n  If you want to rotate a shape around a point inside the shape, then you draw the shape as if the turtle's starting point is inside it. Here's an example:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"square-rotation-inside\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"ia`#*;@c;hf^bz{[_U*Y\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"8~6yQ@_=a6Zs%@w8VRT!\">\n        <field name=\"NUM\">7<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_pen\" id=\"*M4-d|fn@`4\/O0oq3dz7\">\n        <field name=\"STATE\">UP<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"{qu8dP7Pi|R|G#3fg1ZO\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"Ou(tN[uN@uc8C.jf|p)t\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_pen\" id=\"\/Z[$x`$JSx\/zg1Q]lx-D\">\n                <field name=\"STATE\">DOWN<\/field>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"v-KmC,|PTN4H(aSq$pX1\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\",pfw28abiMU):z]XpzkO\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"NcNA:4r6)zK:(w;D}KY1\">\n                            <field name=\"NUM\">20<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"loops_repeat_ext\" id=\"mVg;P4Dmb[)1aR:ri:Ju\">\n                            <value name=\"TIMES\">\n                              <block type=\"math_number\" id=\")SZa?$WI2tU:}rG.kXim\">\n                                <field name=\"NUM\">3<\/field>\n                              <\/block>\n                            <\/value>\n                            <statement name=\"DO\">\n                              <block type=\"turtle_turn_simple\" id=\"Ux5xL4`r(`=yVvk,Ce^e\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"-e##4}%MJ=kK3,USoH,9\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\")U-#%SSV$%--h{SZ:S6#\">\n                                        <field name=\"NUM\">70<\/field>\n                                      <\/block>\n                                    <\/value>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/statement>\n                            <next>\n                              <block type=\"turtle_turn_simple\" id=\"VWM28HaTYE{Hd8af:@p}\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"musa=(O|5;hk*#j)UoH$\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\")4Oa,FC~iEhHYFAMhRkP\">\n                                        <field name=\"NUM\">50<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_pen\" id=\",6mu1f+F(gXSO1]xUtP@\">\n                                        <field name=\"STATE\">UP<\/field>\n                                        <next>\n                                          <block type=\"turtle_turn_simple\" id=\"k$O#m;lFAVP(:{-wV)Py\">\n                                            <field name=\"DIRECTION\">RIGHT<\/field>\n                                            <next>\n                                              <block type=\"turtle_backward\" id=\"w?V)Y8;umqyy#q(=g]gr\">\n                                                <value name=\"DISTANCE\">\n                                                  <block type=\"math_number\" id=\"@OjwUe-sZBwh@*qdgIv(\">\n                                                    <field name=\"NUM\">20<\/field>\n                                                  <\/block>\n                                                <\/value>\n                                                <next>\n                                                  <block type=\"turtle_turn\" id=\"%9gsC%=~dHMn%06ah-Rf\">\n                                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                                    <value name=\"ANGLE\">\n                                                      <block type=\"math_number\" id=\"4_nYAl]n~H^v@.K^P?((\">\n                                                        <field name=\"NUM\">15<\/field>\n                                                      <\/block>\n                                                    <\/value>\n                                                    <next>\n                                                      <block type=\"turtle_pencolor_dropdown\" id=\"=c8e:.IH2=G`cbt6cjvU\">\n                                                        <field name=\"COLOR\">red<\/field>\n                                                      <\/block>\n                                                    <\/next>\n                                                  <\/block>\n                                                <\/next>\n                                              <\/block>\n                                            <\/next>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n"
                }
              ],
              "layout":0,
              "title":"Using rotation",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Rotation is used all the time in computers. In everything from a word processor or image editing program through to computer games, items on the screen are often rotated either by the user or the player. The items themselves aren't changed - instead, the items are rotated around a defined point by setting a rotation angle and performing the same kind of instructions we saw on the last slide.\n<\/p>\n\n<p>\n  If you want to rotate a shape around a point inside the shape, then you draw the shape as if the turtle's starting point is inside it. Here's an example:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"square-rotation-inside\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"ia`#*;@c;hf^bz{[_U*Y\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"8~6yQ@_=a6Zs%@w8VRT!\">\n        <field name=\"NUM\">7<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_pen\" id=\"*M4-d|fn@`4\/O0oq3dz7\">\n        <field name=\"STATE\">UP<\/field>\n        <next>\n          <block type=\"turtle_forward\" id=\"{qu8dP7Pi|R|G#3fg1ZO\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"Ou(tN[uN@uc8C.jf|p)t\">\n                <field name=\"NUM\">20<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_pen\" id=\"\/Z[$x`$JSx\/zg1Q]lx-D\">\n                <field name=\"STATE\">DOWN<\/field>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"v-KmC,|PTN4H(aSq$pX1\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\",pfw28abiMU):z]XpzkO\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"NcNA:4r6)zK:(w;D}KY1\">\n                            <field name=\"NUM\">20<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"loops_repeat_ext\" id=\"mVg;P4Dmb[)1aR:ri:Ju\">\n                            <value name=\"TIMES\">\n                              <block type=\"math_number\" id=\")SZa?$WI2tU:}rG.kXim\">\n                                <field name=\"NUM\">3<\/field>\n                              <\/block>\n                            <\/value>\n                            <statement name=\"DO\">\n                              <block type=\"turtle_turn_simple\" id=\"Ux5xL4`r(`=yVvk,Ce^e\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"-e##4}%MJ=kK3,USoH,9\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\")U-#%SSV$%--h{SZ:S6#\">\n                                        <field name=\"NUM\">70<\/field>\n                                      <\/block>\n                                    <\/value>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/statement>\n                            <next>\n                              <block type=\"turtle_turn_simple\" id=\"VWM28HaTYE{Hd8af:@p}\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"musa=(O|5;hk*#j)UoH$\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\")4Oa,FC~iEhHYFAMhRkP\">\n                                        <field name=\"NUM\">50<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_pen\" id=\",6mu1f+F(gXSO1]xUtP@\">\n                                        <field name=\"STATE\">UP<\/field>\n                                        <next>\n                                          <block type=\"turtle_turn_simple\" id=\"k$O#m;lFAVP(:{-wV)Py\">\n                                            <field name=\"DIRECTION\">RIGHT<\/field>\n                                            <next>\n                                              <block type=\"turtle_backward\" id=\"w?V)Y8;umqyy#q(=g]gr\">\n                                                <value name=\"DISTANCE\">\n                                                  <block type=\"math_number\" id=\"@OjwUe-sZBwh@*qdgIv(\">\n                                                    <field name=\"NUM\">20<\/field>\n                                                  <\/block>\n                                                <\/value>\n                                                <next>\n                                                  <block type=\"turtle_turn\" id=\"%9gsC%=~dHMn%06ah-Rf\">\n                                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                                    <value name=\"ANGLE\">\n                                                      <block type=\"math_number\" id=\"4_nYAl]n~H^v@.K^P?((\">\n                                                        <field name=\"NUM\">15<\/field>\n                                                      <\/block>\n                                                    <\/value>\n                                                    <next>\n                                                      <block type=\"turtle_pencolor_dropdown\" id=\"=c8e:.IH2=G`cbt6cjvU\">\n                                                        <field name=\"COLOR\">red<\/field>\n                                                      <\/block>\n                                                    <\/next>\n                                                  <\/block>\n                                                <\/next>\n                                              <\/block>\n                                            <\/next>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Wind turbine",
              "purpose":"",
              "problem":"aca-blockly-logo-wind-turbine",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Triangle wreath",
              "purpose":"",
              "problem":"aca-blockly-logo-triangle-wreath",
              "type":1
            }
          ],
          "title":"Rotation"
        }
      ],
      "title":"Translation and rotation",
      "label":"aca-blockly-maths-yr7-7",
      "updated_at":"2017-11-15T06:40:14.619006+00:00",
      "concepts":[

      ]
    },
    {
      "content":[
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Just because loops are used to repeat code, it doesn't mean that the code being repeated can't do different things. Run the code example below, and see what it creates:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-changing-loops\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"EcmLKu1L7;wC@xcu)jD6\">angle<\/variable>\n    <variable type=\"\" id=\"f*q.M3`T*,2)Mk=1~`a1\">sides<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"#:|G=XC7nF=xu$~2M+D(\" x=\"12\" y=\"13\">\n    <field name=\"VAR\" id=\"f*q.M3`T*,2)Mk=1~`a1\" variabletype=\"\">sides<\/field>\n    <value name=\"VALUE\">\n      <block type=\"math_number\" id=\"+2UFZvl#m,`~iq0{B=[I\">\n        <field name=\"NUM\">3<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"loops_repeat_ext\" id=\"nIm-N](q^cp,^B_#Xmmb\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"(pAh%B.VzHq{Y4~rnD5u\">\n            <field name=\"NUM\">5<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"variables_set\" id=\"98{hS;mabg#+`s4W[Ml$\">\n            <field name=\"VAR\" id=\"EcmLKu1L7;wC@xcu)jD6\" variabletype=\"\">angle<\/field>\n            <value name=\"VALUE\">\n              <block type=\"math_arithmetic\" id=\"o;jsClp-*}kGux=?(,D_\">\n                <field name=\"OP\">DIVIDE<\/field>\n                <value name=\"A\">\n                  <block type=\"math_number\" id=\"rpy}J)_N;e7KlFTdj9BK\">\n                    <field name=\"NUM\">360<\/field>\n                  <\/block>\n                <\/value>\n                <value name=\"B\">\n                  <block type=\"variables_get\" id=\"%||ht@BYFPoqcz%o,aF|\">\n                    <field name=\"VAR\" id=\"f*q.M3`T*,2)Mk=1~`a1\" variabletype=\"\">sides<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"loops_repeat_ext\" id=\"D|84bDF7{gdVxbiQ8#]t\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\" id=\"frA.pRNhKO)CK|,~|a5Q\">\n                    <field name=\"VAR\" id=\"f*q.M3`T*,2)Mk=1~`a1\" variabletype=\"\">sides<\/field>\n                  <\/block>\n                <\/value>\n                <statement name=\"DO\">\n                  <block type=\"turtle_forward\" id=\"t0%A|WR:{LsC@GB6]R$O\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"=HZY~\/NjT*6~0X*9J;+b\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"qeLQMWwj80oPrlUhz9A^\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"variables_get\" id=\"5C2hhl=4!6$SZzz4i-FR\">\n                            <field name=\"VAR\" id=\"EcmLKu1L7;wC@xcu)jD6\" variabletype=\"\">angle<\/field>\n                          <\/block>\n                        <\/value>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/statement>\n                <next>\n                  <block type=\"variables_incdec\" id=\"r]W.Gsf^jZWQpe!!*r_:\">\n                    <field name=\"OP\">INCREMENT<\/field>\n                    <field name=\"VAR\" id=\"f*q.M3`T*,2)Mk=1~`a1\" variabletype=\"\">sides<\/field>\n                    <value name=\"DELTA\">\n                      <block type=\"math_number\" id=\"Zv~Sq,?JsqKZIJQiLQRX\">\n                        <field name=\"NUM\">1<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>The key to having your repeated code doing different things each time is to make sure that you change some of the variables inside the loop. This way, the next time the code uses that variable, it will have a different value and can do different things!"
                }
              ],
              "layout":0,
              "title":"Loops can be different",
              "notes_rendered":"",
              "content_rendered":"<p>Just because loops are used to repeat code, it doesn't mean that the code being repeated can't do different things. Run the code example below, and see what it creates:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-changing-loops\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"EcmLKu1L7;wC@xcu)jD6\">angle<\/variable>\n    <variable type=\"\" id=\"f*q.M3`T*,2)Mk=1~`a1\">sides<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"#:|G=XC7nF=xu$~2M+D(\" x=\"12\" y=\"13\">\n    <field name=\"VAR\" id=\"f*q.M3`T*,2)Mk=1~`a1\" variabletype=\"\">sides<\/field>\n    <value name=\"VALUE\">\n      <block type=\"math_number\" id=\"+2UFZvl#m,`~iq0{B=[I\">\n        <field name=\"NUM\">3<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"loops_repeat_ext\" id=\"nIm-N](q^cp,^B_#Xmmb\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"(pAh%B.VzHq{Y4~rnD5u\">\n            <field name=\"NUM\">5<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"variables_set\" id=\"98{hS;mabg#+`s4W[Ml$\">\n            <field name=\"VAR\" id=\"EcmLKu1L7;wC@xcu)jD6\" variabletype=\"\">angle<\/field>\n            <value name=\"VALUE\">\n              <block type=\"math_arithmetic\" id=\"o;jsClp-*}kGux=?(,D_\">\n                <field name=\"OP\">DIVIDE<\/field>\n                <value name=\"A\">\n                  <block type=\"math_number\" id=\"rpy}J)_N;e7KlFTdj9BK\">\n                    <field name=\"NUM\">360<\/field>\n                  <\/block>\n                <\/value>\n                <value name=\"B\">\n                  <block type=\"variables_get\" id=\"%||ht@BYFPoqcz%o,aF|\">\n                    <field name=\"VAR\" id=\"f*q.M3`T*,2)Mk=1~`a1\" variabletype=\"\">sides<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"loops_repeat_ext\" id=\"D|84bDF7{gdVxbiQ8#]t\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\" id=\"frA.pRNhKO)CK|,~|a5Q\">\n                    <field name=\"VAR\" id=\"f*q.M3`T*,2)Mk=1~`a1\" variabletype=\"\">sides<\/field>\n                  <\/block>\n                <\/value>\n                <statement name=\"DO\">\n                  <block type=\"turtle_forward\" id=\"t0%A|WR:{LsC@GB6]R$O\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"=HZY~\/NjT*6~0X*9J;+b\">\n                        <field name=\"NUM\">50<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"qeLQMWwj80oPrlUhz9A^\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"variables_get\" id=\"5C2hhl=4!6$SZzz4i-FR\">\n                            <field name=\"VAR\" id=\"EcmLKu1L7;wC@xcu)jD6\" variabletype=\"\">angle<\/field>\n                          <\/block>\n                        <\/value>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/statement>\n                <next>\n                  <block type=\"variables_incdec\" id=\"r]W.Gsf^jZWQpe!!*r_:\">\n                    <field name=\"OP\">INCREMENT<\/field>\n                    <field name=\"VAR\" id=\"f*q.M3`T*,2)Mk=1~`a1\" variabletype=\"\">sides<\/field>\n                    <value name=\"DELTA\">\n                      <block type=\"math_number\" id=\"Zv~Sq,?JsqKZIJQiLQRX\">\n                        <field name=\"NUM\">1<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>The key to having your repeated code doing different things each time is to make sure that you change some of the variables inside the loop. This way, the next time the code uses that variable, it will have a different value and can do different things!",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>Any variable can be changed in the loop, which means any block that uses a variable can be updated to change what you draw. You can change more than one thing in the loop if you like, you just need to have more variables and make sure you change all of the right values in the loop.<\/p>\n\n<p>\n  This code asks the user for a start height and pen thickness, then draws a \"mountain range\" where each mountain gets higher and the pen used to draw it gets thicker each time through the loop. Run the code and try different values (30 for height and 2 for thickness are a good start).\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-growing-mountains\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"[Q,@Zy2{etYd7`2(jAsR\">height<\/variable>\n    <variable type=\"\" id=\"Xy`x1dB$u)hWsEt7}f}w\">thickness<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"y_HQ\/oG@l4#[!:?2)xrS\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"[Q,@Zy2{etYd7`2(jAsR\" variabletype=\"\">height<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"\/-@fq[UOc|GaJ6,w+l56\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"()bEe63#-d|5F]QieE+K\">\n            <field name=\"TEXT\">Start height:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"mh;Oaa`~7;^{};};zyDK\">\n        <field name=\"VAR\" id=\"Xy`x1dB$u)hWsEt7}f}w\" variabletype=\"\">thickness<\/field>\n        <value name=\"VALUE\">\n          <block type=\"io_ask_num\" id=\"97AUBst:;MB)B6Q?khVR\">\n            <value name=\"TEXT\">\n              <block type=\"text\" id=\"ZG4mx@,}fYsb*(s|dZGT\">\n                <field name=\"TEXT\">Start thickness:<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pen\" id=\"`Z4KLOMVhS5nMK=y#U]g\">\n            <field name=\"STATE\">UP<\/field>\n            <next>\n              <block type=\"turtle_backward\" id=\"*7RSuxiVd_l@sLHo2;|J\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"J.MmoE_N?$~oY5awh7nb\">\n                    <field name=\"NUM\">150<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_pen\" id=\"wuaew}ZniYE[{V}oI4Z!\">\n                    <field name=\"STATE\">DOWN<\/field>\n                    <next>\n                      <block type=\"loops_repeat_ext\" id=\"5cML99c!whZB5@~gP})J\">\n                        <value name=\"TIMES\">\n                          <block type=\"math_number\" id=\"f7h;KD:Mb,CxVe2b4|fZ\">\n                            <field name=\"NUM\">5<\/field>\n                          <\/block>\n                        <\/value>\n                        <statement name=\"DO\">\n                          <block type=\"turtle_pensize\" id=\"mgRK,a-z9^CP,WQ3\/JXW\">\n                            <value name=\"SIZE\">\n                              <block type=\"variables_get\" id=\"SubNDB~e|-Uk{UtFj3cr\">\n                                <field name=\"VAR\" id=\"Xy`x1dB$u)hWsEt7}f}w\" variabletype=\"\">thickness<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn\" id=\"zCr$pSUNHaSZ|(Y1O}5^\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <value name=\"ANGLE\">\n                                  <block type=\"math_number\" id=\".F3L*2mFP(EACD2i_C5[\">\n                                    <field name=\"NUM\">70<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"gN+:[~vB8\/?p=CI8fVZ+\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"variables_get\" id=\"ilHh.=p-]*r\/k]woTyff\">\n                                        <field name=\"VAR\" id=\"[Q,@Zy2{etYd7`2(jAsR\" variabletype=\"\">height<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_turn\" id=\"B\/!O|vf0.k.WobK,ET^2\">\n                                        <field name=\"DIRECTION\">RIGHT<\/field>\n                                        <value name=\"ANGLE\">\n                                          <block type=\"math_number\" id=\"HmMU%v4xOKf=,VsFh*:4\">\n                                            <field name=\"NUM\">140<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_forward\" id=\"flnkR~\/0#-_V=UZSh]w}\">\n                                            <value name=\"DISTANCE\">\n                                              <block type=\"variables_get\" id=\"[V^%m(Y(jZwz+R.t:!CH\">\n                                                <field name=\"VAR\" id=\"[Q,@Zy2{etYd7`2(jAsR\" variabletype=\"\">height<\/field>\n                                              <\/block>\n                                            <\/value>\n                                            <next>\n                                              <block type=\"turtle_turn\" id=\"zm5K]wtujP?r-#.EIV+7\">\n                                                <field name=\"DIRECTION\">LEFT<\/field>\n                                                <value name=\"ANGLE\">\n                                                  <block type=\"math_number\" id=\"aySqY~XZ3=O1Pa6u`q\/q\">\n                                                    <field name=\"NUM\">70<\/field>\n                                                  <\/block>\n                                                <\/value>\n                                                <next>\n                                                  <block type=\"variables_incdec\" id=\"QBRQ_vOUfSK~d#9sagc2\">\n                                                    <field name=\"OP\">INCREMENT<\/field>\n                                                    <field name=\"VAR\" id=\"[Q,@Zy2{etYd7`2(jAsR\" variabletype=\"\">height<\/field>\n                                                    <value name=\"DELTA\">\n                                                      <block type=\"math_number\" id=\"Ue_lY-gCulZJR0pBr9qI\">\n                                                        <field name=\"NUM\">20<\/field>\n                                                      <\/block>\n                                                    <\/value>\n                                                    <next>\n                                                      <block type=\"variables_incdec\" id=\"S]J+=X[sBJ92li3YpCNQ\">\n                                                        <field name=\"OP\">INCREMENT<\/field>\n                                                        <field name=\"VAR\" id=\"Xy`x1dB$u)hWsEt7}f}w\" variabletype=\"\">thickness<\/field>\n                                                        <value name=\"DELTA\">\n                                                          <block type=\"math_number\" id=\"#P]W+CUF:Dx3$xK+Ae~x\">\n                                                            <field name=\"NUM\">5<\/field>\n                                                          <\/block>\n                                                        <\/value>\n                                                      <\/block>\n                                                    <\/next>\n                                                  <\/block>\n                                                <\/next>\n                                              <\/block>\n                                            <\/next>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/statement>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\nBy changing the thickness and height at the end of the loop, the next time through the variables are bigger, and the mountains get higher and thicker.\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"Anything is variable",
              "notes_rendered":"",
              "content_rendered":"<p>Any variable can be changed in the loop, which means any block that uses a variable can be updated to change what you draw. You can change more than one thing in the loop if you like, you just need to have more variables and make sure you change all of the right values in the loop.<\/p>\n\n<p>\n  This code asks the user for a start height and pen thickness, then draws a \"mountain range\" where each mountain gets higher and the pen used to draw it gets thicker each time through the loop. Run the code and try different values (30 for height and 2 for thickness are a good start).\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-growing-mountains\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"[Q,@Zy2{etYd7`2(jAsR\">height<\/variable>\n    <variable type=\"\" id=\"Xy`x1dB$u)hWsEt7}f}w\">thickness<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"y_HQ\/oG@l4#[!:?2)xrS\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"[Q,@Zy2{etYd7`2(jAsR\" variabletype=\"\">height<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"\/-@fq[UOc|GaJ6,w+l56\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"()bEe63#-d|5F]QieE+K\">\n            <field name=\"TEXT\">Start height:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"mh;Oaa`~7;^{};};zyDK\">\n        <field name=\"VAR\" id=\"Xy`x1dB$u)hWsEt7}f}w\" variabletype=\"\">thickness<\/field>\n        <value name=\"VALUE\">\n          <block type=\"io_ask_num\" id=\"97AUBst:;MB)B6Q?khVR\">\n            <value name=\"TEXT\">\n              <block type=\"text\" id=\"ZG4mx@,}fYsb*(s|dZGT\">\n                <field name=\"TEXT\">Start thickness:<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pen\" id=\"`Z4KLOMVhS5nMK=y#U]g\">\n            <field name=\"STATE\">UP<\/field>\n            <next>\n              <block type=\"turtle_backward\" id=\"*7RSuxiVd_l@sLHo2;|J\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"J.MmoE_N?$~oY5awh7nb\">\n                    <field name=\"NUM\">150<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_pen\" id=\"wuaew}ZniYE[{V}oI4Z!\">\n                    <field name=\"STATE\">DOWN<\/field>\n                    <next>\n                      <block type=\"loops_repeat_ext\" id=\"5cML99c!whZB5@~gP})J\">\n                        <value name=\"TIMES\">\n                          <block type=\"math_number\" id=\"f7h;KD:Mb,CxVe2b4|fZ\">\n                            <field name=\"NUM\">5<\/field>\n                          <\/block>\n                        <\/value>\n                        <statement name=\"DO\">\n                          <block type=\"turtle_pensize\" id=\"mgRK,a-z9^CP,WQ3\/JXW\">\n                            <value name=\"SIZE\">\n                              <block type=\"variables_get\" id=\"SubNDB~e|-Uk{UtFj3cr\">\n                                <field name=\"VAR\" id=\"Xy`x1dB$u)hWsEt7}f}w\" variabletype=\"\">thickness<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn\" id=\"zCr$pSUNHaSZ|(Y1O}5^\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <value name=\"ANGLE\">\n                                  <block type=\"math_number\" id=\".F3L*2mFP(EACD2i_C5[\">\n                                    <field name=\"NUM\">70<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"gN+:[~vB8\/?p=CI8fVZ+\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"variables_get\" id=\"ilHh.=p-]*r\/k]woTyff\">\n                                        <field name=\"VAR\" id=\"[Q,@Zy2{etYd7`2(jAsR\" variabletype=\"\">height<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_turn\" id=\"B\/!O|vf0.k.WobK,ET^2\">\n                                        <field name=\"DIRECTION\">RIGHT<\/field>\n                                        <value name=\"ANGLE\">\n                                          <block type=\"math_number\" id=\"HmMU%v4xOKf=,VsFh*:4\">\n                                            <field name=\"NUM\">140<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_forward\" id=\"flnkR~\/0#-_V=UZSh]w}\">\n                                            <value name=\"DISTANCE\">\n                                              <block type=\"variables_get\" id=\"[V^%m(Y(jZwz+R.t:!CH\">\n                                                <field name=\"VAR\" id=\"[Q,@Zy2{etYd7`2(jAsR\" variabletype=\"\">height<\/field>\n                                              <\/block>\n                                            <\/value>\n                                            <next>\n                                              <block type=\"turtle_turn\" id=\"zm5K]wtujP?r-#.EIV+7\">\n                                                <field name=\"DIRECTION\">LEFT<\/field>\n                                                <value name=\"ANGLE\">\n                                                  <block type=\"math_number\" id=\"aySqY~XZ3=O1Pa6u`q\/q\">\n                                                    <field name=\"NUM\">70<\/field>\n                                                  <\/block>\n                                                <\/value>\n                                                <next>\n                                                  <block type=\"variables_incdec\" id=\"QBRQ_vOUfSK~d#9sagc2\">\n                                                    <field name=\"OP\">INCREMENT<\/field>\n                                                    <field name=\"VAR\" id=\"[Q,@Zy2{etYd7`2(jAsR\" variabletype=\"\">height<\/field>\n                                                    <value name=\"DELTA\">\n                                                      <block type=\"math_number\" id=\"Ue_lY-gCulZJR0pBr9qI\">\n                                                        <field name=\"NUM\">20<\/field>\n                                                      <\/block>\n                                                    <\/value>\n                                                    <next>\n                                                      <block type=\"variables_incdec\" id=\"S]J+=X[sBJ92li3YpCNQ\">\n                                                        <field name=\"OP\">INCREMENT<\/field>\n                                                        <field name=\"VAR\" id=\"Xy`x1dB$u)hWsEt7}f}w\" variabletype=\"\">thickness<\/field>\n                                                        <value name=\"DELTA\">\n                                                          <block type=\"math_number\" id=\"#P]W+CUF:Dx3$xK+Ae~x\">\n                                                            <field name=\"NUM\">5<\/field>\n                                                          <\/block>\n                                                        <\/value>\n                                                      <\/block>\n                                                    <\/next>\n                                                  <\/block>\n                                                <\/next>\n                                              <\/block>\n                                            <\/next>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/statement>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\nBy changing the thickness and height at the end of the loop, the next time through the variables are bigger, and the mountains get higher and thicker.\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Staircase",
              "purpose":"",
              "problem":"aca-blockly-logo-staircase",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Thickening spiral",
              "purpose":"",
              "problem":"aca-blockly-logo-thickening-spiral",
              "type":1
            }
          ],
          "title":"Changing things in loops"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\nA <a href=\"https:\/\/en.wikipedia.org\/wiki\/Color_gradient\" target=\"_blank\">colour gradient<\/a> is a gradual transition from one colour to another - a bit like a sunset that goes from orange through to blue. They are often used as a background on slides in a slide deck but are also common in user interfaces as colour selection tools.\n<\/p>\n\n<p>\nGradients can easily be created with the turtle by altering the RGB channels inside a loop. The example below creates a line that is a gradient from black through to red:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-gradient-red\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"G.U;E9*F;944WaQm`0=s\">red<\/variable>\n  <\/variables>\n  <block type=\"turtle_pen\" id=\"wLcW8@dys08BTNG$Tu7#\" x=\"25\" y=\"10\">\n    <field name=\"STATE\">UP<\/field>\n    <next>\n      <block type=\"turtle_backward\" id=\"8Va@7?*3nHkcZKwEy\/G?\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\":$Vn\/;gtFse{kW*X%Z;k\">\n            <field name=\"NUM\">128<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pen\" id=\"#|O2mleq=#H5lJ]Q|BrS\">\n            <field name=\"STATE\">DOWN<\/field>\n            <next>\n              <block type=\"variables_set\" id=\"Fo!pn-ood9`}4CwS=*e*\">\n                <field name=\"VAR\" id=\"G.U;E9*F;944WaQm`0=s\" variabletype=\"\">red<\/field>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\" id=\"7QsY)Tydr~gy0I-jlcCY\">\n                    <field name=\"NUM\">0<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_pensize\" id=\"e@osfYA\/8m-}Dp?Pmo6!\">\n                    <value name=\"SIZE\">\n                      <block type=\"math_number\" id=\"IB[`*cWYuK,Ab]loLu5S\">\n                        <field name=\"NUM\">5<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_colormode_dropdown\" id=\"vl;18Dpgj@J!%7(Km2eP\">\n                        <field name=\"COLORMODE\">255<\/field>\n                        <next>\n                          <block type=\"loops_repeat_ext\" id=\"?%gX^MDipw^CK^rGJ_{g\">\n                            <value name=\"TIMES\">\n                              <block type=\"math_number\" id=\"Q!1!+3Pl=Y-lFsvT^,TJ\">\n                                <field name=\"NUM\">256<\/field>\n                              <\/block>\n                            <\/value>\n                            <statement name=\"DO\">\n                              <block type=\"turtle_pencolor_rgb\" id=\"Ue,30L)6am#JY2WJpiL6\">\n                                <value name=\"RED\">\n                                  <block type=\"variables_get\" id=\"C^y}9dx5b0\/3W-J{d`bt\">\n                                    <field name=\"VAR\" id=\"G.U;E9*F;944WaQm`0=s\" variabletype=\"\">red<\/field>\n                                  <\/block>\n                                <\/value>\n                                <value name=\"GREEN\">\n                                  <block type=\"math_number\" id=\"LWV=(M-+F6OOh*d[fp3R\">\n                                    <field name=\"NUM\">0<\/field>\n                                  <\/block>\n                                <\/value>\n                                <value name=\"BLUE\">\n                                  <block type=\"math_number\" id=\"=_2;i~D+GHT6zbb(!d-H\">\n                                    <field name=\"NUM\">0<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"qOPogohrq^[ELl%9FR1g\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\"6wmjibt{6[nO7$IMrGr:\">\n                                        <field name=\"NUM\">1<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"variables_incdec\" id=\"Je^gO}tm;]u\/UR*V6_{^\">\n                                        <field name=\"OP\">INCREMENT<\/field>\n                                        <field name=\"VAR\" id=\"G.U;E9*F;944WaQm`0=s\" variabletype=\"\">red<\/field>\n                                        <value name=\"DELTA\">\n                                          <block type=\"math_number\" id=\"wW;b]mu|LTT}%%z{sq-v\">\n                                            <field name=\"NUM\">1<\/field>\n                                          <\/block>\n                                        <\/value>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/statement>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  The turtle starts by using a pen colour of black - or rgb(0,0,0) - and each time it draws one pixel, it increases the value of the red channel by 1. The last pixel it draws is rgb(255,0,0) - or bright red. The pixels between gradually more from black to red as more red colour is added to them.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Be careful with your RGB values!<\/h2>\n  <p>Since we are using <bk class=\"lib\">color range 0 to <bk class=\"inner\">255<\/bk><\/bk>, we need to make sure we don't try to use a value outside of this range in our <bk class=\"lib\">set pen color<\/bk> block, otherwise our program will crash with an error.<\/p>\n<\/aside>"
                }
              ],
              "layout":0,
              "title":"Gradients are loops",
              "notes_rendered":"",
              "content_rendered":"<p>\nA <a href=\"https:\/\/en.wikipedia.org\/wiki\/Color_gradient\" target=\"_blank\">colour gradient<\/a> is a gradual transition from one colour to another - a bit like a sunset that goes from orange through to blue. They are often used as a background on slides in a slide deck but are also common in user interfaces as colour selection tools.\n<\/p>\n\n<p>\nGradients can easily be created with the turtle by altering the RGB channels inside a loop. The example below creates a line that is a gradient from black through to red:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-gradient-red\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"G.U;E9*F;944WaQm`0=s\">red<\/variable>\n  <\/variables>\n  <block type=\"turtle_pen\" id=\"wLcW8@dys08BTNG$Tu7#\" x=\"25\" y=\"10\">\n    <field name=\"STATE\">UP<\/field>\n    <next>\n      <block type=\"turtle_backward\" id=\"8Va@7?*3nHkcZKwEy\/G?\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\":$Vn\/;gtFse{kW*X%Z;k\">\n            <field name=\"NUM\">128<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pen\" id=\"#|O2mleq=#H5lJ]Q|BrS\">\n            <field name=\"STATE\">DOWN<\/field>\n            <next>\n              <block type=\"variables_set\" id=\"Fo!pn-ood9`}4CwS=*e*\">\n                <field name=\"VAR\" id=\"G.U;E9*F;944WaQm`0=s\" variabletype=\"\">red<\/field>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\" id=\"7QsY)Tydr~gy0I-jlcCY\">\n                    <field name=\"NUM\">0<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_pensize\" id=\"e@osfYA\/8m-}Dp?Pmo6!\">\n                    <value name=\"SIZE\">\n                      <block type=\"math_number\" id=\"IB[`*cWYuK,Ab]loLu5S\">\n                        <field name=\"NUM\">5<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_colormode_dropdown\" id=\"vl;18Dpgj@J!%7(Km2eP\">\n                        <field name=\"COLORMODE\">255<\/field>\n                        <next>\n                          <block type=\"loops_repeat_ext\" id=\"?%gX^MDipw^CK^rGJ_{g\">\n                            <value name=\"TIMES\">\n                              <block type=\"math_number\" id=\"Q!1!+3Pl=Y-lFsvT^,TJ\">\n                                <field name=\"NUM\">256<\/field>\n                              <\/block>\n                            <\/value>\n                            <statement name=\"DO\">\n                              <block type=\"turtle_pencolor_rgb\" id=\"Ue,30L)6am#JY2WJpiL6\">\n                                <value name=\"RED\">\n                                  <block type=\"variables_get\" id=\"C^y}9dx5b0\/3W-J{d`bt\">\n                                    <field name=\"VAR\" id=\"G.U;E9*F;944WaQm`0=s\" variabletype=\"\">red<\/field>\n                                  <\/block>\n                                <\/value>\n                                <value name=\"GREEN\">\n                                  <block type=\"math_number\" id=\"LWV=(M-+F6OOh*d[fp3R\">\n                                    <field name=\"NUM\">0<\/field>\n                                  <\/block>\n                                <\/value>\n                                <value name=\"BLUE\">\n                                  <block type=\"math_number\" id=\"=_2;i~D+GHT6zbb(!d-H\">\n                                    <field name=\"NUM\">0<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_forward\" id=\"qOPogohrq^[ELl%9FR1g\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"math_number\" id=\"6wmjibt{6[nO7$IMrGr:\">\n                                        <field name=\"NUM\">1<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"variables_incdec\" id=\"Je^gO}tm;]u\/UR*V6_{^\">\n                                        <field name=\"OP\">INCREMENT<\/field>\n                                        <field name=\"VAR\" id=\"G.U;E9*F;944WaQm`0=s\" variabletype=\"\">red<\/field>\n                                        <value name=\"DELTA\">\n                                          <block type=\"math_number\" id=\"wW;b]mu|LTT}%%z{sq-v\">\n                                            <field name=\"NUM\">1<\/field>\n                                          <\/block>\n                                        <\/value>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/statement>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  The turtle starts by using a pen colour of black - or rgb(0,0,0) - and each time it draws one pixel, it increases the value of the red channel by 1. The last pixel it draws is rgb(255,0,0) - or bright red. The pixels between gradually more from black to red as more red colour is added to them.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Be careful with your RGB values!<\/h2>\n  <p>Since we are using <bk class=\"lib\">color range 0 to <bk class=\"inner\">255<\/bk><\/bk>, we need to make sure we don't try to use a value outside of this range in our <bk class=\"lib\">set pen color<\/bk> block, otherwise our program will crash with an error.<\/p>\n<\/aside>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>You can use a similar approach to create gradients through different colours. Here are the RGB values for some standard colours:<\/p>\n\n<table class=\"table table-hover table-bordered\">\n  <thead>\n    <tr><th colspan=\"2\">Colour<\/th> <th>R<\/th> <th>G<\/th> <th>B<\/th><\/tr>\n  <\/thead>\n  <tbody>\n    <tr><td>Black<\/td> <td style=\"background-color:rgb(0,0,0)\"><\/td> <td>0<\/td> <td>0<\/td> <td>0<\/td><\/tr>\n    <tr><td>Red<\/td> <td style=\"background-color:rgb(255,0,0)\"><\/td> <td>255<\/td> <td>0<\/td> <td>0<\/td><\/tr>\n    <tr><td>Green<\/td> <td style=\"background-color:rgb(0,255,0)\"><\/td> <td>0<\/td> <td>255<\/td> <td>0<\/td><\/tr>\n    <tr><td>Blue<\/td> <td style=\"background-color:rgb(0,0,255)\"><\/td> <td>0<\/td> <td>0<\/td> <td>255<\/td><\/tr>\n    <tr><td>Yellow<\/td> <td style=\"background-color:rgb(255,255,0)\"><\/td> <td>255<\/td> <td>255<\/td> <td>0<\/td><\/tr>\n    <tr><td>Magenta<\/td> <td style=\"background-color:rgb(255,0,255)\"><\/td> <td>255<\/td> <td>0<\/td> <td>255<\/td><\/tr>\n    <tr><td>Cyan<\/td> <td style=\"background-color:rgb(0,255,255)\"><\/td> <td>0<\/td> <td>255<\/td> <td>255<\/td><\/tr>\n    <tr><td>White<\/td> <td style=\"background-color:rgb(255,255,255)\"><\/td> <td>255<\/td> <td>255<\/td> <td>255<\/td><\/tr>\n  <\/tbody>\n<\/table>\n\n<p>\nIn the code below, we create a gradient that goes from Cyan to Magenta, and rather than drawing a single line we create a block based on the height typed in by the user.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-block-gradient\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"G.U;E9*F;944WaQm`0=s\">blue<\/variable>\n    <variable type=\"\" id=\"wY?2KVzjbZ@oGRoOh[^!\">green<\/variable>\n    <variable type=\"\" id=\"_,I=ed*,a)HTuO]b%zSK\">height<\/variable>\n    <variable type=\"\" id=\"\/LJv7LL8]96w5M08N]M|\">red<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"m:m!u*|r2C:NJo{(6QvY\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"_,I=ed*,a)HTuO]b%zSK\" variabletype=\"\">height<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"EqpHV@QJ)vm:^GpkxmSC\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"Xoo4)xg:@RS0TA#!QrCS\">\n            <field name=\"TEXT\">How tall is the block?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"uPdqI;(o2FZ44*+y?!nK\">\n        <field name=\"VAR\" id=\"\/LJv7LL8]96w5M08N]M|\" variabletype=\"\">red<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_number\" id=\"w`N,w$W,PWmcXqsNW9W8\">\n            <field name=\"NUM\">0<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"variables_set\" id=\"Fo!pn-ood9`}4CwS=*e*\">\n            <field name=\"VAR\" id=\"wY?2KVzjbZ@oGRoOh[^!\" variabletype=\"\">green<\/field>\n            <value name=\"VALUE\">\n              <block type=\"math_number\" id=\"7QsY)Tydr~gy0I-jlcCY\">\n                <field name=\"NUM\">255<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"variables_set\" id=\"4KA,ZW,pAgbH_w{Dz=Vo\">\n                <field name=\"VAR\" id=\"G.U;E9*F;944WaQm`0=s\" variabletype=\"\">blue<\/field>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\" id=\"Bm:IjNYRO^j}gxm.l;mf\">\n                    <field name=\"NUM\">255<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_colormode_dropdown\" id=\"vl;18Dpgj@J!%7(Km2eP\">\n                    <field name=\"COLORMODE\">255<\/field>\n                    <next>\n                      <block type=\"turtle_speed\" id=\"10!Hd=c~yTm;od`wPTb*\">\n                        <field name=\"SPEED\">fastest<\/field>\n                        <next>\n                          <block type=\"loops_repeat_ext\" id=\"?%gX^MDipw^CK^rGJ_{g\">\n                            <value name=\"TIMES\">\n                              <block type=\"math_number\" id=\"Q!1!+3Pl=Y-lFsvT^,TJ\">\n                                <field name=\"NUM\">52<\/field>\n                              <\/block>\n                            <\/value>\n                            <statement name=\"DO\">\n                              <block type=\"turtle_pencolor_rgb\" id=\"Ue,30L)6am#JY2WJpiL6\">\n                                <value name=\"RED\">\n                                  <block type=\"variables_get\" id=\"C^y}9dx5b0\/3W-J{d`bt\">\n                                    <field name=\"VAR\" id=\"\/LJv7LL8]96w5M08N]M|\" variabletype=\"\">red<\/field>\n                                  <\/block>\n                                <\/value>\n                                <value name=\"GREEN\">\n                                  <block type=\"variables_get\" id=\"eEH]-%O%\/*kc4W({uS+=\">\n                                    <field name=\"VAR\" id=\"wY?2KVzjbZ@oGRoOh[^!\" variabletype=\"\">green<\/field>\n                                  <\/block>\n                                <\/value>\n                                <value name=\"BLUE\">\n                                  <block type=\"variables_get\" id=\"p`Q#hkdTQAW.]lb3S`7f\">\n                                    <field name=\"VAR\" id=\"G.U;E9*F;944WaQm`0=s\" variabletype=\"\">blue<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"uuvH=Pp9Tii2G^eBsK9(\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"qOPogohrq^[ELl%9FR1g\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"variables_get\" id=\"0`zk^fw})9xEkZ)$+;F9\">\n                                            <field name=\"VAR\" id=\"_,I=ed*,a)HTuO]b%zSK\" variabletype=\"\">height<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_backward\" id=\"|R6A.=!V@zdm|:Q+us]j\">\n                                            <value name=\"DISTANCE\">\n                                              <block type=\"variables_get\" id=\"xQt0D?]fyu\/+1.u~waXG\">\n                                                <field name=\"VAR\" id=\"_,I=ed*,a)HTuO]b%zSK\" variabletype=\"\">height<\/field>\n                                              <\/block>\n                                            <\/value>\n                                            <next>\n                                              <block type=\"turtle_turn_simple\" id=\"A~TP(b|t$_H[Qz_yf@Xe\">\n                                                <field name=\"DIRECTION\">RIGHT<\/field>\n                                                <next>\n                                                  <block type=\"turtle_forward\" id=\"DXBUlWB(b~`XA6$|9Z25\">\n                                                    <value name=\"DISTANCE\">\n                                                      <block type=\"math_number\" id=\"i=msMA@nB0uW_t;\/SMWf\">\n                                                        <field name=\"NUM\">1<\/field>\n                                                      <\/block>\n                                                    <\/value>\n                                                    <next>\n                                                      <block type=\"variables_incdec\" id=\"Je^gO}tm;]u\/UR*V6_{^\">\n                                                        <field name=\"OP\">INCREMENT<\/field>\n                                                        <field name=\"VAR\" id=\"\/LJv7LL8]96w5M08N]M|\" variabletype=\"\">red<\/field>\n                                                        <value name=\"DELTA\">\n                                                          <block type=\"math_number\" id=\"wW;b]mu|LTT}%%z{sq-v\">\n                                                            <field name=\"NUM\">5<\/field>\n                                                          <\/block>\n                                                        <\/value>\n                                                        <next>\n                                                          <block type=\"variables_incdec\" id=\"^2!7GAk`SImUZ]l2D.,O\">\n                                                            <field name=\"OP\">DECREMENT<\/field>\n                                                            <field name=\"VAR\" id=\"wY?2KVzjbZ@oGRoOh[^!\" variabletype=\"\">green<\/field>\n                                                            <value name=\"DELTA\">\n                                                              <block type=\"math_number\" id=\"5lJ[Hl];%\/1+I=s9!Q~A\">\n                                                                <field name=\"NUM\">5<\/field>\n                                                              <\/block>\n                                                            <\/value>\n                                                          <\/block>\n                                                        <\/next>\n                                                      <\/block>\n                                                    <\/next>\n                                                  <\/block>\n                                                <\/next>\n                                              <\/block>\n                                            <\/next>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/statement>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\nWe've changed the rate at which our colour changes by increasing and decreasing the RGB values by 5 instead of 1 (and changing how many times our loop repeats), and we've also introduced the <bk class=\"lib\">set speed<\/bk> block, since drawing these many pixels takes a long time!\n<\/p>\n"
                }
              ],
              "layout":0,
              "title":"RGB values in gradients",
              "notes_rendered":"",
              "content_rendered":"<p>You can use a similar approach to create gradients through different colours. Here are the RGB values for some standard colours:<\/p>\n\n<table class=\"table table-hover table-bordered\">\n  <thead>\n    <tr><th colspan=\"2\">Colour<\/th> <th>R<\/th> <th>G<\/th> <th>B<\/th><\/tr>\n  <\/thead>\n  <tbody>\n    <tr><td>Black<\/td> <td style=\"background-color:rgb(0,0,0)\"><\/td> <td>0<\/td> <td>0<\/td> <td>0<\/td><\/tr>\n    <tr><td>Red<\/td> <td style=\"background-color:rgb(255,0,0)\"><\/td> <td>255<\/td> <td>0<\/td> <td>0<\/td><\/tr>\n    <tr><td>Green<\/td> <td style=\"background-color:rgb(0,255,0)\"><\/td> <td>0<\/td> <td>255<\/td> <td>0<\/td><\/tr>\n    <tr><td>Blue<\/td> <td style=\"background-color:rgb(0,0,255)\"><\/td> <td>0<\/td> <td>0<\/td> <td>255<\/td><\/tr>\n    <tr><td>Yellow<\/td> <td style=\"background-color:rgb(255,255,0)\"><\/td> <td>255<\/td> <td>255<\/td> <td>0<\/td><\/tr>\n    <tr><td>Magenta<\/td> <td style=\"background-color:rgb(255,0,255)\"><\/td> <td>255<\/td> <td>0<\/td> <td>255<\/td><\/tr>\n    <tr><td>Cyan<\/td> <td style=\"background-color:rgb(0,255,255)\"><\/td> <td>0<\/td> <td>255<\/td> <td>255<\/td><\/tr>\n    <tr><td>White<\/td> <td style=\"background-color:rgb(255,255,255)\"><\/td> <td>255<\/td> <td>255<\/td> <td>255<\/td><\/tr>\n  <\/tbody>\n<\/table>\n\n<p>\nIn the code below, we create a gradient that goes from Cyan to Magenta, and rather than drawing a single line we create a block based on the height typed in by the user.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-block-gradient\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"G.U;E9*F;944WaQm`0=s\">blue<\/variable>\n    <variable type=\"\" id=\"wY?2KVzjbZ@oGRoOh[^!\">green<\/variable>\n    <variable type=\"\" id=\"_,I=ed*,a)HTuO]b%zSK\">height<\/variable>\n    <variable type=\"\" id=\"\/LJv7LL8]96w5M08N]M|\">red<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"m:m!u*|r2C:NJo{(6QvY\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"_,I=ed*,a)HTuO]b%zSK\" variabletype=\"\">height<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"EqpHV@QJ)vm:^GpkxmSC\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"Xoo4)xg:@RS0TA#!QrCS\">\n            <field name=\"TEXT\">How tall is the block?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"uPdqI;(o2FZ44*+y?!nK\">\n        <field name=\"VAR\" id=\"\/LJv7LL8]96w5M08N]M|\" variabletype=\"\">red<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_number\" id=\"w`N,w$W,PWmcXqsNW9W8\">\n            <field name=\"NUM\">0<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"variables_set\" id=\"Fo!pn-ood9`}4CwS=*e*\">\n            <field name=\"VAR\" id=\"wY?2KVzjbZ@oGRoOh[^!\" variabletype=\"\">green<\/field>\n            <value name=\"VALUE\">\n              <block type=\"math_number\" id=\"7QsY)Tydr~gy0I-jlcCY\">\n                <field name=\"NUM\">255<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"variables_set\" id=\"4KA,ZW,pAgbH_w{Dz=Vo\">\n                <field name=\"VAR\" id=\"G.U;E9*F;944WaQm`0=s\" variabletype=\"\">blue<\/field>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\" id=\"Bm:IjNYRO^j}gxm.l;mf\">\n                    <field name=\"NUM\">255<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_colormode_dropdown\" id=\"vl;18Dpgj@J!%7(Km2eP\">\n                    <field name=\"COLORMODE\">255<\/field>\n                    <next>\n                      <block type=\"turtle_speed\" id=\"10!Hd=c~yTm;od`wPTb*\">\n                        <field name=\"SPEED\">fastest<\/field>\n                        <next>\n                          <block type=\"loops_repeat_ext\" id=\"?%gX^MDipw^CK^rGJ_{g\">\n                            <value name=\"TIMES\">\n                              <block type=\"math_number\" id=\"Q!1!+3Pl=Y-lFsvT^,TJ\">\n                                <field name=\"NUM\">52<\/field>\n                              <\/block>\n                            <\/value>\n                            <statement name=\"DO\">\n                              <block type=\"turtle_pencolor_rgb\" id=\"Ue,30L)6am#JY2WJpiL6\">\n                                <value name=\"RED\">\n                                  <block type=\"variables_get\" id=\"C^y}9dx5b0\/3W-J{d`bt\">\n                                    <field name=\"VAR\" id=\"\/LJv7LL8]96w5M08N]M|\" variabletype=\"\">red<\/field>\n                                  <\/block>\n                                <\/value>\n                                <value name=\"GREEN\">\n                                  <block type=\"variables_get\" id=\"eEH]-%O%\/*kc4W({uS+=\">\n                                    <field name=\"VAR\" id=\"wY?2KVzjbZ@oGRoOh[^!\" variabletype=\"\">green<\/field>\n                                  <\/block>\n                                <\/value>\n                                <value name=\"BLUE\">\n                                  <block type=\"variables_get\" id=\"p`Q#hkdTQAW.]lb3S`7f\">\n                                    <field name=\"VAR\" id=\"G.U;E9*F;944WaQm`0=s\" variabletype=\"\">blue<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"uuvH=Pp9Tii2G^eBsK9(\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"qOPogohrq^[ELl%9FR1g\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"variables_get\" id=\"0`zk^fw})9xEkZ)$+;F9\">\n                                            <field name=\"VAR\" id=\"_,I=ed*,a)HTuO]b%zSK\" variabletype=\"\">height<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_backward\" id=\"|R6A.=!V@zdm|:Q+us]j\">\n                                            <value name=\"DISTANCE\">\n                                              <block type=\"variables_get\" id=\"xQt0D?]fyu\/+1.u~waXG\">\n                                                <field name=\"VAR\" id=\"_,I=ed*,a)HTuO]b%zSK\" variabletype=\"\">height<\/field>\n                                              <\/block>\n                                            <\/value>\n                                            <next>\n                                              <block type=\"turtle_turn_simple\" id=\"A~TP(b|t$_H[Qz_yf@Xe\">\n                                                <field name=\"DIRECTION\">RIGHT<\/field>\n                                                <next>\n                                                  <block type=\"turtle_forward\" id=\"DXBUlWB(b~`XA6$|9Z25\">\n                                                    <value name=\"DISTANCE\">\n                                                      <block type=\"math_number\" id=\"i=msMA@nB0uW_t;\/SMWf\">\n                                                        <field name=\"NUM\">1<\/field>\n                                                      <\/block>\n                                                    <\/value>\n                                                    <next>\n                                                      <block type=\"variables_incdec\" id=\"Je^gO}tm;]u\/UR*V6_{^\">\n                                                        <field name=\"OP\">INCREMENT<\/field>\n                                                        <field name=\"VAR\" id=\"\/LJv7LL8]96w5M08N]M|\" variabletype=\"\">red<\/field>\n                                                        <value name=\"DELTA\">\n                                                          <block type=\"math_number\" id=\"wW;b]mu|LTT}%%z{sq-v\">\n                                                            <field name=\"NUM\">5<\/field>\n                                                          <\/block>\n                                                        <\/value>\n                                                        <next>\n                                                          <block type=\"variables_incdec\" id=\"^2!7GAk`SImUZ]l2D.,O\">\n                                                            <field name=\"OP\">DECREMENT<\/field>\n                                                            <field name=\"VAR\" id=\"wY?2KVzjbZ@oGRoOh[^!\" variabletype=\"\">green<\/field>\n                                                            <value name=\"DELTA\">\n                                                              <block type=\"math_number\" id=\"5lJ[Hl];%\/1+I=s9!Q~A\">\n                                                                <field name=\"NUM\">5<\/field>\n                                                              <\/block>\n                                                            <\/value>\n                                                          <\/block>\n                                                        <\/next>\n                                                      <\/block>\n                                                    <\/next>\n                                                  <\/block>\n                                                <\/next>\n                                              <\/block>\n                                            <\/next>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/statement>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\nWe've changed the rate at which our colour changes by increasing and decreasing the RGB values by 5 instead of 1 (and changing how many times our loop repeats), and we've also introduced the <bk class=\"lib\">set speed<\/bk> block, since drawing these many pixels takes a long time!\n<\/p>\n",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Ring of fire",
              "purpose":"",
              "problem":"aca-blockly-logo-ring-of-fire",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Baby you're a firework!",
              "purpose":"",
              "problem":"aca-blockly-logo-firework",
              "type":1
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Firework spinner",
              "purpose":"",
              "problem":"aca-blockly-logo-firework-spinner",
              "type":1
            }
          ],
          "title":"Making gradients"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Fireworks display",
              "purpose":"",
              "problem":"aca-blockly-logo-fireworks-display",
              "type":1
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  Excellent work on finishing the project, and the course! You've learnt how you can use code to solve a range of maths problems, and how maths helps computers determine things like positioning and colour on a screen.\n<\/p>\n\n<p>\n  We hope you enjoyed this course, and can't wait to see what else you create as you learn more through our other code challenges.\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Congratulations!",
              "notes_rendered":"",
              "content_rendered":"<p>\n  Excellent work on finishing the project, and the course! You've learnt how you can use code to solve a range of maths problems, and how maths helps computers determine things like positioning and colour on a screen.\n<\/p>\n\n<p>\n  We hope you enjoyed this course, and can't wait to see what else you create as you learn more through our other code challenges.\n<\/p>",
              "purpose":"",
              "type":0
            }
          ],
          "title":"Fireworks Display"
        },
        {
          "slides":[
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  <strong>What's this?! You thought you were finished?<\/strong>\n<\/p>\n\n<p>\n  You may have finished the project, but if you're looking for something else to experiment with, we thought it would be fun to learn about the <bk class=\"math\">random<\/bk> block.\n<\/p>\n\n<p>\n  The random block allows you to have the computer generate a random number from a range of values. This is a fun way to make your program automatically change each time you run it - a fun way to make your fireworks different each time!\n<\/p>\n\n<p>\n  The example below draws a single firework, but the number of spokes on the firework changes to a random number between 3 and 10 each time the program is run.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-random\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"IGsbBLvx[[6b^n#l!%@_\">distance<\/variable>\n    <variable type=\"\" id=\"CBqB5GVoy)rQ]90s*l@s\">green<\/variable>\n    <variable type=\"\" id=\"U:b{2D$TZRRimgzOoUbv\">spokes<\/variable>\n    <variable type=\"\" id=\"*iLQM;t;2Tv(EME_iAGP\">spokes_angle<\/variable>\n  <\/variables>\n  <block type=\"turtle_bgcolor_rgb\" id=\"d3Y(zt}#lV^yGSEJ(L`G\" x=\"0\" y=\"18\">\n    <value name=\"RED\">\n      <block type=\"math_number\" id=\"vR*HyZ.X,|\/OhEFk7bK)\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <value name=\"GREEN\">\n      <block type=\"math_number\" id=\"VM*E175aQ99PX_\/{i:z0\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <value name=\"BLUE\">\n      <block type=\"math_number\" id=\"}6QPs%z)xP`|h.E+0QUT\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"zv5Da7?21lEMV|cJ)}|I\">\n        <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_random_int\" id=\"9B.sFx#uZnn)\/V6cS!tu\">\n            <value name=\"FROM\">\n              <block type=\"math_number\" id=\"82Q??5C8=y431Cw%r\/1m\">\n                <field name=\"NUM\">3<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"TO\">\n              <block type=\"math_number\" id=\"m6DWRER*.b[Ta[CwEF?_\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"variables_set\" id=\"7V[-fLA,[u~ouaF*P6z`\">\n            <field name=\"VAR\" id=\"*iLQM;t;2Tv(EME_iAGP\" variabletype=\"\">spokes_angle<\/field>\n            <value name=\"VALUE\">\n              <block type=\"math_arithmetic\" id=\"p{\/@g7eeG$Y[e{D7.}q0\">\n                <field name=\"OP\">DIVIDE<\/field>\n                <value name=\"A\">\n                  <block type=\"math_number\" id=\"yva=mNlUYOL*5)Ukz{I1\">\n                    <field name=\"NUM\">360<\/field>\n                  <\/block>\n                <\/value>\n                <value name=\"B\">\n                  <block type=\"variables_get\" id=\"5SL?{Pw)=B+4[c$[P8jr\">\n                    <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"variables_set\" id=\"%![XjCi7:XVg_UBXhX)W\">\n                <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\" id=\"#QEpzErzO^%!Q1`F`_3l\">\n                    <field name=\"NUM\">30<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"variables_set\" id=\"`F,p0JuE0)qbtKr,Ul2J\">\n                    <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\" id=\"hS)Xsv:FY^6-!2Sf=JLu\">\n                        <field name=\"NUM\">0<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"loops_repeat_ext\" id=\"UbO{S?.4N_2D5sI09xz1\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\" id=\"Ha~cQ!:c{Ug#7eOeb_I~\">\n                            <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n                          <\/block>\n                        <\/value>\n                        <statement name=\"DO\">\n                          <block type=\"turtle_pencolor_rgb\" id=\"EZD0MwW1e3TQm!u{};$H\">\n                            <value name=\"RED\">\n                              <block type=\"math_number\" id=\"R=p-TLlGgw6?[[e`w1Mj\">\n                                <field name=\"NUM\">255<\/field>\n                              <\/block>\n                            <\/value>\n                            <value name=\"GREEN\">\n                              <block type=\"variables_get\" id=\"{eEK07IxU(ca$:]i{CGI\">\n                                <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                              <\/block>\n                            <\/value>\n                            <value name=\"BLUE\">\n                              <block type=\"math_number\" id=\"9cB5wxmuVJ*B99~84gPe\">\n                                <field name=\"NUM\">0<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"WEX}}Q#GmuR\/tA`d@aEI\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"variables_get\" id=\"$ij`!YHZW~kx8iEF2=tT\">\n                                    <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_backward\" id=\"OT?:|f3F|q[_Uhv:^AbC\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"variables_get\" id=\"yEMItDLjJ53qvKvqROi|\">\n                                        <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_turn\" id=\"d=?s#pGpRo5t7PMv1m([\">\n                                        <field name=\"DIRECTION\">LEFT<\/field>\n                                        <value name=\"ANGLE\">\n                                          <block type=\"variables_get\" id=\"00m.w.wfq:q?]x*b{DTD\">\n                                            <field name=\"VAR\" id=\"*iLQM;t;2Tv(EME_iAGP\" variabletype=\"\">spokes_angle<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"variables_incdec\" id=\"e\/*kW_+s;q5O01W%B#+`\">\n                                            <field name=\"OP\">INCREMENT<\/field>\n                                            <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                                            <value name=\"DELTA\">\n                                              <block type=\"math_number\" id=\"q7CvJ5%=[n.Tu\/!HLlyX\">\n                                                <field name=\"NUM\">25<\/field>\n                                              <\/block>\n                                            <\/value>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/statement>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  Run the example program a few times to see how it works!\n<\/p>"
                }
              ],
              "layout":0,
              "title":"The random block",
              "notes_rendered":"",
              "content_rendered":"<p>\n  <strong>What's this?! You thought you were finished?<\/strong>\n<\/p>\n\n<p>\n  You may have finished the project, but if you're looking for something else to experiment with, we thought it would be fun to learn about the <bk class=\"math\">random<\/bk> block.\n<\/p>\n\n<p>\n  The random block allows you to have the computer generate a random number from a range of values. This is a fun way to make your program automatically change each time you run it - a fun way to make your fireworks different each time!\n<\/p>\n\n<p>\n  The example below draws a single firework, but the number of spokes on the firework changes to a random number between 3 and 10 each time the program is run.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-random\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"IGsbBLvx[[6b^n#l!%@_\">distance<\/variable>\n    <variable type=\"\" id=\"CBqB5GVoy)rQ]90s*l@s\">green<\/variable>\n    <variable type=\"\" id=\"U:b{2D$TZRRimgzOoUbv\">spokes<\/variable>\n    <variable type=\"\" id=\"*iLQM;t;2Tv(EME_iAGP\">spokes_angle<\/variable>\n  <\/variables>\n  <block type=\"turtle_bgcolor_rgb\" id=\"d3Y(zt}#lV^yGSEJ(L`G\" x=\"0\" y=\"18\">\n    <value name=\"RED\">\n      <block type=\"math_number\" id=\"vR*HyZ.X,|\/OhEFk7bK)\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <value name=\"GREEN\">\n      <block type=\"math_number\" id=\"VM*E175aQ99PX_\/{i:z0\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <value name=\"BLUE\">\n      <block type=\"math_number\" id=\"}6QPs%z)xP`|h.E+0QUT\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"zv5Da7?21lEMV|cJ)}|I\">\n        <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_random_int\" id=\"9B.sFx#uZnn)\/V6cS!tu\">\n            <value name=\"FROM\">\n              <block type=\"math_number\" id=\"82Q??5C8=y431Cw%r\/1m\">\n                <field name=\"NUM\">3<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"TO\">\n              <block type=\"math_number\" id=\"m6DWRER*.b[Ta[CwEF?_\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"variables_set\" id=\"7V[-fLA,[u~ouaF*P6z`\">\n            <field name=\"VAR\" id=\"*iLQM;t;2Tv(EME_iAGP\" variabletype=\"\">spokes_angle<\/field>\n            <value name=\"VALUE\">\n              <block type=\"math_arithmetic\" id=\"p{\/@g7eeG$Y[e{D7.}q0\">\n                <field name=\"OP\">DIVIDE<\/field>\n                <value name=\"A\">\n                  <block type=\"math_number\" id=\"yva=mNlUYOL*5)Ukz{I1\">\n                    <field name=\"NUM\">360<\/field>\n                  <\/block>\n                <\/value>\n                <value name=\"B\">\n                  <block type=\"variables_get\" id=\"5SL?{Pw)=B+4[c$[P8jr\">\n                    <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"variables_set\" id=\"%![XjCi7:XVg_UBXhX)W\">\n                <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\" id=\"#QEpzErzO^%!Q1`F`_3l\">\n                    <field name=\"NUM\">30<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"variables_set\" id=\"`F,p0JuE0)qbtKr,Ul2J\">\n                    <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\" id=\"hS)Xsv:FY^6-!2Sf=JLu\">\n                        <field name=\"NUM\">0<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"loops_repeat_ext\" id=\"UbO{S?.4N_2D5sI09xz1\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\" id=\"Ha~cQ!:c{Ug#7eOeb_I~\">\n                            <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n                          <\/block>\n                        <\/value>\n                        <statement name=\"DO\">\n                          <block type=\"turtle_pencolor_rgb\" id=\"EZD0MwW1e3TQm!u{};$H\">\n                            <value name=\"RED\">\n                              <block type=\"math_number\" id=\"R=p-TLlGgw6?[[e`w1Mj\">\n                                <field name=\"NUM\">255<\/field>\n                              <\/block>\n                            <\/value>\n                            <value name=\"GREEN\">\n                              <block type=\"variables_get\" id=\"{eEK07IxU(ca$:]i{CGI\">\n                                <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                              <\/block>\n                            <\/value>\n                            <value name=\"BLUE\">\n                              <block type=\"math_number\" id=\"9cB5wxmuVJ*B99~84gPe\">\n                                <field name=\"NUM\">0<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"WEX}}Q#GmuR\/tA`d@aEI\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"variables_get\" id=\"$ij`!YHZW~kx8iEF2=tT\">\n                                    <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_backward\" id=\"OT?:|f3F|q[_Uhv:^AbC\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"variables_get\" id=\"yEMItDLjJ53qvKvqROi|\">\n                                        <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_turn\" id=\"d=?s#pGpRo5t7PMv1m([\">\n                                        <field name=\"DIRECTION\">LEFT<\/field>\n                                        <value name=\"ANGLE\">\n                                          <block type=\"variables_get\" id=\"00m.w.wfq:q?]x*b{DTD\">\n                                            <field name=\"VAR\" id=\"*iLQM;t;2Tv(EME_iAGP\" variabletype=\"\">spokes_angle<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"variables_incdec\" id=\"e\/*kW_+s;q5O01W%B#+`\">\n                                            <field name=\"OP\">INCREMENT<\/field>\n                                            <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                                            <value name=\"DELTA\">\n                                              <block type=\"math_number\" id=\"q7CvJ5%=[n.Tu\/!HLlyX\">\n                                                <field name=\"NUM\">25<\/field>\n                                              <\/block>\n                                            <\/value>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/statement>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  Run the example program a few times to see how it works!\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "rows":[
                {
                  "left":"<p>\n  You can use the <bk class=\"math\">random<\/bk> block as many times as you like in your program. Here's the same program again, but this time we randomly generate the size of the firework too!\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-random-multi\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"IGsbBLvx[[6b^n#l!%@_\">distance<\/variable>\n    <variable type=\"\" id=\"CBqB5GVoy)rQ]90s*l@s\">green<\/variable>\n    <variable type=\"\" id=\"U:b{2D$TZRRimgzOoUbv\">spokes<\/variable>\n    <variable type=\"\" id=\"*iLQM;t;2Tv(EME_iAGP\">spokes_angle<\/variable>\n  <\/variables>\n  <block type=\"turtle_bgcolor_rgb\" id=\"d3Y(zt}#lV^yGSEJ(L`G\" x=\"0\" y=\"18\">\n    <value name=\"RED\">\n      <block type=\"math_number\" id=\"vR*HyZ.X,|\/OhEFk7bK)\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <value name=\"GREEN\">\n      <block type=\"math_number\" id=\"VM*E175aQ99PX_\/{i:z0\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <value name=\"BLUE\">\n      <block type=\"math_number\" id=\"}6QPs%z)xP`|h.E+0QUT\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"zv5Da7?21lEMV|cJ)}|I\">\n        <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_random_int\" id=\"9B.sFx#uZnn)\/V6cS!tu\">\n            <value name=\"FROM\">\n              <block type=\"math_number\" id=\"82Q??5C8=y431Cw%r\/1m\">\n                <field name=\"NUM\">3<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"TO\">\n              <block type=\"math_number\" id=\"m6DWRER*.b[Ta[CwEF?_\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"variables_set\" id=\"7V[-fLA,[u~ouaF*P6z`\">\n            <field name=\"VAR\" id=\"*iLQM;t;2Tv(EME_iAGP\" variabletype=\"\">spokes_angle<\/field>\n            <value name=\"VALUE\">\n              <block type=\"math_arithmetic\" id=\"p{\/@g7eeG$Y[e{D7.}q0\">\n                <field name=\"OP\">DIVIDE<\/field>\n                <value name=\"A\">\n                  <block type=\"math_number\" id=\"yva=mNlUYOL*5)Ukz{I1\">\n                    <field name=\"NUM\">360<\/field>\n                  <\/block>\n                <\/value>\n                <value name=\"B\">\n                  <block type=\"variables_get\" id=\"5SL?{Pw)=B+4[c$[P8jr\">\n                    <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"variables_set\" id=\"%![XjCi7:XVg_UBXhX)W\">\n                <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                <value name=\"VALUE\">\n                  <block type=\"math_random_int\" id=\"9a.sFx#uZnn)\/V6cS!tu\">\n                    <value name=\"FROM\">\n                      <block type=\"math_number\" id=\"82d??5C8=y431Cw%r\/1m\">\n                        <field name=\"NUM\">10<\/field>\n                      <\/block>\n                    <\/value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\" id=\"m9DWRER*.b[Ta[CwEF?_\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"variables_set\" id=\"`F,p0JuE0)qbtKr,Ul2J\">\n                    <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\" id=\"hS)Xsv:FY^6-!2Sf=JLu\">\n                        <field name=\"NUM\">0<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"loops_repeat_ext\" id=\"UbO{S?.4N_2D5sI09xz1\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\" id=\"Ha~cQ!:c{Ug#7eOeb_I~\">\n                            <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n                          <\/block>\n                        <\/value>\n                        <statement name=\"DO\">\n                          <block type=\"turtle_pencolor_rgb\" id=\"EZD0MwW1e3TQm!u{};$H\">\n                            <value name=\"RED\">\n                              <block type=\"math_number\" id=\"R=p-TLlGgw6?[[e`w1Mj\">\n                                <field name=\"NUM\">255<\/field>\n                              <\/block>\n                            <\/value>\n                            <value name=\"GREEN\">\n                              <block type=\"variables_get\" id=\"{eEK07IxU(ca$:]i{CGI\">\n                                <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                              <\/block>\n                            <\/value>\n                            <value name=\"BLUE\">\n                              <block type=\"math_number\" id=\"9cB5wxmuVJ*B99~84gPe\">\n                                <field name=\"NUM\">0<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"WEX}}Q#GmuR\/tA`d@aEI\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"variables_get\" id=\"$ij`!YHZW~kx8iEF2=tT\">\n                                    <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_backward\" id=\"OT?:|f3F|q[_Uhv:^AbC\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"variables_get\" id=\"yEMItDLjJ53qvKvqROi|\">\n                                        <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_turn\" id=\"d=?s#pGpRo5t7PMv1m([\">\n                                        <field name=\"DIRECTION\">LEFT<\/field>\n                                        <value name=\"ANGLE\">\n                                          <block type=\"variables_get\" id=\"00m.w.wfq:q?]x*b{DTD\">\n                                            <field name=\"VAR\" id=\"*iLQM;t;2Tv(EME_iAGP\" variabletype=\"\">spokes_angle<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"variables_incdec\" id=\"e\/*kW_+s;q5O01W%B#+`\">\n                                            <field name=\"OP\">INCREMENT<\/field>\n                                            <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                                            <value name=\"DELTA\">\n                                              <block type=\"math_number\" id=\"q7CvJ5%=[n.Tu\/!HLlyX\">\n                                                <field name=\"NUM\">25<\/field>\n                                              <\/block>\n                                            <\/value>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/statement>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  By adding a bit of randomness to your program, you could have fireworks in your fireworks display that have different numbers of spokes and can be a whole range of different sizes!\n<\/p>"
                }
              ],
              "layout":0,
              "title":"Lots of randomness",
              "notes_rendered":"",
              "content_rendered":"<p>\n  You can use the <bk class=\"math\">random<\/bk> block as many times as you like in your program. Here's the same program again, but this time we randomly generate the size of the firework too!\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-random-multi\"><code data-lang=\"blockly\" data-workspace-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"IGsbBLvx[[6b^n#l!%@_\">distance<\/variable>\n    <variable type=\"\" id=\"CBqB5GVoy)rQ]90s*l@s\">green<\/variable>\n    <variable type=\"\" id=\"U:b{2D$TZRRimgzOoUbv\">spokes<\/variable>\n    <variable type=\"\" id=\"*iLQM;t;2Tv(EME_iAGP\">spokes_angle<\/variable>\n  <\/variables>\n  <block type=\"turtle_bgcolor_rgb\" id=\"d3Y(zt}#lV^yGSEJ(L`G\" x=\"0\" y=\"18\">\n    <value name=\"RED\">\n      <block type=\"math_number\" id=\"vR*HyZ.X,|\/OhEFk7bK)\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <value name=\"GREEN\">\n      <block type=\"math_number\" id=\"VM*E175aQ99PX_\/{i:z0\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <value name=\"BLUE\">\n      <block type=\"math_number\" id=\"}6QPs%z)xP`|h.E+0QUT\">\n        <field name=\"NUM\">0<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"zv5Da7?21lEMV|cJ)}|I\">\n        <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_random_int\" id=\"9B.sFx#uZnn)\/V6cS!tu\">\n            <value name=\"FROM\">\n              <block type=\"math_number\" id=\"82Q??5C8=y431Cw%r\/1m\">\n                <field name=\"NUM\">3<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"TO\">\n              <block type=\"math_number\" id=\"m6DWRER*.b[Ta[CwEF?_\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"variables_set\" id=\"7V[-fLA,[u~ouaF*P6z`\">\n            <field name=\"VAR\" id=\"*iLQM;t;2Tv(EME_iAGP\" variabletype=\"\">spokes_angle<\/field>\n            <value name=\"VALUE\">\n              <block type=\"math_arithmetic\" id=\"p{\/@g7eeG$Y[e{D7.}q0\">\n                <field name=\"OP\">DIVIDE<\/field>\n                <value name=\"A\">\n                  <block type=\"math_number\" id=\"yva=mNlUYOL*5)Ukz{I1\">\n                    <field name=\"NUM\">360<\/field>\n                  <\/block>\n                <\/value>\n                <value name=\"B\">\n                  <block type=\"variables_get\" id=\"5SL?{Pw)=B+4[c$[P8jr\">\n                    <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"variables_set\" id=\"%![XjCi7:XVg_UBXhX)W\">\n                <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                <value name=\"VALUE\">\n                  <block type=\"math_random_int\" id=\"9a.sFx#uZnn)\/V6cS!tu\">\n                    <value name=\"FROM\">\n                      <block type=\"math_number\" id=\"82d??5C8=y431Cw%r\/1m\">\n                        <field name=\"NUM\">10<\/field>\n                      <\/block>\n                    <\/value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\" id=\"m9DWRER*.b[Ta[CwEF?_\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"variables_set\" id=\"`F,p0JuE0)qbtKr,Ul2J\">\n                    <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\" id=\"hS)Xsv:FY^6-!2Sf=JLu\">\n                        <field name=\"NUM\">0<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"loops_repeat_ext\" id=\"UbO{S?.4N_2D5sI09xz1\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\" id=\"Ha~cQ!:c{Ug#7eOeb_I~\">\n                            <field name=\"VAR\" id=\"U:b{2D$TZRRimgzOoUbv\" variabletype=\"\">spokes<\/field>\n                          <\/block>\n                        <\/value>\n                        <statement name=\"DO\">\n                          <block type=\"turtle_pencolor_rgb\" id=\"EZD0MwW1e3TQm!u{};$H\">\n                            <value name=\"RED\">\n                              <block type=\"math_number\" id=\"R=p-TLlGgw6?[[e`w1Mj\">\n                                <field name=\"NUM\">255<\/field>\n                              <\/block>\n                            <\/value>\n                            <value name=\"GREEN\">\n                              <block type=\"variables_get\" id=\"{eEK07IxU(ca$:]i{CGI\">\n                                <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                              <\/block>\n                            <\/value>\n                            <value name=\"BLUE\">\n                              <block type=\"math_number\" id=\"9cB5wxmuVJ*B99~84gPe\">\n                                <field name=\"NUM\">0<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"WEX}}Q#GmuR\/tA`d@aEI\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"variables_get\" id=\"$ij`!YHZW~kx8iEF2=tT\">\n                                    <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_backward\" id=\"OT?:|f3F|q[_Uhv:^AbC\">\n                                    <value name=\"DISTANCE\">\n                                      <block type=\"variables_get\" id=\"yEMItDLjJ53qvKvqROi|\">\n                                        <field name=\"VAR\" id=\"IGsbBLvx[[6b^n#l!%@_\" variabletype=\"\">distance<\/field>\n                                      <\/block>\n                                    <\/value>\n                                    <next>\n                                      <block type=\"turtle_turn\" id=\"d=?s#pGpRo5t7PMv1m([\">\n                                        <field name=\"DIRECTION\">LEFT<\/field>\n                                        <value name=\"ANGLE\">\n                                          <block type=\"variables_get\" id=\"00m.w.wfq:q?]x*b{DTD\">\n                                            <field name=\"VAR\" id=\"*iLQM;t;2Tv(EME_iAGP\" variabletype=\"\">spokes_angle<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"variables_incdec\" id=\"e\/*kW_+s;q5O01W%B#+`\">\n                                            <field name=\"OP\">INCREMENT<\/field>\n                                            <field name=\"VAR\" id=\"CBqB5GVoy)rQ]90s*l@s\" variabletype=\"\">green<\/field>\n                                            <value name=\"DELTA\">\n                                              <block type=\"math_number\" id=\"q7CvJ5%=[n.Tu\/!HLlyX\">\n                                                <field name=\"NUM\">25<\/field>\n                                              <\/block>\n                                            <\/value>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/statement>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>\n  By adding a bit of randomness to your program, you could have fireworks in your fireworks display that have different numbers of spokes and can be a whole range of different sizes!\n<\/p>",
              "purpose":"",
              "type":0
            },
            {
              "feedback_style":0,
              "layout":0,
              "title":"Question: Fireworks playground",
              "purpose":"",
              "problem":"aca-blockly-logo-fireworks-playground",
              "type":1
            }
          ],
          "title":"Extension: Randomness"
        }
      ],
      "title":"Project 2: Fireworks display",
      "label":"aca-blockly-maths-yr7-8",
      "updated_at":"2017-11-15T06:40:27.701589+00:00",
      "concepts":[

      ]
    }
  ],
  "problems":[
    {
      "language":1,
      "title":"Step up",
      "notes":"",
      "updated_at":"2017-07-25T13:06:49.579518+00:00",
      "label":"aca-blockly-logo-step-up",
      "content":"<p>\n  Write a program that draws two steps of any height and width, depending on what the user types in.\n<\/p>\n<p>\n  The user will be asked for a step height then width, and your program should use those input values (in turtle steps) to draw the steps.\n<\/p>\n\n<p>\n  The steps will go up and to the right of the screen, as shown in the example below.\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Step height: <\/o><i>10<\/i>\n<o>Step width: <\/o><i>30<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"5634eb88-6de1-11e7-b0c6-22000afd18d3\"]\n[\"create_shape\",\"563500e6-6de1-11e7-b0c6-22000afd18d3\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"pensize\":1,\"filled\":true}]\n[\"input_begin\",\"Height: \"]\n[\"input_end\"]\n[\"input_begin\",\"Width: \"]\n[\"input_end\"]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",30]\n[\"forward\",30]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  Here's another example.\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Height: <\/o><i>40<\/i>\n<o>Width: <\/o><i>15<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"8e062a54-6de1-11e7-9816-22000a150559\"]\n[\"create_shape\",\"8e063d5a-6de1-11e7-9816-22000a150559\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"fillcolor\":[0,0,0],\"filled\":true,\"pencolor\":[0,0,0]}]\n[\"input_begin\",\"Height: \"]\n[\"input_end\"]\n[\"input_begin\",\"Width: \"]\n[\"input_end\"]\n[\"left\",1.5707963267948966]\n[\"forward\",40]\n[\"left\",-1.5707963267948966]\n[\"forward\",15]\n[\"left\",1.5707963267948966]\n[\"forward\",40]\n[\"left\",-1.5707963267948966]\n[\"forward\",15]\n[\"left\",-1.5707963267948966]\n[\"forward\",40]\n[\"forward\",40]\n[\"left\",-1.5707963267948966]\n[\"forward\",15]\n[\"forward\",15]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  Make sure you test different heights and widths so you are confident your code is correct.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>Remember that you need to close the base of the steps, so the turtle will need to move some extra distance at the end of your drawing.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[
        "input"
      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"io_ask_num\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Fair and square",
      "notes":"<p>The tricky part of working with the turtle is imagining the instructions from the perspective of the turtle. To draw a square you need to turn right after drawing each side to make the corner of the square.<\/p>\n\n<p>If you turn left instead of right, then the position of the square is different so your code won't be correct. For the turtle to start in the top left corner, we need to turn right after we draw our first side.<\/p>",
      "updated_at":"2017-07-25T13:06:15.711773+00:00",
      "label":"aca-blockly-logo-square",
      "content":"<p>\n  Write a Turtle program to draw a square, with each side being 100 turtle steps long.\n  The output of your program should look like this:\n<\/p>\n\n<div class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"2b8deca2-19d3-11e7-a512-22000af3105f\"]\n[\"create_shape\",\"2b8e067e-19d3-11e7-a512-22000af3105f\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true,\"pensize\":1}]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"end_animation\"]\n<\/code><\/div>\n\n<p>The <em>top left corner<\/em> of the square is where the turtle starts.<\/p>\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":"<p>The tricky part of working with the turtle is imagining the instructions from the perspective of the turtle. To draw a square you need to turn right after drawing each side to make the corner of the square.<\/p>\n\n<p>If you turn left instead of right, then the position of the square is different so your code won't be correct. For the turtle to start in the top left corner, we need to turn right after we draw our first side.<\/p>"
    },
    {
      "language":1,
      "title":"Any square",
      "notes":"",
      "updated_at":"2017-07-25T13:06:32.636090+00:00",
      "label":"aca-blockly-logo-any-square",
      "content":"<p>\n  Write a program which draws a square of any size, depending on what the user types in.\n<\/p>\n<p>\n  The user will type a side length, and your program should use that side length input (in turtle steps) to draw the square.\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Side length: <\/o><i>100<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"b3606392-6840-11e7-b9b5-22000afc90c9\"]\n[\"create_shape\",\"b36073fa-6840-11e7-b9b5-22000afc90c9\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0]}]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The bottom left corner should be in the center of the page, where the turtle starts.\n<\/p>\n\n<p>\n  Here's an example where the user has chosen a much smaller side length.\n<\/p>\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Side length: <\/o><i>30<\/i>\n<o><\/o>\n<\/code><\/pre>\n<div class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"c630d100-6840-11e7-954c-22000af41688\"]\n[\"create_shape\",\"c630e582-6840-11e7-954c-22000af41688\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"fillcolor\":[0,0,0],\"filled\":true,\"pencolor\":[0,0,0]}]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"end_animation\"]\n<\/code><\/div>\n\n<p>\n  You should test your program with a whole range of different sizes!\n  How big can the square be before it goes off the edge of the page?\n<\/p>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>Remember that you will find the <bk class=\"math\">ask<\/bk> block in the Input menu.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[
        "input"
      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"io_ask_num\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Get rect!",
      "notes":"<p>The only difference between a rectangle and a square is the different height and width lengths. You need to use the correct values, and put them in the right order, starting with the width, then the height, then the width, and finally the height again.<\/p>\n\n<p>We've changed the starting position of the turtle in this question too, so that you're still using a 90 degree turn, but this time you're turning left, not right.<\/p>",
      "updated_at":"2017-07-25T13:06:23.855294+00:00",
      "label":"aca-blockly-logo-rectangle",
      "content":"<p>\n  Write a Turtle program to draw a rectangle, with a width (top and bottom sides) of 120 turtle steps, and height (the left and right sides) or 50 turtle steps.\n  The output of your program should look like this:\n<\/p>\n\n<div class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"c8a5f2c0-6765-11e7-8b40-22000afc90c9\"]\n[\"create_shape\",\"c8a602f6-6765-11e7-8b40-22000afc90c9\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1}]\n[\"forward\",120]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",120]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"end_animation\"]\n<\/code><\/div>\n\n<p>The <em>bottom left corner<\/em> of the rectangle is where the turtle starts.<\/p>\n",
      "options":"{\"variables\":false}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":"<p>The only difference between a rectangle and a square is the differing height and width. You need to use the correct values, and put them in the right order, starting with the width, then the height, then the width, and finally the height again.<\/p>\n\n<p>We've changed the starting position of the turtle in this question too, so that you're still using a 90 degree turn, but this time you're turning left, not right.<\/p>"
    },
    {
      "language":1,
      "title":"Any rectangle",
      "notes":"",
      "updated_at":"2017-07-25T13:06:40.969898+00:00",
      "label":"aca-blockly-logo-any-rectangle",
      "content":"<p>\n  Write a program which draws a rectangle of any height and width, depending on what the user types in.\n<\/p>\n<p>\n  The user will be asked for a height then a width, and your program should use those input values (in turtle steps) to draw the rectangle. Here's an example of a tall rectangle.\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Height: <\/o><i>80<\/i>\n<o>Width: <\/o><i>40<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"7f2dd662-6846-11e7-9970-22000afd18d3\"]\n[\"create_shape\",\"7f2de896-6846-11e7-9970-22000afd18d3\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pencolor\":[0,0,0],\"pensize\":1,\"fillcolor\":[0,0,0]}]\n[\"input_begin\",\"Height: \"]\n[\"input_end\"]\n[\"input_begin\",\"Width: \"]\n[\"input_end\"]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",80]\n[\"left\",1.5707963267948966]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",80]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The bottom left corner should be in the center of the page, where the turtle starts.\n<\/p>\n\n<p>\n  Here's an example where the user has chosen a wide rectangle.\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Height: <\/o><i>30<\/i>\n<o>Width: <\/o><i>90<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"3c7c6ca6-6847-11e7-92f8-22000afc90c9\"]\n[\"create_shape\",\"3c7c7f2a-6847-11e7-92f8-22000afc90c9\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"filled\":true,\"pencolor\":[0,0,0],\"pensize\":1}]\n[\"input_begin\",\"Height: \"]\n[\"input_end\"]\n[\"input_begin\",\"Width: \"]\n[\"input_end\"]\n[\"forward\",90]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",90]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  Make sure you test different heights and widths so you are confident your code is correct.\n<\/p>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[
        "input"
      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"io_ask_num\",\"turtle_forward\",\"turtle_turn_simple\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Dashed line",
      "notes":"",
      "updated_at":"2017-07-25T13:08:48.127214+00:00",
      "label":"aca-blockly-logo-dashed-line",
      "content":"<p>\n  We'll put our understanding of pen up and down to the test by drawing a dashed line.\n<\/p>\n\n<p>\n  Write a program that asks the user <code data-lang=\"py3 lit\">How long is the line?<\/code> (in turtle steps), then draws a dashed line made up of five parts - 3 with the pen down, and 2 with the pen up. Here's an example of a 100 step line.\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>How long is the line? <\/o><i>100<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"1648fe4a-69f6-11e7-93a7-22000af40079\"]\n[\"create_shape\",\"16490ee4-69f6-11e7-93a7-22000af40079\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"pensize\":1,\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"forward\",20.0]\n[\"pen\",{\"tilt\":0.0,\"heading\":0.0,\"filled\":false,\"speed\":3,\"pendown\":false,\"pensize\":1,\"fillcolor\":[0,0,0],\"shown\":true,\"pencolor\":[0,0,0]}]\n[\"forward\",20.0]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",20.0]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",20.0]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",20.0]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The turtle will face and move to the right.\n<\/p>\n\n<p>Here's another example:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>How long is the line? <\/o><i>35<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"694092de-69f6-11e7-af03-22000af41688\"]\n[\"create_shape\",\"6940a4a4-69f6-11e7-af03-22000af41688\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true,\"pensize\":1}]\n[\"forward\",7.0]\n[\"pen\",{\"fillcolor\":[0,0,0],\"filled\":false,\"pensize\":1,\"heading\":0.0,\"shown\":true,\"pencolor\":[0,0,0],\"speed\":3,\"tilt\":0.0,\"pendown\":false}]\n[\"forward\",7.0]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",7.0]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",7.0]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",7.0]\n[\"end_animation\"]\n<\/code><\/pre>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"It's growing!",
      "notes":"",
      "updated_at":"2017-07-25T13:08:56.495775+00:00",
      "label":"aca-blockly-logo-growing-lines",
      "content":"<p>\n  We can change the thickness of the pen to create interesting shapes and drawings. Making the pen bigger as we move in the same direction can create simple tree-like shapes!\n<\/p>\n\n<p>\n  Write a program that asks the user <code data-lang=\"py3 lit\">How tall is it?<\/code> (in turtle steps), then draws a line straight up with four even-length segments (the height divided by 4). The bottom segment should be drawn with a pen size of 1, the next segment a pen size of 5, the third segment a pen size of 10, and the top segment a pen size of 20.\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>How tall is it? <\/o><i>80<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"5961eb50-69fc-11e7-ba81-22000af41688\"]\n[\"create_shape\",\"5961fd3e-69fc-11e7-ba81-22000af41688\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"filled\":true,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0]}]\n[\"left\",1.5707963267948966]\n[\"forward\",20.0]\n[\"pen\",{\"tilt\":0.0,\"pensize\":5,\"speed\":3,\"pencolor\":[0,0,0],\"shown\":true,\"filled\":false,\"pendown\":true,\"fillcolor\":[0,0,0],\"heading\":1.5707963267948966}]\n[\"forward\",20.0]\n[\"pen\",{\"pensize\":10}]\n[\"forward\",20.0]\n[\"pen\",{\"pensize\":20}]\n[\"forward\",20.0]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The turtle will face and move up. It starts at the bottom of the tree.\n<\/p>\n\n<p>Here's another example:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>How tall is it? <\/o><i>40<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"731d5f3e-69fc-11e7-9242-22000afd18d3\"]\n[\"create_shape\",\"731d733e-69fc-11e7-9242-22000afd18d3\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"pensize\":1}]\n[\"input_begin\",\"How tall is it? \"]\n[\"input_end\"]\n[\"left\",1.5707963267948966]\n[\"forward\",10.0]\n[\"pen\",{\"speed\":3,\"fillcolor\":[0,0,0],\"heading\":1.5707963267948966,\"filled\":false,\"pensize\":5,\"tilt\":0.0,\"pendown\":true,\"pencolor\":[0,0,0],\"shown\":true}]\n[\"forward\",10.0]\n[\"pen\",{\"pensize\":10}]\n[\"forward\",10.0]\n[\"pen\",{\"pensize\":20}]\n[\"forward\",10.0]\n[\"end_animation\"]\n<\/code><\/pre>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"The hamburger icon",
      "notes":"",
      "updated_at":"2017-07-25T13:09:02.896300+00:00",
      "label":"aca-blockly-logo-hamburger-icon",
      "content":"<p>\n  All over the web you would have seen the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Hamburger_button\" target=\"_blank\">hamburger button<\/a> on menus and graphical user interfaces. You'd be forgiven for thinking it is a relatively new invention given its rise in popularity, but it's actually <a href=\"https:\/\/blog.placeit.net\/history-of-the-hamburger-icon\/\" target=\"_blank\">been around since 1982<\/a>.\n<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"The hamburger icon\" src=\"https:\/\/groklearning-cdn.com\/problems\/sXdZLddmGr7gEBiYy3SeiM\/Hamburger_icon.svg.png\">\n  <figcaption>The hamburger button is commonplace in modern GUIs. This version can be found on Iconfinder and was made by <a href=\"https:\/\/www.iconfinder.com\/icons\/134216\/hamburger_lines_menu_icon\" target=\"_blank\">Timothy Miller<\/a>.<\/figcaption>\n<\/figure>\n\n<p>\n  Write a program that asks the user for a width, gap and thickness (in that order), then draws a version of the hamburger button using those specifications. The width will be the length of each of the lines in turtle steps, the gap is the height between each line in turtle steps, and the thickness will be the thickness of the pen.\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Width: <\/o><i>80<\/i>\n<o>Gap: <\/o><i>25<\/i>\n<o>Thickness: <\/o><i>10<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"ccff578e-6a13-11e7-a7b0-22000af41688\"]\n[\"create_shape\",\"ccff6986-6a13-11e7-a7b0-22000af41688\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pensize\":1,\"filled\":true,\"pencolor\":[0,0,0]}]\n[\"pen\",{\"pencolor\":[0,0,0],\"shown\":true,\"fillcolor\":[0,0,0],\"tilt\":0.0,\"filled\":false,\"pendown\":true,\"speed\":3,\"heading\":0.0,\"pensize\":10}]\n[\"forward\",80]\n[\"pen\",{\"pendown\":false}]\n[\"left\",1.5707963267948966]\n[\"forward\",25]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":true,\"heading\":3.141592653589793}]\n[\"forward\",80]\n[\"pen\",{\"pendown\":false}]\n[\"left\",-1.5707963267948966]\n[\"forward\",25]\n[\"left\",-1.5707963267948966]\n[\"pen\",{\"pendown\":true,\"heading\":0.0}]\n[\"forward\",80]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The turtle will start in the bottom left corner of the icon.\n<\/p>\n\n<p>Here's another example:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Width: <\/o><i>40<\/i>\n<o>Gap: <\/o><i>15<\/i>\n<o>Thickness: <\/o><i>6<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"ffa9fcfc-6a13-11e7-9e33-22000afc90c9\"]\n[\"create_shape\",\"ffaa0e18-6a13-11e7-9e33-22000afc90c9\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"pen\",{\"speed\":3,\"tilt\":0.0,\"pendown\":true,\"pensize\":6,\"pencolor\":[0,0,0],\"shown\":true,\"heading\":0.0,\"fillcolor\":[0,0,0],\"filled\":false}]\n[\"forward\",40]\n[\"pen\",{\"pendown\":false}]\n[\"left\",1.5707963267948966]\n[\"forward\",15]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":true,\"heading\":3.141592653589793}]\n[\"forward\",40]\n[\"pen\",{\"pendown\":false}]\n[\"left\",-1.5707963267948966]\n[\"forward\",15]\n[\"left\",-1.5707963267948966]\n[\"pen\",{\"pendown\":true,\"heading\":0.0}]\n[\"forward\",40]\n[\"end_animation\"]\n<\/code><\/pre>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Letter N",
      "notes":"",
      "updated_at":"2017-07-25T13:09:17.849213+00:00",
      "label":"aca-blockly-logo-letter-n",
      "content":"<p>\n  Write a Turtle program to draw the letter N. The left and right lines should be 90 turtle steps long and <strong>parallel to each other<\/strong>. The diagonal line should be 104 turtle steps long, and the pen size should be 9.\n<\/p>\n\n<p>\n  In order to draw the N, you'll need to calculate the size of the turns you need to make if <strong>the angle between the right and diagonal line is 30\u02da<\/strong>. The turtle should start drawing from the bottom left corner:\n<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\" style=\"display: none\">\n[\"begin_animation\",400,300,10,\"e2ff86c0-19c4-11e7-9fd9-22000af3105f\"]\n[\"create_shape\",\"e2ff970a-19c4-11e7-9fd9-22000af3105f\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"pensize\":1,\"filled\":true}]\n[\"pen\",{\"pendown\":true,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"shown\":true,\"pensize\":9,\"speed\":3,\"tilt\":0.0,\"filled\":false,\"heading\":0.0}]\n[\"pen\",{\"pencolor\":[0,0,0]}]\n[\"left\",1.5707963267948966]\n[\"forward\",90]\n[\"left\",-2.6179938779914944]\n[\"forward\",104]\n[\"left\",2.6179938779914944]\n[\"forward\",90]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<br>\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>Try drawing the shape out on a piece of paper and calculating the angles you need before you start coding!<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Parallelogram",
      "notes":"<p>The actual coding for this problem is not too tricky, but it working out the right angles for each of the lines was confusing for a lot of people.<\/p>\n\n<p>For this question you needed to read in one number as input, the bottom left angle. You could then use that angle to calculate all of the turns that the turtle needed to make.<\/p>\n\n<p>A good strategy to solve this problem was to draw one parallelogram (e.g. the 30\u00b0 angle parallelogram) then use that number to work out what the angles should be for any parallelogram.<\/p>\n\n<p>The bottom left angle is the one entered, so in the solution we turn left immediately by that angle so the first line is the right angle from the horizontal. Due to the nice properties of angles on parallel lines, we only ever need to turn <code data-lang=\"py3\">angle<\/code> or <code data-lang=\"py3\">180-angle<\/code>.<\/p>\n\n<p>For this question it helps a <strong>lot<\/strong> to draw out on paper what you want the turtle to do and work out this problem one turn at a time, making sure the first turn works for all angles, then the second turn, and so on.<\/p>",
      "updated_at":"2017-07-25T13:09:25.072661+00:00",
      "label":"aca-blockly-logo-parallelogram",
      "content":"<p>A <em>parallelogram<\/em> is a shape where opposite sides are equal (like a rectangle) but it's tilted to one side. Opposite sides of a parallelogram are also parallel to each other!<\/p>\n\n<p>\n  Write a program which asks for an angle, then draws a parallelogram using that angle for the bottom left (and top right!) corners.  The top and bottom sides should be 50 steps long, and the left and right sides should be 100 steps long.\n<\/p>\n\n<p>The bottom left corner should be where the turtle starts.<\/p>\n\n<p>\n  When the angle entered is acute (less than 90\u00b0), the bottom left corner is acute and the parallelogram leans to the right. For example:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Enter the angle: <\/o><i>30<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<p>produces a parallelogram like this:<\/p>\n\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"shapes\":[{\"pensize\":1,\"id\":\"b4fc1704-1748-11e6-b49c-026da89f7a19\",\"pencolor\":[0,0,0],\"kind\":\"line\",\"points\":[[0.0,0.0],[86.60254037844388,49.99999999999999],[136.60254037844388,49.99999999999999],[50.0,2.1316282072803006e-14],[0.0,2.7439516068539772e-14]],\"filled\":false}],\"width\":400,\"zerox\":200,\"height\":300,\"bgcolor\":[255,255,255],\"scaley\":1.0,\"zeroy\":150,\"scalex\":1.0}\n<\/code><\/pre>\n\n<p>\n  If the entered angle is obtuse (greater than 90\u00b0), the bottom left angle is obtuse and the parallelogram leans to the left:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Enter the angle: <\/o><i>120<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"zerox\":200,\"bgcolor\":[255,255,255],\"scalex\":1.0,\"scaley\":1.0,\"width\":400,\"zeroy\":150,\"shapes\":[{\"id\":\"ebfcb5ce-1748-11e6-baf3-026da89f7a19\",\"kind\":\"line\",\"points\":[[0.0,0.0],[-49.99999999999998,86.60254037844388],[2.1316282072803006e-14,86.60254037844388],[50.000000000000036,1.4210854715202004e-14],[3.552713678800501e-14,-1.8703717815643634e-15]],\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":false}],\"height\":300}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[{\"content\":\"from turtle import *\\n\",\"path\":\"program.py\",\"is_static\":false,\"undeletable\":true,\"unrenamable\":true}]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":"<p>The actual coding for this problem is not too tricky, but it working out the right angles for each of the lines was confusing for a lot of people.<\/p>\n\n<p>For this question you needed to read in one number as input, the bottom left angle. You could then use that angle to calculate all of the turns that the turtle needed to make.<\/p>\n\n<p>A good strategy to solve this problem was to draw one parallelogram (e.g. the 30\u00b0 angle parallelogram) then use that number to work out what the angles should be for any parallelogram.<\/p>\n\n<p>The bottom left angle is the one entered, so in the solution we turn left immediately by that angle so the first line is the right angle from the horizontal. Due to the nice properties of angles on parallel lines, we only ever need to turn <code data-lang=\"py3\">angle<\/code> or <code data-lang=\"py3\">180-angle<\/code>.<\/p>\n\n<p>For this question it helps a <strong>lot<\/strong> to draw out on paper what you want the turtle to do and work out this problem one turn at a time, making sure the first turn works for all angles, then the second turn, and so on.<\/p>"
    },
    {
      "language":1,
      "title":"Letter Z",
      "notes":"",
      "updated_at":"2017-07-25T13:09:09.467266+00:00",
      "label":"aca-blockly-logo-letter-z",
      "content":"<p>\n  Write a Turtle program to draw the letter Z. The top and bottom lines should be 50 turtle steps long and <strong>parallel to each other<\/strong>. The diagonal line should be 100 turtle steps long, and the pen size shoudl be set to 4.\n<\/p>\n\n<p>\n  In order to draw the Z, you'll need to calculate the size of the turns you need to make if <strong>the angle between the top and diagonal line is 60\u02da<\/strong>. The turtle should start drawing from the top left corner:\n<\/p>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\" style=\"display: none\">\n[\"begin_animation\",400,300,10,\"564dd098-19c3-11e7-9b77-22000af41c08\"]\n[\"create_shape\",\"564e0bee-19c3-11e7-9b77-22000af41c08\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"filled\":true,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0]}]\n[\"pen\",{\"speed\":3,\"heading\":0.0,\"tilt\":0.0,\"pendown\":true,\"pensize\":4,\"filled\":false,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"shown\":true}]\n[\"pen\",{\"pencolor\":[0,0,0]}]\n[\"forward\",50]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",2.0943951023931953]\n[\"forward\",50]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<br>\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>Try drawing the shape out on a piece of paper and calculating the angles you need before you start coding!<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Hexagon",
      "notes":"",
      "updated_at":"2017-07-25T13:11:25.379398+00:00",
      "label":"aca-blockly-logo-hexagon",
      "content":"<p>A <em>hexagon<\/em> is a shape with six sides. A regular hexagon has internal angles of 120\u00b0:<\/p>\n\n<svg width=\"153px\" height=\"133px\" viewBox=\"0 0 153 133\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" style=\"position: relative; display: block; margin: 5px auto;\">\n    <g id=\"shape\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"hexagon\" transform=\"translate(-27.000000, -37.000000)\">\n            <path d=\"M123,168.048347 C122.999943,156.954305 131.954248,148 142.999943,148 C146.509118,148 149.807208,148.903766 152.67415,150.491236\" id=\"angle\" stroke=\"#008000\" stroke-width=\"2\" stroke-dasharray=\"4,4\"><\/path>\n            <path d=\"M55,168.048347 C54.9999428,156.954305 63.9542478,148 74.9999428,148 C78.5091183,148 81.8072079,148.903766 84.6741499,150.491236\" id=\"angle\" stroke=\"#008000\" stroke-width=\"2\" stroke-dasharray=\"4,4\" transform=\"translate(69.837075, 158.024174) scale(-1, 1) translate(-69.837075, -158.024174) \"><\/path>\n            <path d=\"M122,59.0483475 C121.999943,47.954305 130.954248,39 141.999943,39 C145.509118,39 148.807208,39.9037659 151.67415,41.4912359\" id=\"angle-copy-2\" stroke=\"#008000\" stroke-width=\"2\" stroke-dasharray=\"4,4\" transform=\"translate(136.837075, 49.024174) scale(1, -1) translate(-136.837075, -49.024174) \"><\/path>\n            <path d=\"M54,59.0483475 C53.9999428,47.954305 62.9542478,39 73.9999428,39 C77.5091183,39 80.8072079,39.9037659 83.6741499,41.4912359\" id=\"angle-copy\" stroke=\"#008000\" stroke-width=\"2\" stroke-dasharray=\"4,4\" transform=\"translate(68.837075, 49.024174) scale(-1, -1) translate(-68.837075, -49.024174) \"><\/path>\n            <path d=\"M25.2626516,114.885544 C25.2625945,103.791502 34.2168995,94.8371969 45.2625945,94.8371969 C48.7717699,94.8371969 52.0698596,95.7409629 54.9368015,97.3284329\" id=\"angle-copy-3\" stroke=\"#008000\" stroke-width=\"2\" stroke-dasharray=\"4,4\" transform=\"translate(40.099727, 104.861371) scale(-1, -1) rotate(-60.000000) translate(-40.099727, -104.861371) \"><\/path>\n            <path d=\"M152.262652,114.885544 C152.262594,103.791502 161.216899,94.8371969 172.262594,94.8371969 C175.77177,94.8371969 179.06986,95.7409629 181.936802,97.3284329\" id=\"angle-copy-4\" stroke=\"#008000\" stroke-width=\"2\" stroke-dasharray=\"4,4\" transform=\"translate(167.099727, 104.861371) scale(1, -1) rotate(-60.000000) translate(-167.099727, -104.861371) \"><\/path>\n            <text id=\"120\u00b0\" font-family=\"Lato-Regular, Lato\" font-size=\"14\" font-weight=\"normal\" fill=\"#008000\">\n                <tspan x=\"112\" y=\"146\">120\u00b0<\/tspan>\n            <\/text>\n            <text id=\"120\u00b0\" font-family=\"Lato-Regular, Lato\" font-size=\"14\" font-weight=\"normal\" fill=\"#008000\">\n                <tspan x=\"73\" y=\"146\">120\u00b0<\/tspan>\n            <\/text>\n            <text id=\"120\u00b0-copy-2\" font-family=\"Lato-Regular, Lato\" font-size=\"14\" font-weight=\"normal\" fill=\"#008000\">\n                <tspan x=\"112\" y=\"73\">120\u00b0<\/tspan>\n            <\/text>\n            <text id=\"120\u00b0-copy\" font-family=\"Lato-Regular, Lato\" font-size=\"14\" font-weight=\"normal\" fill=\"#008000\">\n                <tspan x=\"73\" y=\"73\">120\u00b0<\/tspan>\n            <\/text>\n            <text id=\"120\u00b0-copy-4\" font-family=\"Lato-Regular, Lato\" font-size=\"14\" font-weight=\"normal\" fill=\"#008000\">\n                <tspan x=\"123.837075\" y=\"108.945807\">120\u00b0<\/tspan>\n            <\/text>\n            <text id=\"120\u00b0-copy-3\" font-family=\"Lato-Regular, Lato\" font-size=\"14\" font-weight=\"normal\" fill=\"#008000\">\n                <tspan x=\"53.8370749\" y=\"108.945807\">120\u00b0<\/tspan>\n            <\/text>\n            <polygon id=\"Polygon\" stroke=\"#000000\" stroke-width=\"2\" transform=\"translate(103.445807, 103.445807) rotate(30.000000) translate(-103.445807, -103.445807) \" points=\"103.445807 28.4458071 168.397712 65.9458071 168.397712 140.945807 103.445807 178.445807 38.4939018 140.945807 38.4939018 65.9458071\"><\/polygon>\n        <\/g>\n    <\/g>\n<\/svg>\n\n<p>\n  Write a program that asks the user for a side length, then draws a regular hexagon. The turtle starts at the bottom left corner of the bottom side.\n<\/p>\n\n<p>\n  Here's an example with a side length of 80:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Side length: <\/o><i>80<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"c86f3cb0-36a3-11e6-adb1-22000ae85508\"]\n[\"create_shape\",\"c86f58bc-36a3-11e6-adb1-22000ae85508\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true}]\n[\"forward\",80]\n[\"left\",1.0471975511965976]\n[\"forward\",80]\n[\"left\",1.0471975511965976]\n[\"forward\",80]\n[\"left\",1.0471975511965976]\n[\"forward\",80]\n[\"left\",1.0471975511965976]\n[\"forward\",80]\n[\"left\",1.0471975511965976]\n[\"forward\",80]\n[\"left\",1.0471975511965976]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The prefix hex (or \u1f15\u03be) means six in Ancient Greek.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Start with just a couple of lines<\/h2>\n  <p>If you're not sure how to draw the hexagon, start with just a <bk class=\"lib\">move<\/bk>, <bk class=\"lib\">turn<\/bk> and <bk class=\"lib\">move<\/bk>. Then run it to see how it looks. You'll need to think about how to calculate the turn angle.<\/p>\n  <p><strong>Remember to use your new loop blocks!<\/strong><\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Witches hats",
      "notes":"",
      "updated_at":"2017-07-25T13:11:19.184268+00:00",
      "label":"aca-blockly-logo-witches-hat",
      "content":"<p>\n  Witches hats (also known as <a href=\"https:\/\/en.wikipedia.org\/wiki\/Traffic_cone\" target=\"_blank\">traffic cones<\/a>) are seen everywhere, especially on roads where there is some form of construction or work going on. You've probably also seen them in your PE class! They get their name from their shape, which is the conical shape of hats <a href=\"https:\/\/en.wikipedia.org\/wiki\/Witch_hat\" target=\"_blank\">typically worn by witches in woodcuts from the Middle Ages<\/a>.\n<\/p>\n\n<p>\n  Write a program that asks the user for a <code data-lang=\"py3\">Colour<\/code> and <code data-lang=\"py3\">Background<\/code> (in that order), then draws a witches hat to those specifications. The user can type in <a href=\"http:\/\/wiki.tcl.tk\/37701\" target=\"_blank\">any of the colours the turtle knows about<\/a>. The hat has the following characteristics:\n<\/p>\n\n<ul>\n  <li>base: a rectangle with width 80 and height 10<\/li>\n  <li>hat: an equilateral triangle with side lengths 60<\/li>\n  <li>the hat is positioned horizontally at the centre of the base, and shares an edge with it<\/li>\n<\/ul>\n\n<p>\n  The turtle starts at the <em>top left corner of the base of the hat<\/em>. Here's an example:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Colour: <\/o><i>orange<\/i>\n<o>Background: <\/o><i>yellow<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"5764edd6-6a81-11e7-ae8e-22000a150559\"]\n[\"create_shape\",\"5764fb32-6a81-11e7-ae8e-22000a150559\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":true}]\n[\"bgcolor\",[255,255,0]]\n[\"pen\",{\"pendown\":true,\"pencolor\":[0,0,0],\"heading\":0.0,\"pensize\":1,\"filled\":false,\"speed\":3,\"fillcolor\":[255,165,0],\"shown\":true,\"tilt\":0.0}]\n[\"begin_fill\"]\n[\"forward\",80]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",80]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false,\"heading\":1.5707963267948966}]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"pen\",{\"pendown\":true,\"heading\":0.0}]\n[\"begin_fill\"]\n[\"forward\",60]\n[\"left\",2.0943951023931953]\n[\"forward\",60]\n[\"left\",2.0943951023931953]\n[\"forward\",60]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>And another example:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Colour: <\/o><i>pink<\/i>\n<o>Background: <\/o><i>darkgreen<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"88ef6ffc-6a81-11e7-86dd-22000af40079\"]\n[\"create_shape\",\"88ef7c5e-6a81-11e7-86dd-22000af40079\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true,\"pensize\":1}]\n[\"bgcolor\",[0,100,0]]\n[\"pen\",{\"pencolor\":[0,0,0],\"fillcolor\":[255,192,203],\"heading\":0.0,\"filled\":false,\"pensize\":1,\"speed\":3,\"shown\":true,\"pendown\":true,\"tilt\":0.0}]\n[\"begin_fill\"]\n[\"forward\",80]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",80]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"end_fill\"]\n[\"pen\",{\"heading\":1.5707963267948966,\"pendown\":false}]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"pen\",{\"heading\":0.0,\"pendown\":true}]\n[\"begin_fill\"]\n[\"forward\",60]\n[\"left\",2.0943951023931953]\n[\"forward\",60]\n[\"left\",2.0943951023931953]\n[\"forward\",60]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/pre>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"A row of houses",
      "notes":"",
      "updated_at":"2017-07-25T13:11:32.439805+00:00",
      "label":"aca-blockly-logo-row-of-houses",
      "content":"<p>\n  You learned how to draw a single house before. Using your new knowledge about loops, you're going to draw a whole street of houses!\n<\/p>\n\n<p>\n  Write a program that asks for two things - the size of each house, and the number of houses (in that order) - then draws the whole street!\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>How big is a house? <\/o><i>20<\/i>\n<o>How many houses? <\/o><i>4<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"d172a6dc-6aad-11e7-97fb-22000afd18d3\"]\n[\"create_shape\",\"d172b92e-6aad-11e7-97fb-22000afd18d3\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"filled\":true,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0]}]\n[\"pen\",{\"pendown\":false,\"fillcolor\":[0,0,0],\"filled\":false,\"pencolor\":[0,0,0],\"shown\":true,\"speed\":3,\"pensize\":1,\"tilt\":0.0,\"heading\":0.0}]\n[\"forward\",-200]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-0.5235987755982988]\n[\"forward\",20]\n[\"left\",-2.0943951023931953]\n[\"forward\",20]\n[\"left\",1.0471975511965976]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-0.5235987755982988]\n[\"forward\",20]\n[\"left\",-2.0943951023931953]\n[\"forward\",20]\n[\"left\",1.0471975511965976]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-0.5235987755982988]\n[\"forward\",20]\n[\"left\",-2.0943951023931953]\n[\"forward\",20]\n[\"left\",1.0471975511965976]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-1.5707963267948966]\n[\"forward\",20]\n[\"left\",-0.5235987755982988]\n[\"forward\",20]\n[\"left\",-2.0943951023931953]\n[\"forward\",20]\n[\"left\",1.0471975511965976]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  Your program should start off by moving 200 turtle steps to the left so that it starts off at the left-edge of the screen.\n  Your program should work for any number of houses.\n<\/p>\n\n<p>Important things to note:<\/p>\n<ul>\n  <li>You need to make sure you pick the pen up and put it down at the right time.<\/li>\n  <li>The turtle starts at the ceiling of each house - the left of the line where the room meets the roof.<\/li>\n<\/ul>\n\n<p>\n  Here's another example:\n<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>How big is a house? <\/o><i>30<\/i>\n<o>How many houses? <\/o><i>10<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"width\":400,\"height\":300,\"bgcolor\":[255,255,255],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"460964a4-6aae-11e7-ac91-22000afc90c9\",\"kind\":\"line\",\"points\":[[-200.0,0.0],[-170.0,0.0],[-170.0,-30.0],[-200.0,-29.999999999999996],[-200.0,3.552713678800501e-15],[-185.0,25.980762113533164],[-170.0,7.105427357601002e-15],[-140.0,7.105427357601002e-15],[-140.0,-29.999999999999993],[-170.0,-29.99999999999999],[-170.0,1.0658141036401503e-14],[-155.0,25.98076211353317],[-140.0,1.4210854715202004e-14],[-110.0,1.4210854715202004e-14],[-110.0,-29.999999999999986],[-140.0,-29.999999999999982],[-140.0,1.7763568394002505e-14],[-125.0,25.980762113533178],[-110.0,2.1316282072803006e-14],[-80.0,2.1316282072803006e-14],[-80.0,-29.99999999999998],[-110.0,-29.999999999999975],[-110.0,2.4868995751603507e-14],[-95.0,25.980762113533185],[-80.0,2.842170943040401e-14],[-50.0,2.842170943040401e-14],[-50.00000000000001,-29.99999999999997],[-80.0,-29.999999999999968],[-80.0,3.197442310920451e-14],[-65.0,25.980762113533192],[-50.0,3.552713678800501e-14],[-20.0,3.552713678800501e-14],[-20.000000000000007,-29.999999999999964],[-50.00000000000001,-29.99999999999996],[-50.00000000000001,3.907985046680551e-14],[-35.000000000000014,25.9807621135332],[-20.00000000000001,4.263256414560601e-14],[9.99999999999999,4.263256414560601e-14],[9.999999999999984,-29.999999999999957],[-20.000000000000014,-29.999999999999954],[-20.00000000000001,4.618527782440651e-14],[-5.000000000000014,25.980762113533206],[9.99999999999999,4.973799150320701e-14],[39.999999999999986,4.973799150320701e-14],[39.99999999999998,-29.99999999999995],[9.999999999999979,-29.999999999999947],[9.99999999999998,5.3290705182007514e-14],[24.99999999999998,25.980762113533213],[39.999999999999986,5.684341886080802e-14],[69.99999999999999,5.684341886080802e-14],[69.99999999999999,-29.999999999999943],[39.999999999999986,-29.99999999999994],[39.999999999999986,6.039613253960852e-14],[54.999999999999986,25.98076211353322],[69.99999999999999,6.394884621840902e-14],[99.99999999999999,6.394884621840902e-14],[99.99999999999999,-29.999999999999936],[69.99999999999999,-29.999999999999932],[69.99999999999999,6.750155989720952e-14],[84.99999999999999,25.980762113533228],[99.99999999999999,7.105427357601002e-14]],\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":false}]}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Red Cross",
      "notes":"",
      "updated_at":"2017-07-25T13:11:10.668160+00:00",
      "label":"aca-blockly-logo-red-cross",
      "content":"<p>\n  Write a program to draw a red, filled cross where all the sides are 50 turtle steps long. Your program should ask the user for the line thickness and then draw a red cross with that thickness.\n<\/p>\n\n<p>Here's an example of a red cross with line thickness 5:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Line thickness: <\/o><i>5\n<\/i>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-eg-id=\"\" data-io=\"false\"><code data-lang=\"py3\">\n[\"begin_animation\",400,300,10,\"32a45af0-136f-11e6-9da2-02387658b611\"]\n[\"create_shape\",\"32a4765c-136f-11e6-9da2-02387658b611\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":true,\"fillcolor\":[0,0,0]}]\n[\"input_begin\",\"Line thickness: \"]\n[\"input_end\"]\n[\"pen\",{\"shown\":true,\"pensize\":5,\"filled\":false,\"heading\":0.0,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"speed\":3,\"tilt\":0.0,\"pendown\":true}]\n[\"pen\",{\"pencolor\":[255,0,0],\"fillcolor\":[255,0,0]}]\n[\"begin_fill\"]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>Here's an example of a red cross with line thickness 70:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Line thickness: <\/o><i>70\n<\/i>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-eg-id=\"\" data-io=\"false\"><code data-lang=\"py3\">\n[\"begin_animation\",400,300,10,\"594b9498-136f-11e6-8ccc-02387658b611\"]\n[\"create_shape\",\"594babea-136f-11e6-8ccc-02387658b611\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":true}]\n[\"input_begin\",\"Line thickness: \"]\n[\"input_end\"]\n[\"pen\",{\"shown\":true,\"pendown\":true,\"filled\":false,\"fillcolor\":[0,0,0],\"pensize\":70,\"heading\":0.0,\"tilt\":0.0,\"pencolor\":[0,0,0],\"speed\":3}]\n[\"pen\",{\"pencolor\":[255,0,0],\"fillcolor\":[255,0,0]}]\n[\"begin_fill\"]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",-1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Don't forget Duplicate!<\/h2>\n  <p>Remember that once you've made a block you're going to re-use in your code, you can right-click on it to make a copy.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Simple Star",
      "notes":"",
      "updated_at":"2017-07-27T01:57:16.178843+00:00",
      "label":"aca-blockly-logo-simple-star-pink",
      "content":"<p>Let's draw a 5-pointed star with a thicker pen and some colour!<\/p>\n\n<p>Write a program to:<\/p>\n<ul>\n  <li>Set the pen size to 8.<\/li>\n  <li>Set the pen colour to <code data-lang=\"py3\">'hotpink'<\/code>.<\/li>\n  <li>Draw a 5 pointed star with arms 80 turtle steps and turning 72\u00b0 between each arm.<\/li>\n<\/ul>\n\n<p>When it's finished, the result should look like this:<\/p>\n\n<pre class=\"js-logo-final\" data-eg-id=\"pretty-snowflake-problem-example\"><code data-lang=\"py3\">{\"width\":400,\"height\":300,\"bgcolor\":[255,255,255],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"504a6ecc-6b49-11e7-acc5-22000afc90c9\",\"kind\":\"line\",\"points\":[[0.0,0.0],[80.0,0.0],[0.0,0.0],[24.721359549995796,76.08452130361228],[0.0,0.0],[-64.72135954999578,47.02282018339786],[0.0,0.0],[-64.72135954999581,-47.02282018339784],[0.0,0.0],[24.72135954999578,-76.08452130361229],[0.0,0.0]],\"pensize\":8,\"pencolor\":[255,105,180],\"filled\":false}]}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Straight L",
      "notes":"<p>Solution 1 is a straightforward sequence of instructions to draw the letter L.<\/p>\n\n<p>Solution 2 is a better program that uses variables to store the turn angle, thickness, width and height of the letter L. This makes the program easier to understand, and easier to modify.<\/p>\n\n<p>Later in the module, we'll be changing the turn angles. In Solution 1, this would require finding and changing six different lines, while in Solution 2 it only requires changing one line.<\/p>",
      "updated_at":"2017-07-25T13:09:58.940565+00:00",
      "label":"aca-blockly-logo-font-straight-l",
      "content":"<p>\n Let's try a slightly trickier letter! \n<\/p>\n\n<p>\n  Write a program that draws a straight letter L (all right angles), so that the bottom left corner is in the center of the space.\n<\/p>\n<ul>\n  <li>The thickness of each of the bars of the L should be 20 steps;<\/li>\n  <li>The height of the L should be 100 steps;<\/li>\n  <li>The width of the L should be 80 steps.<\/li>\n<\/ul>\n\n<p>It should look like this:<\/p>\n\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"shapes\":[{\"pencolor\":[0,0,0],\"id\":\"484f1188-e439-11e6-a66b-22000af51b5c\",\"kind\":\"line\",\"pensize\":1,\"points\":[[0.0,0.0],[6.123233995736766e-15,100.0],[20.000000000000007,100.0],[19.999999999999993,20.0],[80.0,20.0],[80.0,0.0],[0.0,9.797174393178826e-15]],\"filled\":false}],\"scaley\":1.0,\"zerox\":200,\"bgcolor\":[255,255,255],\"scalex\":1.0,\"width\":400,\"zeroy\":150,\"height\":300}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":"<p>Solution 1 is a straightforward sequence of instructions to draw the letter L.<\/p>\n\n<p>Solution 2 is a better program that uses variables to store the turn angle, thickness, width and height of the letter L. This makes the program easier to understand, and easier to modify.<\/p>\n\n<p>Later in the module, we'll be changing the turn angles. In Solution 1, this would require finding and changing six different lines, while in Solution 2 it only requires changing one line.<\/p>"
    },
    {
      "language":1,
      "title":"Any Italic L",
      "notes":"<p>This angles in this question could not be hard coded like in the previous Straight L and Italic L questions. In order to ask the user to input an angle, we write:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-ask-angle\" data-runnable=\"false\"><code data-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"Kxo(yMc?1HnBRx,Vj%ce\">angle<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"r(=JX0A1%pSf-@JS8CNI\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"Kxo(yMc?1HnBRx,Vj%ce\" variabletype=\"\">angle<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"zRErP$DL{pYFRn(suquh\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3Oa%H2`xqfWH7g}R+W_#\">\n            <field name=\"TEXT\">Enter the angle:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>The number that the user inputs is converted into an integer and stored in the <code data-lang=\"logo\">angle<\/code> variable.<\/p>\n\n<p>This variable can then be used to calculate the turn angles, just like in Solution 2 of the previous Straight L and Italic L questions.<\/p>",
      "updated_at":"2017-07-25T13:10:26.057450+00:00",
      "label":"aca-blockly-logo-font-any-italic-l",
      "content":"<p>\n  Let's let the user decide how much <em>italicisation<\/em> they want.\n<\/p>\n\n<p>\n  Write a program that asks the user for the angle of the bottom left corner, and tilts the letter L to that angle.\n<\/p>\n\n<p>For example, if the user enters 75:<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Enter the angle: <\/o><i>75<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"height\":300,\"scalex\":1.0,\"bgcolor\":[255,255,255],\"width\":400,\"shapes\":[{\"pencolor\":[0,0,0],\"id\":\"42b4067c-e45f-11e6-991a-22000ae819e1\",\"points\":[[0.0,0.0],[25.881904510252074,96.59258262890683],[45.88190451025207,96.59258262890683],[25.17638090205042,19.318516525781362],[85.17638090205043,19.318516525781362],[80.00000000000001,-3.552713678800501e-15],[1.4210854715202004e-14,6.244460714378325e-15]],\"kind\":\"line\",\"filled\":false,\"pensize\":1}],\"scaley\":1.0,\"zerox\":200,\"zeroy\":150}\n<\/code><\/pre>\n\n<p>Or an obtuse angle to tilt to the left:<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Enter the angle: <\/o><i>120<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"height\":300,\"zerox\":200,\"width\":400,\"bgcolor\":[255,255,255],\"scaley\":1.0,\"zeroy\":150,\"scalex\":1.0,\"shapes\":[{\"pencolor\":[0,0,0],\"filled\":false,\"id\":\"8c48da36-e461-11e6-96af-22000a06801f\",\"kind\":\"line\",\"pensize\":1,\"points\":[[0.0,0.0],[-49.99999999999998,86.60254037844388],[-29.99999999999998,86.60254037844388],[10.000000000000028,17.320508075688792],[70.00000000000003,17.320508075688792],[80.00000000000003,2.1316282072803006e-14],[2.842170943040401e-14,-4.413680322023179e-15]]}]}\n<\/code><\/pre>\n\n<p>An angle of 90\u00b0 is the straight letter L.<\/p>\n\n<p>The angles of the turns should change depending on what the user inputs, but the lines should all be the same length as in the Straight L and Italic L questions:<\/p>\n<ul>\n  <li>The thickness of each of the bars of the L should be 20 steps;<\/li>\n  <li>The height of the L should be 100 steps;<\/li>\n  <li>The width of the L should be 80 steps;<\/li>\n<\/ul>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":"<p>This angles in this question could not be hard coded like in the previous Straight L and Italic L questions. In order to ask the user to input an angle, we write:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-ask-angle-teacher\" data-runnable=\"false\"><code data-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"Kxo(yMc?1HnBRx,Vj%ce\">angle<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"r(=JX0A1%pSf-@JS8CNI\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"Kxo(yMc?1HnBRx,Vj%ce\" variabletype=\"\">angle<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"zRErP$DL{pYFRn(suquh\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3Oa%H2`xqfWH7g}R+W_#\">\n            <field name=\"TEXT\">Enter the angle:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>The number that the user inputs is converted into an integer and stored in the <code data-lang=\"logo\">angle<\/code> variable.<\/p>\n\n<p>This variable can then be used to calculate the turn angles, just like in Solution 2 of the previous Straight L and Italic L questions.<\/p>"
    },
    {
      "language":1,
      "title":"Italic L",
      "notes":"<p>It should be possible to take your code from the previous straight L question, and just update the turn angles for the 60\u00b0 tilt.<\/p>\n\n<p>The turns were all 60\u00b0 or 180\u00b0 - 60\u00b0 = 120\u00b0. The trickiest part was visualising the turns as the angle between the projected direction of travel and the new direction. Using a diagram that extends the lines past the end of the letter (like the one given) greatly helps with this.<\/p>\n\n<p>Note that Solution 2 is almost exactly the same as Solution 2 in the straight L question. Only the value stored in the <code data-lang=\"logo\">angle<\/code> variable has changed, from <code data-lang=\"logo\">90<\/code> to <code data-lang=\"logo\">60<\/code>. This is the advantage of using variables.<\/p>",
      "updated_at":"2017-07-25T13:10:12.082333+00:00",
      "label":"aca-blockly-logo-font-italic-l",
      "content":"<p>\n  Using <em>italics<\/em> is important for adding emphasis and changing the voice in which a word or phrase is spoken.\n<\/p>\n\n<p>\n  Write a program that draws an italic letter L, so the angle in the bottom left corner is 60\u00b0.\n<\/p>\n\n<p>Only the angles of the turns should change from the previous straight L question, the lines should all be the same length:<\/p>\n<ul>\n  <li>The thickness of each of the bars of the L should be 20 steps;<\/li>\n  <li>The height of the L should be 100 steps;<\/li>\n  <li>The width of the L should be 80 steps;<\/li>\n<\/ul>\n\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"height\":300,\"zerox\":200,\"scalex\":1.0,\"scaley\":1.0,\"bgcolor\":[255,255,255],\"shapes\":[{\"pencolor\":[0,0,0],\"kind\":\"line\",\"points\":[[0.0,0.0],[50.000000000000014,86.60254037844386],[70.00000000000001,86.60254037844386],[30.000000000000043,17.32050807568875],[90.00000000000004,17.32050807568875],[80.00000000000006,-2.842170943040401e-14],[5.684341886080802e-14,-8.96788086132352e-14]],\"filled\":false,\"pensize\":1,\"id\":\"d67446e0-e448-11e6-a908-22000ae819e1\"}],\"width\":400,\"zeroy\":150}\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Calculating turns<\/h2>\n  <p>This diagram shows the two sets of parallel lines in the letter L in blue and red.<\/p>\n  <p class=\"text-center\">\n<svg width=\"219px\" height=\"240px\" viewBox=\"0 0 219 240\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\">\n    <defs>\n        <polygon id=\"path-1\" points=\"120 18 160 18 80 178 200 178 180 218 20 218\"><\/polygon>\n        <mask id=\"mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"180\" height=\"200\" fill=\"white\">\n            <use xlink:href=\"#path-1\"><\/use>\n        <\/mask>\n    <\/defs>\n    <g id=\"maths\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Artboard\">\n            <g id=\"italic-l-parallel\">\n                <use id=\"Rectangle\" stroke=\"#979797\" mask=\"url(#mask-2)\" stroke-width=\"4\" xlink:href=\"#path-1\"><\/use>\n                <g id=\"horizontal\" transform=\"translate(0.000000, 17.000000)\" stroke=\"#FB4251\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M-5.68434189e-14,200 L200,200\" id=\"Line\"><\/path>\n                    <path d=\"M60,162 L220,162\" id=\"Line\"><\/path>\n                    <path d=\"M98,2 L178,2\" id=\"Line\"><\/path>\n                <\/g>\n                <g id=\"vertical\" transform=\"translate(10.000000, 0.000000)\" stroke=\"#2891E0\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M120,0 L0,240\" id=\"Line\"><\/path>\n                    <path d=\"M158,0 L58,200\" id=\"Line\"><\/path>\n                    <path d=\"M198,160 L158,240\" id=\"Line\"><\/path>\n                <\/g>\n            <\/g>\n        <\/g>\n    <\/g>\n<\/svg>\n<\/p>\n  \n  <p>Use angle relationships on parallel lines (previous slide) to calculate the turns for your drawing.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":"<p>It should be possible to take your code from the previous straight L question, and just update the turn angles for the 60\u00b0 tilt.<\/p>\n\n<p>The turns were all 60\u00b0 or 180\u00b0 - 60\u00b0 = 120\u00b0. The trickiest part was visualising the turns as the angle between the projected direction of travel and the new direction. Using a diagram that extends the lines past the end of the letter (like the one given) greatly helps with this.<\/p>\n\n<p>Note that Solution 2 is almost exactly the same as Solution 2 in the straight L question. Only the value stored in the <code data-lang=\"logo\">angle<\/code> variable has changed, from <code data-lang=\"logo\">90<\/code> to <code data-lang=\"logo\">60<\/code>. This is the advantage of using variables.<\/p>"
    },
    {
      "language":1,
      "title":"Straight T",
      "notes":"<p>The letter T little bit trickier than the letter L, because you need to calculate the length of the arms. If the width is 80 steps, and the thickness of the bar is 20 steps, this leaves 60 steps for both arms. The length of each arm is $$(80 - 20)\/2 = 30 steps$$.<\/p>\n\n<p>Solution 1 is a straightforword sequence of instructions to draw the letter T.<\/p>\n\n<p>Solution 2 is a better program that uses variables to store the turn angle, thickness, width and height, and the calculated arm length of the letter T. This makes the program easier to understand, and easier to modify.<\/p>\n\n<p>Later in the module, we'll be changing the turn angles. In Solution 1, this would require finding and changing eight different lines, while in Solution 2 it only requires changing one line.<\/p>",
      "updated_at":"2017-07-25T13:10:05.673829+00:00",
      "label":"aca-blockly-logo-font-straight-t",
      "content":"<p>\n  Time to take a up a notch with the letter T! \n<\/p>\n\n<p>\n  Write a program that draws a straight letter T (all right angles), so that the bottom left corner is in the center of the space.\n<\/p>\n<ul>\n  <li>The thickness of each of the bars of the T should be 20 steps;<\/li>\n  <li>The height of the T should be 100 steps;<\/li>\n  <li>The width of the T should be 80 steps.<\/li>\n<\/ul>\n\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"scaley\":1.0,\"bgcolor\":[255,255,255],\"width\":400,\"height\":300,\"zerox\":200,\"scalex\":1.0,\"zeroy\":150,\"shapes\":[{\"id\":\"971eed80-e2bb-11e6-aba0-22000af51b5c\",\"points\":[[0.0,0.0],[4.898587196589413e-15,80.0],[-29.999999999999996,80.0],[-29.999999999999996,100.0],[50.0,100.0],[49.99999999999999,80.0],[19.999999999999993,80.0],[19.99999999999998,0.0],[-2.1316282072803006e-14,2.4492935982947065e-15]],\"pencolor\":[0,0,0],\"filled\":false,\"kind\":\"line\",\"pensize\":1}]}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":"<p>The letter T little bit trickier than the letter L, because you need to calculate the length of the arms. If the width is 80 steps, and the thickness of the bar is 20 steps, this leaves 60 steps for both arms. The length of each arm is $$(80 - 20)\/2 = 30 steps$$.<\/p>\n\n<p>Solution 1 is a straightforword sequence of instructions to draw the letter T.<\/p>\n\n<p>Solution 2 is a better program that uses variables to store the turn angle, thickness, width and height, and the calculated arm length of the letter T. This makes the program easier to understand, and easier to modify.<\/p>\n\n<p>Later in the module, we'll be changing the turn angles. In Solution 1, this would require finding and changing eight different lines, while in Solution 2 it only requires changing one line.<\/p>"
    },
    {
      "language":1,
      "title":"Any Italic T",
      "notes":"<p>This angles in this question could not be hard coded like in the previous Straight T and Italic T questions. In order to ask the user to input an angle, we write:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-ask-angle\" data-runnable=\"false\"><code data-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"Kxo(yMc?1HnBRx,Vj%ce\">angle<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"r(=JX0A1%pSf-@JS8CNI\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"Kxo(yMc?1HnBRx,Vj%ce\" variabletype=\"\">angle<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"zy8:BngRAg0Ok0nZ?;h(\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"(j=@dU;n$;zSd{Y_Cbt{\">\n            <field name=\"TEXT\">Enter the angle:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>The number that the user inputs is converted into an integer and stored in the <code data-lang=\"logo\">angle<\/code> variable.<\/p>\n\n<p>This variable can then be used to calculate the turn angles, just like in Solution 2 of the previous Straight T and Italic T questions.<\/p>",
      "updated_at":"2017-07-25T13:10:32.929486+00:00",
      "label":"aca-blockly-logo-font-any-italic-t",
      "content":"<p>\n  Let's let the user decide how much <em>italicisation<\/em> they want.\n<\/p>\n\n<p>\n  Write a program that asks the user for the angle of the bottom left corner, and tilts the letter T to that angle.\n<\/p>\n\n<p>For example, if the user enters 75:<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Enter the angle: <\/o><i>75<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"width\":400,\"zerox\":200,\"bgcolor\":[255,255,255],\"scalex\":1.0,\"height\":300,\"scaley\":1.0,\"shapes\":[{\"pencolor\":[0,0,0],\"filled\":false,\"pensize\":1,\"points\":[[0.0,0.0],[20.70552360820166,77.27406610312546],[-9.29447639179834,77.27406610312546],[-4.118095489747922,96.59258262890683],[75.88190451025208,96.59258262890683],[70.70552360820167,77.27406610312546],[40.70552360820167,77.27406610312546],[20.00000000000002,0.0],[2.1316282072803006e-14,2.4492935982947065e-15]],\"kind\":\"line\",\"id\":\"278efdac-e464-11e6-a881-22000af51b5c\"}],\"zeroy\":150}\n<\/code><\/pre>\n\n<p>Or an obtuse angle to tilt to the left:<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Enter the angle: <\/o><i>120<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"height\":300,\"bgcolor\":[255,255,255],\"shapes\":[{\"kind\":\"line\",\"id\":\"99c1be46-e464-11e6-91ac-22000af51b5c\",\"points\":[[0.0,0.0],[-39.999999999999986,69.2820323027551],[-69.99999999999999,69.2820323027551],[-79.99999999999999,86.60254037844388],[1.4210854715202004e-14,86.6025403784439],[10.000000000000016,69.28203230275514],[-19.999999999999986,69.28203230275513],[20.00000000000002,4.263256414560601e-14],[2.1316282072803006e-14,3.620007354689946e-14]],\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":false}],\"scaley\":1.0,\"scalex\":1.0,\"zeroy\":150,\"zerox\":200,\"width\":400}\n<\/code><\/pre>\n\n<p>An angle of 90\u00b0 is the straight letter T.<\/p>\n\n<p>The angles of the turns should change depending on what the user inputs, but the lines should all be the same length as in the Straight T and Italic T questions:<\/p>\n<ul>\n  <li>The thickness of each of the bars of the T should be 20 steps;<\/li>\n  <li>The height of the T should be 100 steps;<\/li>\n  <li>The width of the T should be 80 steps;<\/li>\n<\/ul>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":"<p>This angles in this question could not be hard coded like in the previous Straight T and Italic T questions. In order to ask the user to input an angle, we write:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"blockly-ask-angle-teacher\" data-runnable=\"false\"><code data-lang=\"logo\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"Kxo(yMc?1HnBRx,Vj%ce\">angle<\/variable>\n  <\/variables>\n  <block type=\"variables_set\" id=\"r(=JX0A1%pSf-@JS8CNI\" x=\"10\" y=\"10\">\n    <field name=\"VAR\" id=\"Kxo(yMc?1HnBRx,Vj%ce\" variabletype=\"\">angle<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"zy8:BngRAg0Ok0nZ?;h(\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"(j=@dU;n$;zSd{Y_Cbt{\">\n            <field name=\"TEXT\">Enter the angle:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>The number that the user inputs is converted into an integer and stored in the <code data-lang=\"logo\">angle<\/code> variable.<\/p>\n\n<p>This variable can then be used to calculate the turn angles, just like in Solution 2 of the previous Straight T and Italic T questions.<\/p>"
    },
    {
      "language":1,
      "title":"Italic T",
      "notes":"<p>It should be possible to take your code from the previous straight T question, and just update the turn angles for the 60\u00b0 tilt.<\/p>\n\n<p>The turns were all 60\u00b0 or 180\u00b0 - 60\u00b0 = 120\u00b0. The trickiest part was visualising the turns as the angle between the projected direction of travel and the new direction. Using a diagram that extends the lines past the end of the letter (like the one given) greatly helps with this.<\/p>\n\n<p>Note that Solution 2 is almost exactly the same as Solution 2 in the straight T question. Only the value stored in the <code data-lang=\"logo\">angle<\/code> variable has changed, from <code data-lang=\"logo\">90<\/code> to <code data-lang=\"logo\">60<\/code>. This is the advantage of using variables.<\/p>",
      "updated_at":"2017-07-25T13:10:19.065380+00:00",
      "label":"aca-blockly-logo-font-italic-t",
      "content":"<p>\n  Using <em>italics<\/em> is important for adding emphasis and changing the voice in which a word or phrase is spoken.\n<\/p>\n\n<p>\n  Write a program that draws an italic letter T, so the angle in the bottom left corner is 60\u00b0.\n<\/p>\n\n<p>Only the angles of the turns should change from the previous straight T question, the lines should all be the same length:<\/p>\n<ul>\n  <li>The thickness of each of the bars of the T should be 20 steps;<\/li>\n  <li>The height of the T should be 100 steps;<\/li>\n  <li>The width of the T should be 80 steps.<\/li>\n<\/ul>\n\n\n<p>It should look like this:<\/p>\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"bgcolor\":[255,255,255],\"scaley\":1.0,\"scalex\":1.0,\"zerox\":200,\"shapes\":[{\"points\":[[0.0,0.0],[40.00000000000001,69.28203230275508],[10.000000000000007,69.28203230275508],[20.000000000000007,86.60254037844386],[100.0,86.60254037844388],[90.0,69.2820323027551],[60.0,69.28203230275507],[20.00000000000003,-4.263256414560601e-14],[2.842170943040401e-14,-5.794683894131381e-14]],\"pensize\":1,\"kind\":\"line\",\"id\":\"358b16ea-e453-11e6-9b8f-22000ae819e1\",\"pencolor\":[0,0,0],\"filled\":false}],\"height\":300,\"zeroy\":150,\"width\":400}\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Calculating turns<\/h2>\n  <p>This diagram shows the two sets of parallel lines in the letter T in blue and red.<\/p>\n  <p class=\"text-center\">\n<svg width=\"240px\" height=\"242px\" viewBox=\"0 0 240 242\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\">\n    <defs>\n        <polygon id=\"path-1\" points=\"60 18 220 18 200 58 140 58 60 218 20 218 100 58 40 58\"><\/polygon>\n        <mask id=\"mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"200\" height=\"200\" fill=\"white\">\n            <use xlink:href=\"#path-1\"><\/use>\n        <\/mask>\n    <\/defs>\n    <g id=\"maths\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Artboard\" transform=\"translate(-279.000000, 0.000000)\">\n            <g id=\"italic-T-parallel\" transform=\"translate(280.000000, 0.000000)\">\n                <use id=\"Rectangle-2\" stroke=\"#979797\" mask=\"url(#mask-2)\" stroke-width=\"4\" xlink:href=\"#path-1\"><\/use>\n                <g id=\"horizontal\" transform=\"translate(0.000000, 18.000000)\" stroke=\"#FB4251\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M-5.68434189e-14,199 L80,199\" id=\"Line\"><\/path>\n                    <path d=\"M20,39 L112,39\" id=\"Line\"><\/path>\n                    <path d=\"M128,39 L220,39\" id=\"Line\"><\/path>\n                    <path d=\"M38,1 L238,1\" id=\"Line\"><\/path>\n                <\/g>\n                <g id=\"vertical\" transform=\"translate(10.000000, 0.000000)\" stroke=\"#2891E0\" stroke-width=\"2\" stroke-linecap=\"square\" stroke-dasharray=\"2,4\">\n                    <path d=\"M100,40 L0,240\" id=\"Line\"><\/path>\n                    <path d=\"M138,40 L38,240\" id=\"Line\"><\/path>\n                    <path d=\"M218,0 L178,80\" id=\"Line\"><\/path>\n                    <path d=\"M60,0 L20,80\" id=\"Line\"><\/path>\n                <\/g>\n            <\/g>\n        <\/g>\n    <\/g>\n<\/svg>\n<\/p>\n  \n  <p>Use angle relationships on parallel lines (previous slide) to calculate the turns for your drawing.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\"]",
      "teacher_notes":"<p>It should be possible to take your code from the previous straight T question, and just update the turn angles for the 60\u00b0 tilt.<\/p>\n\n<p>The turns were all 60\u00b0 or 180\u00b0 - 60\u00b0 = 120\u00b0. The trickiest part was visualising the turns as the angle between the projected direction of travel and the new direction. Using a diagram that extends the lines past the end of the letter (like the one given) greatly helps with this.<\/p>\n\n<p>Note that Solution 2 is almost exactly the same as Solution 2 in the straight T question. Only the value stored in the <code data-lang=\"logo\">angle<\/code> variable has changed, from <code data-lang=\"logo\">90<\/code> to <code data-lang=\"logo\">60<\/code>. This is the advantage of using variables.<\/p>"
    },
    {
      "language":1,
      "title":"Draw any angle",
      "notes":"",
      "updated_at":"2017-07-25T13:07:47.402177+00:00",
      "label":"aca-blockly-logo-draw-any-angle",
      "content":"<p>We can use answers to questions for more than just the number of steps, write a program where the turtle asks <code data-lang=\"out\">What angle?<\/code> and then draws an angle of that size. Make the lines 100 turtle steps long.<\/p>\n\n<p>Here's an example of a 40\u00b0 angle:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>What angle? <\/o><i>40<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"py3\">\n[\"begin_animation\",400,300,10,\"ac598192-6939-11e7-89ca-22000af41688\"]\n[\"create_shape\",\"ac59938a-6939-11e7-89ca-22000af41688\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"filled\":true,\"pensize\":1}]\n[\"forward\",100]\n[\"left\",2.443460952792061]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>Here's an example with a bigger angle, 120\u00b0:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>What angle? <\/o><i>120<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"py3\">\n[\"begin_animation\",400,300,10,\"cf5c59d0-6939-11e7-ab43-22000a150559\"]\n[\"create_shape\",\"cf5c6d08-6939-11e7-ab43-22000a150559\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":true}]\n[\"forward\",100]\n[\"left\",1.0471975511965976]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  Notice that the angle is being drawn from the <em>right side<\/em> of the base.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Hint: Use the maths blocks<\/h2>\n  <p>Remember that you need to calculate the correct turn angle from the user's input.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_turn_simple\",\"turtle_turn\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Get your house in order",
      "notes":"",
      "updated_at":"2017-12-06T00:44:23.587137+00:00",
      "label":"aca-blockly-logo-house",
      "content":"<p>\n  Use the turtle to draw a house!\n<\/p>\n\n<p>\n  The triangle at the top should have angles that are all 60\u00b0 and all sides of the house should be 100 turtle steps long.\n  The sides of the roof will also be 100 steps long.\n<\/p>\n\n<p>The result should look like this:<\/p>\n<pre class=\"js-logo-final\"><code data-lang=\"logo\">\n{\"width\":400,\"height\":300,\"zerox\":200,\"bgcolor\":[255,255,255],\"zeroy\":150,\"scalex\":1.0,\"shapes\":[{\"pencolor\":[0,0,0],\"pensize\":1,\"points\":[[0.0,0.0],[50.000000000000014,86.60254037844386],[100.00000000000003,0.0],[2.842170943040401e-14,-3.2162452993532734e-14],[1.005200744319371e-14,-100.00000000000003],[100.00000000000001,-100.00000000000003],[100.00000000000001,-2.842170943040401e-14]],\"id\":1,\"outline\":1,\"fillcolor\":[0,0,0]}],\"scaley\":1.0}\n<\/code><\/pre>\n\n<p>The top left corner of the square is where the turtle starts.<\/p>\n\n<aside class=\"info\">\n  <h2>Optional challenge!<\/h2>\n  <p>Try drawing the house in one line, without drawing over the same line twice. Think about the <em>order<\/em> you need to draw the lines in.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Equilateral triangle",
      "notes":"<p>\n  The tricky part of working with the turtle is imagining the instructions from the perspective of the turtle. To draw the triangle so that the angle between each side is 60\u00b0, the turtle actually needs to turn 120\u00b0.\n<\/p>\n\n<p>\n  In the sample solution we stored the length of each side as a variable <code data-lang=\"py3\">SIDE_LENGTH<\/code> but it also works to write the side length every time the turtle moves forward like this:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-runnable=\"false\" data-eg-id=\"blockly-constants\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"]\/n6dp4FiP3$I_mOhJTN\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"Ben*Oskt4eoL?CTPT6s_\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"LcHgQ$=usH-N%.aaW%$1\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"uzWjKUq~*i=4)]J1RP\/r\">\n            <field name=\"NUM\">120<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"oHw[`!kF\/QQtIl9ccSG1\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"4Ti!~4T~RM?0V+BvecB7\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn\" id=\"VY5L^2+*h+01Fol@T-x(\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <value name=\"ANGLE\">\n                  <block type=\"math_number\" id=\"Ap,+`2?nh3BqXQteqc7#\">\n                    <field name=\"NUM\">120<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_forward\" id=\"xbp+RVXe#T[Ue0H98J=d\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"4L-aNLGeN#LWb~1_j]Os\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"GlhiS?C.P.Xff8IwWOeS\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"math_number\" id=\"kkus8;=56Vv\/KdZnSNv}\">\n                            <field name=\"NUM\">120<\/field>\n                          <\/block>\n                        <\/value>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Using a variable to store the side length means that if we wanted to draw a bigger triangle we could just change the value of the <code data-lang=\"py3\">SIDE_LENGTH<\/code> variable once instead of having to change the number for all three sides.\n<\/p>",
      "updated_at":"2017-12-07T04:58:47.100749+00:00",
      "label":"aca-blockly-logo-equilateral-triangle",
      "content":"<p>\n  Write a Turtle program to draw an equilateral triangle, with the sides being 100 turtle steps long. All angles in an equilateral triangle are 60\u00b0.\n<\/p>\n<p>\n  The output of your program should look like this:\n<\/p>\n\n\n<div class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"f639c5c6-19d2-11e7-9ad2-22000af41c08\"]\n[\"create_shape\",\"f639e4e8-19d2-11e7-9ad2-22000af41c08\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"filled\":true,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0]}]\n[\"forward\",100]\n[\"left\",2.0943951023931953]\n[\"forward\",100]\n[\"left\",2.0943951023931953]\n[\"forward\",100]\n[\"left\",2.0943951023931953]\n[\"end_animation\"]\n<\/code><\/div>\n\n\n<p>The <em>bottom left corner<\/em> of the triangle is where the turtle starts.<\/p>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>You need to do an angle calculation to draw this shape!<\/p>\n<\/aside>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\"]",
      "teacher_notes":"<p>The tricky part of working with the turtle is imagining the instructions from the perspective of the turtle. To draw the triangle so that the angle between each side is 60\u00b0, the turtle actually needs to turn 120\u00b0.<\/p>\n\n<p>In the sample solution we stored the length of each side as a variable <code data-lang=\"py3\">SIDE_LENGTH<\/code> but it also works to write the side length every time the turtle moves forward like this:<\/p>\n\n<pre class=\"js-editor-blockly\" data-runnable=\"false\" data-eg-id=\"blockly-constants-teacher\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_forward\" id=\"]\/n6dp4FiP3$I_mOhJTN\" x=\"10\" y=\"10\">\n    <value name=\"DISTANCE\">\n      <block type=\"math_number\" id=\"Ben*Oskt4eoL?CTPT6s_\">\n        <field name=\"NUM\">100<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_turn\" id=\"LcHgQ$=usH-N%.aaW%$1\">\n        <field name=\"DIRECTION\">LEFT<\/field>\n        <value name=\"ANGLE\">\n          <block type=\"math_number\" id=\"uzWjKUq~*i=4)]J1RP\/r\">\n            <field name=\"NUM\">120<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"oHw[`!kF\/QQtIl9ccSG1\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"4Ti!~4T~RM?0V+BvecB7\">\n                <field name=\"NUM\">100<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn\" id=\"VY5L^2+*h+01Fol@T-x(\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <value name=\"ANGLE\">\n                  <block type=\"math_number\" id=\"Ap,+`2?nh3BqXQteqc7#\">\n                    <field name=\"NUM\">120<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_forward\" id=\"xbp+RVXe#T[Ue0H98J=d\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"4L-aNLGeN#LWb~1_j]Os\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn\" id=\"GlhiS?C.P.Xff8IwWOeS\">\n                        <field name=\"DIRECTION\">LEFT<\/field>\n                        <value name=\"ANGLE\">\n                          <block type=\"math_number\" id=\"kkus8;=56Vv\/KdZnSNv}\">\n                            <field name=\"NUM\">120<\/field>\n                          <\/block>\n                        <\/value>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Using a variable to store the side length means that if we wanted to draw a bigger triangle we could just change the value of the <code data-lang=\"py3\">SIDE_LENGTH<\/code> variable once instead of having to change the number for all three sides.<\/p>"
    },
    {
      "language":1,
      "title":"Scaleable House",
      "notes":"",
      "updated_at":"2017-12-10T12:07:25.457075+00:00",
      "label":"aca-blockly-logo-variable-scaleable-house",
      "content":"<p>\n  You would have already learned about enlargement transformations - where we can take any shape and then scale it up by multiplying all of the sides by the same number. We'll use this transformation to draw a house of any size!\n<\/p>\n\n<p>\n  Write a program which asks the user what size the house floor is (in turtle steps), the scale they want the house to be transformed by, and then uses the turtle to draw the house.\n<\/p>\n<p>\n  The triangle at the top should have angles that are all 60\u00b0 and all sides of the house should be the same number of turtle steps.\n  Here's an example of a 50 turtle step house, scaled by 2 (so the sides all end up 50 &times; 2 = 100 steps long).\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Size: <\/o><i>50<\/i>\n<o>Scale: <\/o><i>2<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"35721502-7c42-11e5-ab3e-22000afaa3ca\"]\n[\"create_shape\",\"35722bb4-7c42-11e5-ab3e-22000afaa3ca\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"fillcolor\":[0,0,0],\"pensize\":1,\"pencolor\":[0,0,0]}]\n[\"input_begin\",\"Size: \"]\n[\"input_end\"]\n[\"left\",1.0471975511965976]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",-2.0943951023931953]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The top left corner of the square is where the turtle starts.\n<\/p>\n\n<p>Here's another example of a much smaller house:<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Size: <\/o><i>10<\/i>\n<o>Scale: <\/o><i>3<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\"><code data-lang=\"logo\">\n{\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"width\":400,\"height\":300,\"bgcolor\":[255,255,255],\"shapes\":[{\"points\":[[0.0,0.0],[15.000000000000004,25.980762113533157],[30.000000000000007,0.0],[7.105427357601002e-15,-9.64873589805982e-15],[1.594516761437913e-15,-30.00000000000001],[30.0,-30.00000000000001],[30.000000000000004,-1.0658141036401503e-14]],\"filled\":false,\"id\":\"cf5e8e96-77a3-11e5-b354-22000a06912f\",\"kind\":\"line\",\"pencolor\":[0,0,0],\"pensize\":1}],\"zerox\":200}\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Copy Blocks<\/h2>\n  <p>Did you know you can copy blocks you've already made? Just right-click on the block in your answer and choose Duplicate!<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"What's the time?",
      "notes":"",
      "updated_at":"2017-07-25T13:08:08.156552+00:00",
      "label":"aca-blockly-logo-clock-angle",
      "content":"<p>\n  The numbers on a clock face are evenly spaced, with the number 12 at the top. Since there are twelve numbers on a clock and 360\u00b0 in a circle, the angle between each number on the clock face is 360\u00b0&nbsp;\u00f7&nbsp;12&nbsp;=&nbsp;30\u00b0. This means the number 1 is 30\u00b0 to the right of the 12, 2 is 60\u00b0 right from the 12, and so on.\n<\/p>\n\n<p>Write a program where the turtle asks <code data-lang=\"out\">What time is it?<\/code> and then draws that time. The user will only ever type in a single number from 1 to 12, and the time is always that number \"o'clock\". The minute hand should be 80 turtle steps long, and the hour hand 30 turtle steps long.<\/p>\n\n<figure class=\"align-center\">\n  <img alt=\"12-hour analog clock face showing the time 12:14\" src=\"https:\/\/groklearning-cdn.com\/problems\/nnK4Ni2qGZginVEEQSBekd\/1214Clock.png\" width=\"80%\">\n  <figcaption>This clock shows that the time is 12:14<\/figcaption>\n<\/figure>\n\n<p>Here's an example of a 1 o'clock:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>What time is it? <\/o><i>1<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"py3\">\n[\"begin_animation\",400,300,10,\"ade3c410-6951-11e7-b910-22000afd18d3\"]\n[\"create_shape\",\"ade3d662-6951-11e7-b910-22000afd18d3\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"pensize\":1}]\n[\"left\",1.5707963267948966]\n[\"forward\",80]\n[\"forward\",-80]\n[\"left\",-0.5235987755982988]\n[\"forward\",30]\n[\"forward\",-30]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>Here's an example at 7 o'clock:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>What time is it? <\/o><i>7<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"py3\">\n[\"begin_animation\",400,300,10,\"c9942aba-6951-11e7-80d6-22000afc90c9\"]\n[\"create_shape\",\"c9943ac8-6951-11e7-80d6-22000afc90c9\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pensize\":1,\"filled\":true,\"pencolor\":[0,0,0]}]\n[\"left\",1.5707963267948966]\n[\"forward\",80]\n[\"forward\",-80]\n[\"left\",-3.6651914291880923]\n[\"forward\",30]\n[\"forward\",-30]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The turtle starts <em>in the centre<\/em> of the clock, so you need to work out your angles from there.\n<\/p>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>There is a relationship between the hour and the angle that you can use to write a simple equation for your turn angle.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Draw any angle, backwards!",
      "notes":"",
      "updated_at":"2017-07-25T13:07:55.254474+00:00",
      "label":"aca-blockly-logo-draw-any-angle-backwards",
      "content":"<p>You're going to write a program similar to the last one where the turtle asks <code data-lang=\"out\">What angle?<\/code> and then draws an angle of that size. This time, make the lines 80 turtle steps long, but draw them from the left!<\/p>\n\n<p>Here's an example of a 40\u00b0 angle:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>What angle? <\/o><i>40<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"py3\">\n[\"begin_animation\",400,300,10,\"af86d4fe-694e-11e7-a3d5-22000af41688\"]\n[\"create_shape\",\"af86e5c0-694e-11e7-a3d5-22000af41688\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"filled\":true}]\n[\"forward\",80]\n[\"forward\",-80]\n[\"left\",0.6981317007977318]\n[\"forward\",80]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>Here's an example with a bigger angle, 120\u00b0:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>What angle? <\/o><i>120<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"py3\">\n[\"begin_animation\",400,300,10,\"d266af1c-694e-11e7-acd5-22000afc90c9\"]\n[\"create_shape\",\"d266bf2a-694e-11e7-acd5-22000afc90c9\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true,\"pensize\":1}]\n[\"forward\",80]\n[\"forward\",-80]\n[\"left\",2.0943951023931953]\n[\"forward\",80]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Hint: Use the backward block<\/h2>\n  <p>This question gets a lot easier when you use the backward block!<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Any coloured square",
      "notes":"",
      "updated_at":"2017-08-14T01:05:50.557456+00:00",
      "label":"aca-blockly-logo-any-coloured-square",
      "content":"<p>\n  Write a program that allows you to draw any coloured square you can think of! It should do this by using a black pen of thickness 5 to draw a 100 &times; 100 square, then filling that square in with a colour defined by three values, typed in by the user. Your program should ask the user for their red component first, then the green, then the blue, just like in this example:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Red: <\/o><i>255<\/i>\n<o>Green: <\/o><i>165<\/i>\n<o>Blue: <\/o><i>0<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"eb21d780-744c-11e7-841b-22000af40079\"]\n[\"create_shape\",\"eb21e81a-744c-11e7-841b-22000af40079\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0]}]\n[\"pen\",{\"pencolor\":[0,0,0],\"fillcolor\":[255,165,0],\"speed\":3,\"tilt\":0.0,\"pendown\":true,\"pensize\":1,\"heading\":0.0,\"filled\":false,\"shown\":true}]\n[\"begin_fill\"]\n[\"pen\",{\"pensize\":5}]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The turtle starts at the bottom-left corner of the square.\n<\/p>\n\n<p>\n  Here's another example with different values:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Red: <\/o><i>170<\/i>\n<o>Green: <\/o><i>32<\/i>\n<o>Blue: <\/o><i>216<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"width\":400,\"height\":300,\"bgcolor\":[255,255,255],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"51c882e0-744d-11e7-a914-22000a078169\",\"kind\":\"fill\",\"points\":[[0.0,0.0],[100.0,0.0],[100.0,100.0],[0.0,100.00000000000001],[-1.8369701987210297e-14,1.4210854715202004e-14]],\"fillcolor\":[170,32,216]},{\"id\":\"51c8aa4a-744d-11e7-a914-22000a078169\",\"kind\":\"line\",\"points\":[[0.0,0.0],[100.0,0.0],[100.0,100.0],[0.0,100.00000000000001],[-1.8369701987210297e-14,1.4210854715202004e-14]],\"pensize\":5,\"pencolor\":[0,0,0],\"filled\":false}]}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Pixel",
      "notes":"",
      "updated_at":"2017-08-14T01:05:59.619862+00:00",
      "label":"aca-blockly-logo-pixel",
      "content":"<p>\n  On the first slide in this module we showed you a close up of an LCD screen. In this problem, you're going to write a program that draws a zoomed in view of a single pixel.\n<\/p>\n\n<p>\n  Ask the user for a value, then use this value to draw the individual red, green and blue parts of the pixel. Your pixel will be a square with side lengths of 60 steps, and the red, green and blue parts will be equal in width. Your pen should be the same colour as the part it is drawing, since we do not want to see any lines on the screen.\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Value: <\/o><i>255<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"006dce22-7453-11e7-aef5-22000afd18d3\"]\n[\"create_shape\",\"006de24a-7453-11e7-aef5-22000afd18d3\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"fillcolor\":[0,0,0],\"filled\":true,\"pencolor\":[0,0,0]}]\n[\"pen\",{\"heading\":0.0,\"filled\":false,\"speed\":3,\"pencolor\":[255,0,0],\"shown\":true,\"pensize\":1,\"fillcolor\":[0,0,0],\"tilt\":0.0,\"pendown\":true}]\n[\"pen\",{\"fillcolor\":[255,0,0]}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pencolor\":[0,255,0]}]\n[\"pen\",{\"fillcolor\":[0,255,0]}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pencolor\":[0,0,255]}]\n[\"pen\",{\"fillcolor\":[0,0,255]}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",20]\n[\"end_fill\"]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  The turtle starts at the bottom-left corner of the pixel.\n<\/p>\n\n<p>\n  And another example:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Value: <\/o><i>57<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"width\":400,\"height\":300,\"bgcolor\":[255,255,255],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"12cee614-7453-11e7-9be0-22000a150559\",\"kind\":\"fill\",\"points\":[[0.0,0.0],[20.0,0.0],[20.000000000000004,60.0],[3.552713678800501e-15,60.0],[-7.469107513525677e-15,0.0],[19.999999999999993,0.0]],\"fillcolor\":[57,0,0]},{\"id\":\"12cefb72-7453-11e7-9be0-22000a150559\",\"kind\":\"line\",\"points\":[[0.0,0.0],[20.0,0.0],[20.000000000000004,60.0],[3.552713678800501e-15,60.0],[-7.469107513525677e-15,0.0],[19.999999999999993,0.0]],\"pensize\":1,\"pencolor\":[57,0,0],\"filled\":false},{\"id\":\"12cf7e44-7453-11e7-9be0-22000a150559\",\"kind\":\"fill\",\"points\":[[19.999999999999993,0.0],[39.99999999999999,0.0],[40.0,60.0],[20.0,60.0],[19.99999999999999,0.0],[39.999999999999986,0.0]],\"fillcolor\":[0,57,0]},{\"id\":\"12cf9618-7453-11e7-9be0-22000a150559\",\"kind\":\"line\",\"points\":[[19.999999999999993,0.0],[39.99999999999999,0.0],[40.0,60.0],[20.0,60.0],[19.99999999999999,0.0],[39.999999999999986,0.0]],\"pensize\":1,\"pencolor\":[0,57,0],\"filled\":false},{\"id\":\"12d01462-7453-11e7-9be0-22000a150559\",\"kind\":\"fill\",\"points\":[[39.999999999999986,0.0],[59.999999999999986,0.0],[59.99999999999999,60.0],[39.99999999999999,60.0],[39.99999999999998,0.0],[59.99999999999998,0.0]],\"fillcolor\":[0,0,57]},{\"id\":\"12d02baa-7453-11e7-9be0-22000a150559\",\"kind\":\"line\",\"points\":[[39.999999999999986,0.0],[59.999999999999986,0.0],[59.99999999999999,60.0],[39.99999999999999,60.0],[39.99999999999998,0.0],[59.99999999999998,0.0]],\"pensize\":1,\"pencolor\":[0,0,57],\"filled\":false}]}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Wooden Fence",
      "notes":"<p>\n  To solve this question, we'll need to work through a few different steps. We'll need to:\n<\/p>\n\n<ol>\n  <li>ask the user how many planks to draw;<\/li>\n  <li>move into the starting position;<\/li>\n  <li>actually draw the planks.<\/li>\n<\/ol>\n\n<p>To start off, we need to ask <bk class=\"str\"><bk class=\"inner\">How many planks?<\/bk><\/bk>:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" movable=\"false\" x=\"15\" y=\"15\">\n    <field name=\"VAR\">nplanks<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">How many planks?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Once we know how many planks we want to draw we have to move to the very left of the screen to get into position. To do this, we'll need to pick the <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk>, so we don't end up drawing a line:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol2\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pen\" id=\"1\" x=\"10\" y=\"10\">\n    <field name=\"STATE\">UP<\/field>\n    <next>\n      <block type=\"turtle_backward\" id=\"2\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"3\">\n            <field name=\"NUM\">200<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pen\" id=\"4\">\n            <field name=\"STATE\">DOWN<\/field>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Before we start drawing, we need to make sure that the pen is set to the right colour:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol3\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pencolor_text\" id=\"37\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"38\">\n        <field name=\"TEXT\">brown<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Next, we need to work out the code that will draw one plank. Since a plank is a rectangle, we can draw one short side and one long side, then repeat this. After that, we move into position, ready to start the next plan. This makes it easier for us to change this later, and keeps our code short:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol4\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"irX^!R%-Akp3]GqwW.#K\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"Pe@JwupIPnxS*N#D(L-l\">\n        <field name=\"NUM\">2<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"`H81vDA)YS04G[6TL!3Z\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"Qq;;.6XI_sCLo2=z~*V$\">\n            <field name=\"NUM\">10<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"`R$z[zBA1O}BRlY5{_W(\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"eqH=OR;-`MM_3VeOhY8r\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"C85~2l.DjEi68cT;|sy{\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"BrUUOywGRfkUGCRr,+3f\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n    <next>\n      <block type=\"turtle_forward\" id=\"uFI\/~j?+tezp;d5r1$F2\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"h6,58Dlx8Wa({LhBT{$i\">\n            <field name=\"NUM\">10<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>Now, we need to draw a number of planks, - the number being <bk class=\"var\"><bk class=\"inner\">nplanks<\/bk><\/bk> that we read in earlier. All this should happen <em>inside<\/em> the <bk class=\"control\">repeat<\/bk> block that runs as many times as there are <bk class=\"var\"><bk class=\"inner\">nplanks<\/bk><\/bk>:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol5\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"EHiC*[O:IWHBket[XV+$\">nplanks<\/variable>\n  <\/variables>\n  <block type=\"loops_repeat_ext\" id=\"d8;(Qkfy|Wlgim$2H-E3\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"variables_get\" id=\")K+_hnE.cOF)9tL9KJj[\">\n        <field name=\"VAR\" id=\"EHiC*[O:IWHBket[XV+$\" variabletype=\"\">nplanks<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"!semWY-F%oAXmEbYeH~9\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"P+89Pt3`d10=B{=;ehRY\">\n            <field name=\"NUM\">2<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"T]f]U(s?fC35Ca;5aUm$\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"nFU}V.!TGcNRpD1-6%?{\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"]AyE-fkapRF)O%tAlpZG\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"5V!,CR*rN|kelv3,P@l0\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"%G7?gwBoK?A=m\/K[58QR\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"k#X?EXDwdewqWItod0:.\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n        <next>\n          <block type=\"turtle_forward\" id=\"IFgyuL7r5vk6vKOU=2V2\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"ov@Jl6;HaFNgSJtARS}z\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n",
      "updated_at":"2017-08-14T01:06:06.532615+00:00",
      "label":"aca-blockly-logo-build-a-fence",
      "content":"<p>\n  To build the whole fence it will take 40 planks of wood, but you don't have that many.\n  Write a program to see how much fence you can build with the planks that you have:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>How many planks? <\/o><i>11<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"cea0bf7e-5d35-11e6-832d-22000a068b96\"]\n[\"create_shape\",\"cea0d798-5d35-11e6-832d-22000a068b96\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true,\"pensize\":1}]\n[\"input_begin\",\"How many planks? \"]\n[\"input_end\"]\n[\"pen\",{\"heading\":0.0,\"fillcolor\":[0,0,0],\"pendown\":false,\"pencolor\":[0,0,0],\"tilt\":0.0,\"speed\":3,\"shown\":true,\"filled\":false,\"pensize\":1}]\n[\"forward\",-200]\n[\"pen\",{\"pendown\":true}]\n[\"pen\",{\"pencolor\":[165,42,42],\"fillcolor\":[165,42,42]}]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",-1.5707963267948966]\n[\"forward\",100]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  Your program should start off by moving 200 turtle steps to the left so that it starts off at the left-edge of the screen.\n  Your program should work for any number up to 40 planks.\n<\/p>\n\n<p>Important things to note:<\/p>\n<ul>\n  <li>All lines should use pen colour <bk class=\"str lit\"><bk class=\"inner\">brown<\/bk><\/bk>;<\/li>\n  <li>Each plank should be 100 steps high and 10 steps wide;<\/li>\n  <li>The top of the fence should be the center of the space.<\/li>\n<\/ul>\n\n<p>\n  Here's another example:\n<\/p>\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>How many planks? <\/o><i>25<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\" style=\"display: none\">\n{\"scaley\":1.0,\"shapes\":[{\"pencolor\":[165,42,42],\"points\":[[-200.0,0.0],[-190.0,0.0],[-190.00000000000003,-100.0],[-200.00000000000003,-100.0],[-200.00000000000003,0.0],[-190.00000000000003,0.0],[-180.00000000000003,0.0],[-180.00000000000006,-100.0],[-190.00000000000006,-100.0],[-190.00000000000006,0.0],[-180.00000000000006,0.0],[-170.00000000000006,0.0],[-170.00000000000009,-100.0],[-180.00000000000009,-100.0],[-180.00000000000009,0.0],[-170.00000000000009,0.0],[-160.00000000000009,0.0],[-160.0000000000001,-100.0],[-170.0000000000001,-100.0],[-170.0000000000001,0.0],[-160.0000000000001,0.0],[-150.0000000000001,0.0],[-150.00000000000014,-100.0],[-160.00000000000014,-100.0],[-160.00000000000014,0.0],[-150.00000000000014,0.0],[-140.00000000000014,0.0],[-140.00000000000017,-100.0],[-150.00000000000017,-100.0],[-150.00000000000017,0.0],[-140.00000000000017,0.0],[-130.00000000000017,0.0],[-130.0000000000002,-100.0],[-140.0000000000002,-100.0],[-140.0000000000002,0.0],[-130.0000000000002,0.0],[-120.0000000000002,0.0],[-120.00000000000021,-100.0],[-130.00000000000023,-100.0],[-130.00000000000023,0.0],[-120.00000000000023,0.0],[-110.00000000000023,0.0],[-110.00000000000024,-100.0],[-120.00000000000024,-100.0],[-120.00000000000024,0.0],[-110.00000000000024,0.0],[-100.00000000000024,0.0],[-100.00000000000026,-100.0],[-110.00000000000026,-100.0],[-110.00000000000026,0.0],[-100.00000000000026,0.0],[-90.00000000000026,0.0],[-90.00000000000027,-100.0],[-100.00000000000027,-100.0],[-100.00000000000027,0.0],[-90.00000000000027,0.0],[-80.00000000000027,0.0],[-80.00000000000028,-100.0],[-90.00000000000028,-100.0],[-90.00000000000028,0.0],[-80.00000000000028,0.0],[-70.00000000000028,0.0],[-70.0000000000003,-100.0],[-80.0000000000003,-100.0],[-80.0000000000003,0.0],[-70.0000000000003,0.0],[-60.0000000000003,0.0],[-60.00000000000032,-100.0],[-70.00000000000031,-100.0],[-70.00000000000031,0.0],[-60.00000000000031,0.0],[-50.00000000000031,0.0],[-50.000000000000334,-100.0],[-60.000000000000334,-100.0],[-60.00000000000033,0.0],[-50.00000000000033,0.0],[-40.00000000000033,0.0],[-40.00000000000035,-100.0],[-50.00000000000035,-100.0],[-50.00000000000034,0.0],[-40.00000000000034,0.0],[-30.00000000000034,0.0],[-30.00000000000036,-100.0],[-40.000000000000355,-100.0],[-40.00000000000035,0.0],[-30.000000000000348,0.0],[-20.000000000000348,0.0],[-20.000000000000366,-100.0],[-30.000000000000366,-100.0],[-30.00000000000036,0.0],[-20.00000000000036,0.0],[-10.000000000000359,0.0],[-10.000000000000377,-100.0],[-20.000000000000377,-100.0],[-20.00000000000037,0.0],[-10.00000000000037,0.0],[-3.694822225952521e-13,0.0],[-3.878519245824624e-13,-100.0],[-10.000000000000387,-100.0],[-10.000000000000382,0.0],[-3.8191672047105385e-13,0.0],[9.999999999999618,0.0],[9.9999999999996,-100.0],[-3.9968028886505635e-13,-100.0],[-3.935570548693196e-13,0.0],[9.999999999999606,0.0],[19.999999999999606,0.0],[19.999999999999588,-100.0],[9.999999999999588,-100.0],[9.999999999999593,0.0],[19.999999999999595,0.0],[29.999999999999595,0.0],[29.999999999999577,-100.0],[19.999999999999577,-100.0],[19.999999999999584,0.0],[29.999999999999584,0.0],[39.99999999999959,0.0],[39.99999999999957,-100.0],[29.999999999999567,-100.0],[29.999999999999574,0.0],[39.999999999999574,0.0],[49.999999999999574,0.0],[49.99999999999955,-100.0],[39.99999999999955,-100.0],[39.99999999999956,0.0],[49.99999999999956,0.0]],\"pensize\":1,\"filled\":false,\"kind\":\"line\",\"id\":\"2bca2d12-5d35-11e6-ad62-22000ae85508\"}],\"zerox\":200,\"height\":300,\"zeroy\":150,\"width\":400,\"scalex\":1.0,\"bgcolor\":[255,255,255]}\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>You can use a loop to make one fence post, and then a loop to draw the fence itself.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\"]",
      "teacher_notes":"<p>\n  To solve this question, we'll need to work through a few different steps. We'll need to:\n<\/p>\n\n<ol>\n  <li>ask the user how many planks to draw;<\/li>\n  <li>move into the starting position;<\/li>\n  <li>actually draw the planks.<\/li>\n<\/ol>\n\n<p>To start off, we need to ask <bk class=\"str\"><bk class=\"inner\">How many planks?<\/bk><\/bk>:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" movable=\"false\" x=\"15\" y=\"15\">\n    <field name=\"VAR\">nplanks<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">How many planks?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Once we know how many planks we want to draw we have to move to the very left of the screen to get into position. To do this, we'll need to pick the <bk class=\"lib\">pen <bk class=\"inner\">up<\/bk><\/bk>, so we don't end up drawing a line:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol2\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pen\" id=\"1\" x=\"10\" y=\"10\">\n    <field name=\"STATE\">UP<\/field>\n    <next>\n      <block type=\"turtle_backward\" id=\"2\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"3\">\n            <field name=\"NUM\">200<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_pen\" id=\"4\">\n            <field name=\"STATE\">DOWN<\/field>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>Before we start drawing, we need to make sure that the pen is set to the right colour:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol3\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pencolor_text\" id=\"37\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"38\">\n        <field name=\"TEXT\">brown<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Next, we need to work out the code that will draw one plank. Since a plank is a rectangle, we can draw one short side and one long side, then repeat this. After that, we move into position, ready to start the next plan. This makes it easier for us to change this later, and keeps our code short:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol4\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables><\/variables>\n  <block type=\"loops_repeat_ext\" id=\"irX^!R%-Akp3]GqwW.#K\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"math_number\" id=\"Pe@JwupIPnxS*N#D(L-l\">\n        <field name=\"NUM\">2<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_forward\" id=\"`H81vDA)YS04G[6TL!3Z\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"Qq;;.6XI_sCLo2=z~*V$\">\n            <field name=\"NUM\">10<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"`R$z[zBA1O}BRlY5{_W(\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"eqH=OR;-`MM_3VeOhY8r\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"C85~2l.DjEi68cT;|sy{\">\n                    <field name=\"NUM\">100<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"BrUUOywGRfkUGCRr,+3f\">\n                    <field name=\"DIRECTION\">RIGHT<\/field>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n    <next>\n      <block type=\"turtle_forward\" id=\"uFI\/~j?+tezp;d5r1$F2\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"h6,58Dlx8Wa({LhBT{$i\">\n            <field name=\"NUM\">10<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n\n<p>Now, we need to draw a number of planks, - the number being <bk class=\"var\"><bk class=\"inner\">nplanks<\/bk><\/bk> that we read in earlier. All this should happen <em>inside<\/em> the <bk class=\"control\">repeat<\/bk> block that runs as many times as there are <bk class=\"var\"><bk class=\"inner\">nplanks<\/bk><\/bk>:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"bk-logo-build-a-fence-sol5\" data-runnable=\"false\"><code data-lang=\"blockly\">\n<xml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <variables>\n    <variable type=\"\" id=\"EHiC*[O:IWHBket[XV+$\">nplanks<\/variable>\n  <\/variables>\n  <block type=\"loops_repeat_ext\" id=\"d8;(Qkfy|Wlgim$2H-E3\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"variables_get\" id=\")K+_hnE.cOF)9tL9KJj[\">\n        <field name=\"VAR\" id=\"EHiC*[O:IWHBket[XV+$\" variabletype=\"\">nplanks<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"loops_repeat_ext\" id=\"!semWY-F%oAXmEbYeH~9\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\" id=\"P+89Pt3`d10=B{=;ehRY\">\n            <field name=\"NUM\">2<\/field>\n          <\/block>\n        <\/value>\n        <statement name=\"DO\">\n          <block type=\"turtle_forward\" id=\"T]f]U(s?fC35Ca;5aUm$\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"nFU}V.!TGcNRpD1-6%?{\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn_simple\" id=\"]AyE-fkapRF)O%tAlpZG\">\n                <field name=\"DIRECTION\">RIGHT<\/field>\n                <next>\n                  <block type=\"turtle_forward\" id=\"5V!,CR*rN|kelv3,P@l0\">\n                    <value name=\"DISTANCE\">\n                      <block type=\"math_number\" id=\"%G7?gwBoK?A=m\/K[58QR\">\n                        <field name=\"NUM\">100<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_turn_simple\" id=\"k#X?EXDwdewqWItod0:.\">\n                        <field name=\"DIRECTION\">RIGHT<\/field>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/statement>\n        <next>\n          <block type=\"turtle_forward\" id=\"IFgyuL7r5vk6vKOU=2V2\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"ov@Jl6;HaFNgSJtARS}z\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/xml>\n<\/code><\/pre>\n"
    },
    {
      "language":1,
      "title":"Daisy Chains",
      "notes":"<p>\n  This problem is another example where you should use a loop <em>inside<\/em> a loop!\n<p>\n  \n<p>\n  As usual, we start with getting the input from the user - both the number of flowers and the number of petals per flower.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-0\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">flowers<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">Number of flowers:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"4\" inline=\"true\">\n        <field name=\"VAR\">petals<\/field>\n        <value name=\"VALUE\">\n          <block type=\"io_ask_num\" id=\"5\" inline=\"true\">\n            <value name=\"TEXT\">\n              <block type=\"text\" id=\"6\">\n                <field name=\"TEXT\">Petals on each flower:<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Then we need to figure out the angles that we're going to need to turn by. As with previous questions, we end up doing a full rotation, so the angles needed are:\n$$$\n  \\text{flower angle} =  \\frac{360^{\\circ}}{\\text{flowers}}\n$$$\n$$$\n  \\text{petal angle} =  \\frac{360^{\\circ}}{\\text{petals}}\n$$$\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"7\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">flower angle<\/field>\n    <value name=\"VALUE\">\n      <block type=\"math_arithmetic\" id=\"8\" inline=\"true\">\n        <field name=\"OP\">DIVIDE<\/field>\n        <value name=\"A\">\n          <block type=\"math_number\" id=\"9\">\n            <field name=\"NUM\">360<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"B\">\n          <block type=\"variables_get\" id=\"10\">\n            <field name=\"VAR\">flowers<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"11\" inline=\"true\">\n        <field name=\"VAR\">petal angle<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" id=\"12\" inline=\"true\">\n            <field name=\"OP\">DIVIDE<\/field>\n            <value name=\"A\">\n              <block type=\"math_number\" id=\"13\">\n                <field name=\"NUM\">360<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"variables_get\" id=\"14\">\n                <field name=\"VAR\">petals<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Then we need to set up the pen size. Note that we don't set the pen colour here!\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-2\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pensize\" id=\"35\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"SIZE\">\n      <block type=\"math_number\" id=\"36\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Now we add the main loop for the flowers. Just like earlier questions which draw polygons, we move foward and turn.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-3\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"71\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"variables_get\" id=\"72\">\n        <field name=\"VAR\">flowers<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_pencolor_text\" id=\"73\" inline=\"true\">\n        <value name=\"COLOR\">\n          <block type=\"text\" id=\"74\">\n            <field name=\"TEXT\">forestgreen<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"75\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"76\">\n                <field name=\"NUM\">40<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn\" id=\"87\" inline=\"true\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <value name=\"ANGLE\">\n                  <block type=\"variables_get\" id=\"88\">\n                    <field name=\"VAR\">flower angle<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Now we need to draw the petals on the end of each flower. Let's look at that on its own:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-4\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"111\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"variables_get\" id=\"112\">\n        <field name=\"VAR\">petals<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_pencolor_text\" id=\"113\" inline=\"true\">\n        <value name=\"COLOR\">\n          <block type=\"text\" id=\"114\">\n            <field name=\"TEXT\">violet<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"115\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"116\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_backward\" id=\"117\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"118\">\n                    <field name=\"NUM\">10<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"119\" inline=\"true\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"variables_get\" id=\"120\">\n                        <field name=\"VAR\">petal angle<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  It's very similar to the flower loop, but instead we use \"petals\" and \"petal angle\", and we match every forward movement with a backward movement. The important thing to notice about drawing petals is that the turtle ends up in exactly the same place and orientation as where it started.\n<\/p>\n\n<p>\n  Finally, we put the petal drawing loop inside the flower drawing loop, just before it turns to draw the next petal. Because the petal loop puts the turtle back where it started, it doesn't affect the way the flowers are drawn.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-5\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"139\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"variables_get\" id=\"140\">\n        <field name=\"VAR\">flowers<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_pencolor_text\" id=\"141\" inline=\"true\">\n        <value name=\"COLOR\">\n          <block type=\"text\" id=\"142\">\n            <field name=\"TEXT\">forestgreen<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"143\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"144\">\n                <field name=\"NUM\">40<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"loops_repeat_ext\" id=\"145\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\" id=\"146\">\n                    <field name=\"VAR\">petals<\/field>\n                  <\/block>\n                <\/value>\n                <statement name=\"DO\">\n                  <block type=\"turtle_pencolor_text\" id=\"147\" inline=\"true\">\n                    <value name=\"COLOR\">\n                      <block type=\"text\" id=\"148\">\n                        <field name=\"TEXT\">violet<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"149\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"150\">\n                            <field name=\"NUM\">10<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_backward\" id=\"151\" inline=\"true\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"152\">\n                                <field name=\"NUM\">10<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn\" id=\"153\" inline=\"true\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <value name=\"ANGLE\">\n                                  <block type=\"variables_get\" id=\"154\">\n                                    <field name=\"VAR\">petal angle<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/statement>\n                <next>\n                  <block type=\"turtle_turn\" id=\"155\" inline=\"true\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"variables_get\" id=\"156\">\n                        <field name=\"VAR\">flower angle<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Now we see why it's important for the pen colour change blocks to be inside the loop - otherwise the second flower would still have the color set by the petal loop.\n<\/p>\n",
      "updated_at":"2017-08-14T01:06:13.667196+00:00",
      "label":"aca-blockly-logo-daisy-chains",
      "content":"<p>\n  Ever picked some daisies and made a daisy chain crown or necklace? Let's draw a daisy chain with the turtle!\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Number of flowers: <\/o><i>1<\/i>\n<o>Petals on each flower: <\/o><i>5<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-final\" data-eg-id=\"\" data-io=\"false\"><code data-lang=\"logo\">\n{\"scalex\":1.0,\"scaley\":1.0,\"bgcolor\":[255,255,255],\"width\":400,\"zeroy\":150,\"height\":300,\"shapes\":[{\"points\":[[0.0,0.0],[40.0,0.0]],\"filled\":false,\"id\":\"1918dd78-6cec-11e6-bb2d-22000a15493c\",\"kind\":\"line\",\"pencolor\":[34,139,34],\"pensize\":4},{\"points\":[[40.0,0.0],[50.0,0.0],[40.0,0.0],[43.09016994374947,9.510565162951535],[40.0,0.0],[31.909830056250527,5.877852522924733],[40.0,0.0],[31.909830056250524,-5.87785252292473],[40.0,0.0],[43.09016994374947,-9.510565162951536],[40.0,0.0]],\"filled\":false,\"id\":\"1918fc22-6cec-11e6-bb2d-22000a15493c\",\"kind\":\"line\",\"pencolor\":[238,130,238],\"pensize\":4}],\"zerox\":200}\n<\/code><\/pre>\n\n<p>\n  When there's more than 2 flowers it should form a circle like this:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Number of flowers: <\/o><i>5<\/i>\n<o>Petals on each flower: <\/o><i>5<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-eg-id=\"\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"a49693be-6ceb-11e6-961a-22000af404a2\"]\n[\"create_shape\",\"a496aae8-6ceb-11e6-961a-22000af404a2\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0]}]\n[\"input_begin\",\"Number of flowers: \"]\n[\"input_end\"]\n[\"input_begin\",\"Petals on each flower: \"]\n[\"input_end\"]\n[\"pen\",{\"pensize\":4,\"pencolor\":[0,0,0],\"shown\":true,\"fillcolor\":[0,0,0],\"filled\":false,\"speed\":3,\"heading\":0.0,\"pendown\":true,\"tilt\":0.0}]\n[\"pen\",{\"pencolor\":[34,139,34]}]\n[\"forward\",40]\n[\"pen\",{\"pencolor\":[238,130,238]}]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"left\",1.2566370614359172]\n[\"pen\",{\"pencolor\":[34,139,34],\"heading\":1.2566370614359172}]\n[\"forward\",40]\n[\"pen\",{\"pencolor\":[238,130,238]}]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"left\",1.2566370614359172]\n[\"pen\",{\"pencolor\":[34,139,34],\"heading\":2.5132741228718345}]\n[\"forward\",40]\n[\"pen\",{\"pencolor\":[238,130,238]}]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"left\",1.2566370614359172]\n[\"pen\",{\"pencolor\":[34,139,34],\"heading\":3.7699111843077517}]\n[\"forward\",40]\n[\"pen\",{\"pencolor\":[238,130,238]}]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"left\",1.2566370614359172]\n[\"pen\",{\"pencolor\":[34,139,34],\"heading\":5.026548245743669}]\n[\"forward\",40]\n[\"pen\",{\"pencolor\":[238,130,238]}]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"forward\",10]\n[\"forward\",-10]\n[\"left\",1.2566370614359172]\n[\"left\",1.2566370614359172]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>Some details:<\/p>\n<ul>\n  <li>All lines should use pen size 4.<\/li>\n  <li>The stems of each flower should be <code data-lang=\"py3\">'forestgreen'<\/code>.<\/li>\n  <li>Each stem should be 40 steps long.<\/li>\n  <li>The petals of each flower should be <code data-lang=\"py3\">'violet'<\/code>.<\/li>\n  <li>Each petal should be 10 steps long.<\/li>\n  <li>The first petal should be in the same direction as the stalk.<\/li>\n<\/ul>\n\n<p>\n  Here's an example with lots of lowers with more petals on each flower:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"py3\"><o>Number of flowers: <\/o><i>10<\/i>\n<o>Petals on each flower: <\/o><i>7<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"logo\">\n{\"zerox\":200,\"zeroy\":150,\"height\":300,\"bgcolor\":[255,255,255],\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"points\":[[0.0,0.0],[40.0,0.0]],\"filled\":false,\"pencolor\":[34,139,34],\"pensize\":4,\"kind\":\"line\",\"id\":\"419a612c-6cec-11e6-afda-22000a06002e\"},{\"points\":[[40.0,0.0],[50.0,0.0],[40.0,0.0],[46.23489801858734,7.818314824680298],[40.0,0.0],[37.77479066043686,9.749279121818237],[40.0,0.0],[30.99031132097581,4.338837391175582],[40.0,0.0],[30.990311320975806,-4.33883739117558],[40.0,0.0],[37.77479066043686,-9.749279121818237],[40.0,0.0],[46.23489801858733,-7.818314824680299],[40.0,0.0]],\"filled\":false,\"pencolor\":[238,130,238],\"pensize\":4,\"kind\":\"line\",\"id\":\"419a7874-6cec-11e6-afda-22000a06002e\"},{\"points\":[[40.0,0.0],[72.36067977499789,23.511410091698927]],\"filled\":false,\"pencolor\":[34,139,34],\"pensize\":4,\"kind\":\"line\",\"id\":\"419b86e2-6cec-11e6-afda-22000a06002e\"},{\"points\":[[72.36067977499789,23.511410091698927],[80.45084971874736,29.38926261462366],[72.36067977499789,23.511410091698927],[72.80932807850304,33.501340757112075],[72.36067977499789,23.511410091698927],[64.82996511496178,30.090797351096054],[72.36067977499789,23.511410091698927],[62.521383889011595,21.72584114371256],[72.36067977499789,23.511410091698927],[67.6219931502679,14.705454773131548],[72.36067977499789,23.511410091698927],[76.29093009153712,14.316132366184421],[72.36067977499789,23.511410091698927],[82.00030838195642,20.851041636032175],[72.36067977499789,23.511410091698927]],\"filled\":false,\"pencolor\":[238,130,238],\"pensize\":4,\"kind\":\"line\",\"id\":\"419b9ede-6cec-11e6-afda-22000a06002e\"},{\"points\":[[72.36067977499789,23.511410091698927],[84.72135954999578,61.553670743505066]],\"filled\":false,\"pencolor\":[34,139,34],\"pensize\":4,\"kind\":\"line\",\"id\":\"419ca59a-6cec-11e6-afda-22000a06002e\"},{\"points\":[[84.72135954999578,61.553670743505066],[87.81152949374525,71.0642359064566],[84.72135954999578,61.553670743505066],[79.21238973547476,69.89940328071809],[84.72135954999578,61.553670743505066],[74.76161661004339,62.4500638325394],[84.72135954999578,61.553670743505066],[77.81073306012713,54.32572210523115],[84.72135954999578,61.553670743505066],[86.06369220817234,51.644173125825716],[84.72135954999578,61.553670743505066],[93.30584748601444,56.424677969446],[84.72135954999578,61.553670743505066],[94.08370825639315,65.0674189843185],[84.72135954999578,61.553670743505066]],\"filled\":false,\"pencolor\":[238,130,238],\"pensize\":4,\"kind\":\"line\",\"id\":\"419cbe54-6cec-11e6-afda-22000a06002e\"},{\"points\":[[84.72135954999578,61.553670743505066],[72.36067977499789,99.59593139531121]],\"filled\":false,\"pencolor\":[34,139,34],\"pensize\":4,\"kind\":\"line\",\"id\":\"419dc59c-6cec-11e6-afda-22000a06002e\"},{\"points\":[[72.36067977499789,99.59593139531121],[69.27050983124842,109.10649655826275],[72.36067977499789,99.59593139531121],[62.99833106860052,103.10967963612464],[72.36067977499789,99.59593139531121],[63.77619183897923,94.46693862125215],[72.36067977499789,99.59593139531121],[71.01834711682133,89.68643377763186],[72.36067977499789,99.59593139531121],[79.27130626486654,92.3679827570373],[72.36067977499789,99.59593139531121],[82.32042271495028,100.49232448434554],[72.36067977499789,99.59593139531121],[77.86964958951891,107.94166393252424],[72.36067977499789,99.59593139531121]],\"filled\":false,\"pencolor\":[238,130,238],\"pensize\":4,\"kind\":\"line\",\"id\":\"419de112-6cec-11e6-afda-22000a06002e\"},{\"points\":[[72.36067977499789,99.59593139531121],[40.0,123.10734148701015]],\"filled\":false,\"pencolor\":[34,139,34],\"pensize\":4,\"kind\":\"line\",\"id\":\"419ee008-6cec-11e6-afda-22000a06002e\"},{\"points\":[[40.0,123.10734148701015],[31.909830056250527,128.98519400993487],[40.0,123.10734148701015],[30.36037139304147,120.44697303134339],[40.0,123.10734148701015],[36.06974968346076,113.91206376149565],[40.0,123.10734148701015],[44.738686624729986,114.30138616844276],[40.0,123.10734148701015],[49.839295885986296,121.32177253902378],[40.0,123.10734148701015],[47.53071466003611,129.68672874640728],[40.0,123.10734148701016],[39.55135169649485,133.0972721524233],[40.0,123.10734148701016]],\"filled\":false,\"pencolor\":[238,130,238],\"pensize\":4,\"kind\":\"line\",\"id\":\"419efa52-6cec-11e6-afda-22000a06002e\"},{\"points\":[[40.0,123.10734148701016],[0.0,123.10734148701016]],\"filled\":false,\"pencolor\":[34,139,34],\"pensize\":4,\"kind\":\"line\",\"id\":\"419ff7c2-6cec-11e6-afda-22000a06002e\"},{\"points\":[[0.0,123.10734148701016],[-10.0,123.10734148701016],[0.0,123.10734148701016],[-6.234898018587337,115.28902666232986],[0.0,123.10734148701016],[2.2252093395631425,113.35806236519193],[0.0,123.10734148701016],[9.00968867902419,118.76850409583457],[0.0,123.10734148701016],[9.009688679024192,127.44617887818575],[0.0,123.10734148701016],[2.2252093395631443,132.8566206088284],[0.0,123.10734148701016],[-6.234898018587335,130.92565631169046],[0.0,123.10734148701016]],\"filled\":false,\"pencolor\":[238,130,238],\"pensize\":4,\"kind\":\"line\",\"id\":\"41a01022-6cec-11e6-afda-22000a06002e\"},{\"points\":[[0.0,123.10734148701016],[-32.360679774997905,99.59593139531124]],\"filled\":false,\"pencolor\":[34,139,34],\"pensize\":4,\"kind\":\"line\",\"id\":\"41a17f66-6cec-11e6-afda-22000a06002e\"},{\"points\":[[-32.360679774997905,99.59593139531124],[-40.45084971874738,93.71807887238651],[-32.360679774997905,99.59593139531124],[-32.80932807850306,89.6060007298981],[-32.360679774997905,99.59593139531124],[-24.829965114961798,93.01654413591412],[-32.360679774997905,99.59593139531124],[-22.52138388901161,101.3815003432976],[-32.360679774997905,99.59593139531124],[-27.62199315026792,108.40188671387862],[-32.360679774997905,99.59593139531124],[-36.29093009153714,108.79120912082574],[-32.360679774997905,99.59593139531124],[-42.00030838195644,102.256299850978],[-32.360679774997905,99.59593139531124]],\"filled\":false,\"pencolor\":[238,130,238],\"pensize\":4,\"kind\":\"line\",\"id\":\"41a19a5a-6cec-11e6-afda-22000a06002e\"},{\"points\":[[-32.360679774997905,99.59593139531124],[-44.72135954999581,61.5536707435051]],\"filled\":false,\"pencolor\":[34,139,34],\"pensize\":4,\"kind\":\"line\",\"id\":\"41a2bc00-6cec-11e6-afda-22000a06002e\"},{\"points\":[[-44.72135954999581,61.5536707435051],[-47.81152949374528,52.043105580553565],[-44.72135954999581,61.5536707435051],[-39.21238973547479,53.20793820629207],[-44.72135954999581,61.553670743505094],[-34.76161661004342,60.657277654470754],[-44.72135954999581,61.553670743505094],[-37.81073306012716,68.78161938177901],[-44.72135954999581,61.553670743505094],[-46.06369220817236,71.46316836118444],[-44.72135954999581,61.553670743505094],[-53.30584748601447,66.68266351756415],[-44.72135954999581,61.55367074350509],[-54.08370825639318,58.03992250269166],[-44.72135954999581,61.55367074350509]],\"filled\":false,\"pencolor\":[238,130,238],\"pensize\":4,\"kind\":\"line\",\"id\":\"41a2d0fa-6cec-11e6-afda-22000a06002e\"},{\"points\":[[-44.72135954999581,61.55367074350509],[-32.36067977499792,23.51141009169894]],\"filled\":false,\"pencolor\":[34,139,34],\"pensize\":4,\"kind\":\"line\",\"id\":\"41a3dee6-6cec-11e6-afda-22000a06002e\"},{\"points\":[[-32.36067977499792,23.51141009169894],[-29.270509831248447,14.000844928747405],[-32.36067977499792,23.51141009169894],[-22.99833106860055,19.997661850885514],[-32.36067977499792,23.51141009169894],[-23.77619183897926,28.640402865758002],[-32.36067977499792,23.51141009169894],[-31.018347116821364,33.42090770937829],[-32.36067977499792,23.51141009169894],[-39.27130626486657,30.739358729972857],[-32.36067977499792,23.51141009169894],[-42.32042271495031,22.615017002664608],[-32.36067977499792,23.51141009169894],[-37.86964958951894,15.165677554485915],[-32.36067977499792,23.51141009169894]],\"filled\":false,\"pencolor\":[238,130,238],\"pensize\":4,\"kind\":\"line\",\"id\":\"41a3f7be-6cec-11e6-afda-22000a06002e\"},{\"points\":[[-32.36067977499792,23.51141009169894],[-2.842170943040401e-14,7.105427357601002e-15]],\"filled\":false,\"pencolor\":[34,139,34],\"pensize\":4,\"kind\":\"line\",\"id\":\"41a4ef7a-6cec-11e6-afda-22000a06002e\"},{\"points\":[[-2.842170943040401e-14,7.105427357601002e-15],[8.090169943749444,-5.8778525229247265],[-2.842170943040401e-14,7.105427357601002e-15],[9.639628606958503,2.660368455666758],[-2.842170943040401e-14,7.105427357601002e-15],[3.930250316539208,9.195277725514513],[-2.842170943040401e-14,7.105427357601002e-15],[-4.738686624730014,8.805955318567387],[-2.842170943040401e-14,7.105427357601002e-15],[-9.839295885986324,1.7855689479863748],[-2.842170943040401e-14,7.105427357601002e-15],[-7.530714660036139,-6.579387259397118],[-2.842170943040401e-14,7.105427357601002e-15],[0.44864830350511903,-9.98993066541314],[-2.842170943040401e-14,7.105427357601002e-15]],\"filled\":false,\"pencolor\":[238,130,238],\"pensize\":4,\"kind\":\"line\",\"id\":\"41a50d8e-6cec-11e6-afda-22000a06002e\"}],\"width\":400}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\"]",
      "teacher_notes":"<p>\n  This problem is another example where you should use a loop <em>inside<\/em> a loop!\n<p>\n  \n<p>\n  As usual, we start with getting the input from the user - both the number of flowers and the number of petals per flower.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-0\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"1\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">flowers<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"2\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"3\">\n            <field name=\"TEXT\">Number of flowers:<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"4\" inline=\"true\">\n        <field name=\"VAR\">petals<\/field>\n        <value name=\"VALUE\">\n          <block type=\"io_ask_num\" id=\"5\" inline=\"true\">\n            <value name=\"TEXT\">\n              <block type=\"text\" id=\"6\">\n                <field name=\"TEXT\">Petals on each flower:<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Then we need to figure out the angles that we're going to need to turn by. As with previous questions, we end up doing a full rotation, so the angles needed are:\n$$$\n  \\text{flower angle} =  \\frac{360^{\\circ}}{\\text{flowers}}\n$$$\n$$$\n  \\text{petal angle} =  \\frac{360^{\\circ}}{\\text{petals}}\n$$$\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"7\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">flower angle<\/field>\n    <value name=\"VALUE\">\n      <block type=\"math_arithmetic\" id=\"8\" inline=\"true\">\n        <field name=\"OP\">DIVIDE<\/field>\n        <value name=\"A\">\n          <block type=\"math_number\" id=\"9\">\n            <field name=\"NUM\">360<\/field>\n          <\/block>\n        <\/value>\n        <value name=\"B\">\n          <block type=\"variables_get\" id=\"10\">\n            <field name=\"VAR\">flowers<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"variables_set\" id=\"11\" inline=\"true\">\n        <field name=\"VAR\">petal angle<\/field>\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" id=\"12\" inline=\"true\">\n            <field name=\"OP\">DIVIDE<\/field>\n            <value name=\"A\">\n              <block type=\"math_number\" id=\"13\">\n                <field name=\"NUM\">360<\/field>\n              <\/block>\n            <\/value>\n            <value name=\"B\">\n              <block type=\"variables_get\" id=\"14\">\n                <field name=\"VAR\">petals<\/field>\n              <\/block>\n            <\/value>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Then we need to set up the pen size. Note that we don't set the pen colour here!\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-2\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pensize\" id=\"35\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"SIZE\">\n      <block type=\"math_number\" id=\"36\">\n        <field name=\"NUM\">4<\/field>\n      <\/block>\n    <\/value>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Now we add the main loop for the flowers. Just like earlier questions which draw polygons, we move foward and turn.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-3\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"71\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"variables_get\" id=\"72\">\n        <field name=\"VAR\">flowers<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_pencolor_text\" id=\"73\" inline=\"true\">\n        <value name=\"COLOR\">\n          <block type=\"text\" id=\"74\">\n            <field name=\"TEXT\">forestgreen<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"75\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"76\">\n                <field name=\"NUM\">40<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_turn\" id=\"87\" inline=\"true\">\n                <field name=\"DIRECTION\">LEFT<\/field>\n                <value name=\"ANGLE\">\n                  <block type=\"variables_get\" id=\"88\">\n                    <field name=\"VAR\">flower angle<\/field>\n                  <\/block>\n                <\/value>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Now we need to draw the petals on the end of each flower. Let's look at that on its own:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-4\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"111\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"variables_get\" id=\"112\">\n        <field name=\"VAR\">petals<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_pencolor_text\" id=\"113\" inline=\"true\">\n        <value name=\"COLOR\">\n          <block type=\"text\" id=\"114\">\n            <field name=\"TEXT\">violet<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"115\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"116\">\n                <field name=\"NUM\">10<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"turtle_backward\" id=\"117\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"118\">\n                    <field name=\"NUM\">10<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn\" id=\"119\" inline=\"true\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"variables_get\" id=\"120\">\n                        <field name=\"VAR\">petal angle<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  It's very similar to the flower loop, but instead we use \"petals\" and \"petal angle\", and we match every forward movement with a backward movement. The important thing to notice about drawing petals is that the turtle ends up in exactly the same place and orientation as where it started.\n<\/p>\n\n<p>\n  Finally, we put the petal drawing loop inside the flower drawing loop, just before it turns to draw the next petal. Because the petal loop puts the turtle back where it started, it doesn't affect the way the flowers are drawn.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"eg-logo-daisy-chain-solution-notes-5\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"loops_repeat_ext\" id=\"139\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"TIMES\">\n      <block type=\"variables_get\" id=\"140\">\n        <field name=\"VAR\">flowers<\/field>\n      <\/block>\n    <\/value>\n    <statement name=\"DO\">\n      <block type=\"turtle_pencolor_text\" id=\"141\" inline=\"true\">\n        <value name=\"COLOR\">\n          <block type=\"text\" id=\"142\">\n            <field name=\"TEXT\">forestgreen<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_forward\" id=\"143\" inline=\"true\">\n            <value name=\"DISTANCE\">\n              <block type=\"math_number\" id=\"144\">\n                <field name=\"NUM\">40<\/field>\n              <\/block>\n            <\/value>\n            <next>\n              <block type=\"loops_repeat_ext\" id=\"145\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\" id=\"146\">\n                    <field name=\"VAR\">petals<\/field>\n                  <\/block>\n                <\/value>\n                <statement name=\"DO\">\n                  <block type=\"turtle_pencolor_text\" id=\"147\" inline=\"true\">\n                    <value name=\"COLOR\">\n                      <block type=\"text\" id=\"148\">\n                        <field name=\"TEXT\">violet<\/field>\n                      <\/block>\n                    <\/value>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"149\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"150\">\n                            <field name=\"NUM\">10<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_backward\" id=\"151\" inline=\"true\">\n                            <value name=\"DISTANCE\">\n                              <block type=\"math_number\" id=\"152\">\n                                <field name=\"NUM\">10<\/field>\n                              <\/block>\n                            <\/value>\n                            <next>\n                              <block type=\"turtle_turn\" id=\"153\" inline=\"true\">\n                                <field name=\"DIRECTION\">LEFT<\/field>\n                                <value name=\"ANGLE\">\n                                  <block type=\"variables_get\" id=\"154\">\n                                    <field name=\"VAR\">petal angle<\/field>\n                                  <\/block>\n                                <\/value>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/statement>\n                <next>\n                  <block type=\"turtle_turn\" id=\"155\" inline=\"true\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <value name=\"ANGLE\">\n                      <block type=\"variables_get\" id=\"156\">\n                        <field name=\"VAR\">flower angle<\/field>\n                      <\/block>\n                    <\/value>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/statement>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Now we see why it's important for the pen colour change blocks to be inside the loop - otherwise the second flower would still have the color set by the petal loop.\n<\/p>\n"
    },
    {
      "language":1,
      "title":"Solitaire",
      "notes":"\n<p>This question can be tricky, if you aren't quite sure how to draw a card. It can be good to start by setting the background, pen size and drawing a single card. You can also make sure you get the fill operation correct:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"solitaire-solution-notes-part1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_bgcolor_text\" id=\"29\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"30\">\n        <field name=\"TEXT\">forestgreen<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pensize\" id=\"50\" inline=\"true\">\n        <value name=\"SIZE\">\n          <block type=\"math_number\" id=\"51\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_fill_text\" id=\"87\" inline=\"true\">\n            <value name=\"COLOR\">\n              <block type=\"text\" id=\"89\">\n                <field name=\"TEXT\">white<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block type=\"turtle_forward\" id=\"70\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"71\">\n                    <field name=\"NUM\">40<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"108\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"109\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"110\">\n                            <field name=\"NUM\">60<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"111\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"114\" inline=\"true\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"115\">\n                                    <field name=\"NUM\">40<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"112\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"116\" inline=\"true\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"117\">\n                                            <field name=\"NUM\">60<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_turn_simple\" id=\"113\">\n                                            <field name=\"DIRECTION\">LEFT<\/field>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  This will draw a single white card on a green background. But, we want to draw many!\n<\/p>\n\n<p>\n  Before drawing the next card, we want to make sure the turtle is in the right position facing the right direction. Otherwise, the next card will just be drawn on top of this first card. Let's move the turtle backward 10 steps (since it's facing to the right after drawing the card) and down 10 steps in a little wiggle.\n<\/p>\n\n<p>\n  The important part is that the turtle should still be facing to the right at the end of the wiggle, so we're ready to draw the next card.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"solitaire-solution-notes-wiggle\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pen\" id=\"24\" x=\"10\" y=\"10\">\n    <field name=\"STATE\">UP<\/field>\n    <next>\n      <block type=\"turtle_backward\" id=\"25\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"26\">\n            <field name=\"NUM\">10<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"27\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"28\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"29\">\n                    <field name=\"NUM\">10<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"30\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <next>\n                      <block type=\"turtle_pen\" id=\"31\">\n                        <field name=\"STATE\">DOWN<\/field>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  It's a good idea to test this by drawing 2 cards (to make sure the second one is drawn in the right place), but we'll just go ahead and draw all cards.\n<\/p>\n\n<p>\n  At the top of your program, add a line that asks the user for how many cards to draw, then we want to repeat our card-drawing code that many times:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"solitaire-solution-repeat-part\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"36\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">cards<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"37\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"38\">\n            <field name=\"TEXT\">How many cards?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"loops_repeat_ext\" id=\"39\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"variables_get\" id=\"40\">\n            <field name=\"VAR\">cards<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Putting it all together, we have a working program.\n<\/p>",
      "updated_at":"2017-08-14T01:08:00.925323+00:00",
      "label":"aca-blockly-logo-solitaire-win",
      "content":"<p>\n  When you win at <a href=\"https:\/\/en.wikipedia.org\/wiki\/Microsoft_Solitaire\" target=\"_blank\">Microsoft Solitaire<\/a> the piles of cards bounce out at you!\n<\/p>\n  \n<figure class=\"align-center\">\n  <img alt=\"Screenshot of Microsoft Solitaire, Windows XP version. The game shows piles of playing cards bouncing on a green background.\" src=\"https:\/\/groklearning-cdn.com\/problems\/cMF5MoznpwbjErq5BPUYTa\/solitaire.jpg\">\n  <figcaption>Screenshot used with permission from Microsoft.<\/figcaption>\n<\/figure>\n\n<p>Write a program to draw a pile of cards! Your program should ask how many cards in the pile, and draw that many.<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>How many cards? <\/o><i>5<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"fd0455a6-65e1-11e6-9a67-22000afa0190\"]\n[\"create_shape\",\"fd046cf8-65e1-11e6-9a67-22000afa0190\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"filled\":true}]\n[\"bgcolor\",[34,139,34]]\n[\"pen\",{\"speed\":3,\"pencolor\":[0,0,0],\"filled\":false,\"tilt\":0.0,\"pensize\":4,\"heading\":0.0,\"fillcolor\":[0,0,0],\"shown\":true,\"pendown\":true}]\n[\"pen\",{\"fillcolor\":[255,255,255]}]\n[\"input_begin\",\"How many cards? \"]\n[\"input_end\"]\n[\"begin_fill\"]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-10]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":true}]\n[\"begin_fill\"]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-10]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":true}]\n[\"begin_fill\"]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-10]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":true}]\n[\"begin_fill\"]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-10]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":true}]\n[\"begin_fill\"]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-10]\n[\"left\",-1.5707963267948966]\n[\"forward\",10]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":true}]\n<\/code><\/pre>\n\n<p>\n  Some details:\n<\/p>\n<ul>\n  <li>The background should be coloured <code data-lang=\"py3\">'forestgreen'<\/code>.<\/li>\n  <li>The first card's bottom-left corner should be in the centre of the space (where the turtle starts).<\/li>\n  <li>The pen should be <code data-lang=\"py3\">'black'<\/code> and size 4.<\/li>\n  <li>The fill colour <code data-lang=\"py3\">'white'<\/code>.<\/li>\n  <li>Each card should be 40 steps wide and 60 steps high.<\/li>\n  <li>Each card is 10 steps lower and 10 steps to the left of the card below.<\/li>\n<\/ul>\n\n<p>Here's an example with more cards!:<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>How many cards? <\/o><i>14<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-io=\"false\"><code data-lang=\"logo\">\n{\"scalex\":1.0,\"bgcolor\":[34,139,34],\"height\":300,\"shapes\":[{\"points\":[[0.0,0.0],[40.0,0.0],[40.00000000000001,60.0],[7.105427357601002e-15,60.00000000000001],[-3.916393834725176e-15,7.105427357601002e-15]],\"id\":\"33ecbc52-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[0.0,0.0],[40.0,0.0],[40.00000000000001,60.0],[7.105427357601002e-15,60.00000000000001],[-3.916393834725176e-15,7.105427357601002e-15]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33ecd502-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-10.000000000000005,-9.999999999999993],[29.999999999999993,-9.999999999999993],[29.999999999999996,50.00000000000001],[-10.000000000000004,50.000000000000014],[-10.000000000000014,-9.999999999999986]],\"id\":\"33ed8948-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-10.000000000000005,-9.999999999999993],[29.999999999999993,-9.999999999999993],[29.999999999999996,50.00000000000001],[-10.000000000000004,50.000000000000014],[-10.000000000000014,-9.999999999999986]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33eda018-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-20.000000000000018,-19.999999999999986],[19.999999999999982,-19.999999999999986],[19.999999999999986,40.000000000000014],[-20.000000000000014,40.00000000000002],[-20.000000000000025,-19.99999999999998]],\"id\":\"33ee5b2a-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-20.000000000000018,-19.999999999999986],[19.999999999999982,-19.999999999999986],[19.999999999999986,40.000000000000014],[-20.000000000000014,40.00000000000002],[-20.000000000000025,-19.99999999999998]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33ee7308-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-30.00000000000003,-29.99999999999998],[9.999999999999972,-29.99999999999998],[9.999999999999975,30.00000000000002],[-30.000000000000025,30.000000000000025],[-30.000000000000036,-29.999999999999975]],\"id\":\"33ef1f88-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-30.00000000000003,-29.99999999999998],[9.999999999999972,-29.99999999999998],[9.999999999999975,30.00000000000002],[-30.000000000000025,30.000000000000025],[-30.000000000000036,-29.999999999999975]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33ef3504-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-40.000000000000036,-39.99999999999997],[-3.552713678800501e-14,-39.99999999999997],[-3.185319639056295e-14,20.00000000000003],[-40.00000000000003,20.000000000000032],[-40.00000000000004,-39.99999999999997]],\"id\":\"33efe2ce-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-40.000000000000036,-39.99999999999997],[-3.552713678800501e-14,-39.99999999999997],[-3.185319639056295e-14,20.00000000000003],[-40.00000000000003,20.000000000000032],[-40.00000000000004,-39.99999999999997]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33efff02-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-50.00000000000004,-49.99999999999997],[-10.000000000000043,-49.99999999999997],[-10.000000000000039,10.000000000000028],[-50.00000000000004,10.000000000000034],[-50.00000000000006,-49.999999999999964]],\"id\":\"33f0a6c8-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-50.00000000000004,-49.99999999999997],[-10.000000000000043,-49.99999999999997],[-10.000000000000039,10.000000000000028],[-50.00000000000004,10.000000000000034],[-50.00000000000006,-49.999999999999964]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33f0c23e-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-60.00000000000006,-59.999999999999964],[-20.000000000000057,-59.999999999999964],[-20.000000000000053,3.552713678800501e-14],[-60.00000000000006,4.042572398459442e-14],[-60.00000000000007,-59.99999999999996]],\"id\":\"33f17030-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-60.00000000000006,-59.999999999999964],[-20.000000000000057,-59.999999999999964],[-20.000000000000053,3.552713678800501e-14],[-60.00000000000006,4.042572398459442e-14],[-60.00000000000007,-59.99999999999996]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33f18a16-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-70.00000000000007,-69.99999999999996],[-30.00000000000007,-69.99999999999996],[-30.000000000000068,-9.999999999999957],[-70.00000000000007,-9.999999999999952],[-70.00000000000009,-69.99999999999996]],\"id\":\"33f24000-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-70.00000000000007,-69.99999999999996],[-30.00000000000007,-69.99999999999996],[-30.000000000000068,-9.999999999999957],[-70.00000000000007,-9.999999999999952],[-70.00000000000009,-69.99999999999996]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33f25540-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-80.00000000000009,-79.99999999999996],[-40.000000000000085,-79.99999999999996],[-40.00000000000008,-19.999999999999957],[-80.00000000000009,-19.999999999999954],[-80.0000000000001,-79.99999999999996]],\"id\":\"33f300b2-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-80.00000000000009,-79.99999999999996],[-40.000000000000085,-79.99999999999996],[-40.00000000000008,-19.999999999999957],[-80.00000000000009,-19.999999999999954],[-80.0000000000001,-79.99999999999996]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33f317aa-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-90.0000000000001,-89.99999999999996],[-50.0000000000001,-89.99999999999996],[-50.00000000000009,-29.999999999999957],[-90.00000000000009,-29.999999999999954],[-90.0000000000001,-89.99999999999996]],\"id\":\"33f3cca4-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-90.0000000000001,-89.99999999999996],[-50.0000000000001,-89.99999999999996],[-50.00000000000009,-29.999999999999957],[-90.00000000000009,-29.999999999999954],[-90.0000000000001,-89.99999999999996]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33f3eac2-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-100.0000000000001,-99.99999999999996],[-60.0000000000001,-99.99999999999996],[-60.00000000000009,-39.99999999999996],[-100.00000000000009,-39.99999999999995],[-100.0000000000001,-99.99999999999994]],\"id\":\"33f4a3d6-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-100.0000000000001,-99.99999999999996],[-60.0000000000001,-99.99999999999996],[-60.00000000000009,-39.99999999999996],[-100.00000000000009,-39.99999999999995],[-100.0000000000001,-99.99999999999994]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33f4bfa6-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-110.0000000000001,-109.99999999999994],[-70.0000000000001,-109.99999999999994],[-70.0000000000001,-49.99999999999994],[-110.0000000000001,-49.999999999999936],[-110.00000000000011,-109.99999999999994]],\"id\":\"33f55e7a-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-110.0000000000001,-109.99999999999994],[-70.0000000000001,-109.99999999999994],[-70.0000000000001,-49.99999999999994],[-110.0000000000001,-49.999999999999936],[-110.00000000000011,-109.99999999999994]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33f57aea-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-120.00000000000011,-119.99999999999994],[-80.00000000000011,-119.99999999999994],[-80.00000000000011,-59.99999999999994],[-120.00000000000011,-59.999999999999936],[-120.00000000000013,-119.99999999999994]],\"id\":\"33f62936-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-120.00000000000011,-119.99999999999994],[-80.00000000000011,-119.99999999999994],[-80.00000000000011,-59.99999999999994],[-120.00000000000011,-59.999999999999936],[-120.00000000000013,-119.99999999999994]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33f64704-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false},{\"points\":[[-130.0000000000001,-129.99999999999994],[-90.00000000000011,-129.99999999999994],[-90.00000000000011,-69.99999999999994],[-130.0000000000001,-69.99999999999994],[-130.0000000000001,-129.99999999999994]],\"id\":\"33f70acc-65e2-11e6-a3f0-22000ae810ca\",\"fillcolor\":[255,255,255],\"kind\":\"fill\"},{\"points\":[[-130.0000000000001,-129.99999999999994],[-90.00000000000011,-129.99999999999994],[-90.00000000000011,-69.99999999999994],[-130.0000000000001,-69.99999999999994],[-130.0000000000001,-129.99999999999994]],\"pencolor\":[0,0,0],\"pensize\":4,\"id\":\"33f725e8-65e2-11e6-a3f0-22000ae810ca\",\"kind\":\"line\",\"filled\":false}],\"scaley\":1.0,\"width\":400,\"zeroy\":150,\"zerox\":200}\n<\/code><\/pre>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_pensize\",\"turtle_bgcolor_text\",\"turtle_fill_text\"]",
      "teacher_notes":"\n<p>This question can be tricky, if you aren't quite sure how to draw a card. It can be good to start by setting the background, pen size and drawing a single card. You can also make sure you get the fill operation correct:<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"solitaire-teacher-notes-part1\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_bgcolor_text\" id=\"29\" inline=\"true\" x=\"10\" y=\"10\">\n    <value name=\"COLOR\">\n      <block type=\"text\" id=\"30\">\n        <field name=\"TEXT\">forestgreen<\/field>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"turtle_pensize\" id=\"50\" inline=\"true\">\n        <value name=\"SIZE\">\n          <block type=\"math_number\" id=\"51\">\n            <field name=\"NUM\">4<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_fill_text\" id=\"87\" inline=\"true\">\n            <value name=\"COLOR\">\n              <block type=\"text\" id=\"89\">\n                <field name=\"TEXT\">white<\/field>\n              <\/block>\n            <\/value>\n            <statement name=\"DO\">\n              <block type=\"turtle_forward\" id=\"70\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"71\">\n                    <field name=\"NUM\">40<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"108\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <next>\n                      <block type=\"turtle_forward\" id=\"109\" inline=\"true\">\n                        <value name=\"DISTANCE\">\n                          <block type=\"math_number\" id=\"110\">\n                            <field name=\"NUM\">60<\/field>\n                          <\/block>\n                        <\/value>\n                        <next>\n                          <block type=\"turtle_turn_simple\" id=\"111\">\n                            <field name=\"DIRECTION\">LEFT<\/field>\n                            <next>\n                              <block type=\"turtle_forward\" id=\"114\" inline=\"true\">\n                                <value name=\"DISTANCE\">\n                                  <block type=\"math_number\" id=\"115\">\n                                    <field name=\"NUM\">40<\/field>\n                                  <\/block>\n                                <\/value>\n                                <next>\n                                  <block type=\"turtle_turn_simple\" id=\"112\">\n                                    <field name=\"DIRECTION\">LEFT<\/field>\n                                    <next>\n                                      <block type=\"turtle_forward\" id=\"116\" inline=\"true\">\n                                        <value name=\"DISTANCE\">\n                                          <block type=\"math_number\" id=\"117\">\n                                            <field name=\"NUM\">60<\/field>\n                                          <\/block>\n                                        <\/value>\n                                        <next>\n                                          <block type=\"turtle_turn_simple\" id=\"113\">\n                                            <field name=\"DIRECTION\">LEFT<\/field>\n                                          <\/block>\n                                        <\/next>\n                                      <\/block>\n                                    <\/next>\n                                  <\/block>\n                                <\/next>\n                              <\/block>\n                            <\/next>\n                          <\/block>\n                        <\/next>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/statement>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  This will draw a single white card on a green background. But, we want to draw many!\n<\/p>\n\n<p>\n  Before drawing the next card, we want to make sure the turtle is in the right position facing the right direction. Otherwise, the next card will just be drawn on top of this first card. Let's move the turtle backward 10 steps (since it's facing to the right after drawing the card) and down 10 steps in a little wiggle.\n<\/p>\n\n<p>\n  The important part is that the turtle should still be facing to the right at the end of the wiggle, so we're ready to draw the next card.\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"solitaire-teacher-notes-wiggle\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"turtle_pen\" id=\"24\" x=\"10\" y=\"10\">\n    <field name=\"STATE\">UP<\/field>\n    <next>\n      <block type=\"turtle_backward\" id=\"25\" inline=\"true\">\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\" id=\"26\">\n            <field name=\"NUM\">10<\/field>\n          <\/block>\n        <\/value>\n        <next>\n          <block type=\"turtle_turn_simple\" id=\"27\">\n            <field name=\"DIRECTION\">RIGHT<\/field>\n            <next>\n              <block type=\"turtle_forward\" id=\"28\" inline=\"true\">\n                <value name=\"DISTANCE\">\n                  <block type=\"math_number\" id=\"29\">\n                    <field name=\"NUM\">10<\/field>\n                  <\/block>\n                <\/value>\n                <next>\n                  <block type=\"turtle_turn_simple\" id=\"30\">\n                    <field name=\"DIRECTION\">LEFT<\/field>\n                    <next>\n                      <block type=\"turtle_pen\" id=\"31\">\n                        <field name=\"STATE\">DOWN<\/field>\n                      <\/block>\n                    <\/next>\n                  <\/block>\n                <\/next>\n              <\/block>\n            <\/next>\n          <\/block>\n        <\/next>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  It's a good idea to test this by drawing 2 cards (to make sure the second one is drawn in the right place), but we'll just go ahead and draw all cards.\n<\/p>\n\n<p>\n  At the top of your program, add a line that asks the user for how many cards to draw, then we want to repeat our card-drawing code that many times:\n<\/p>\n\n<pre class=\"js-editor-blockly\" data-eg-id=\"solitaire-teacher-repeat-part\"><code data-lang=\"blockly\">\n<blockly xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n  <block type=\"variables_set\" id=\"36\" inline=\"true\" x=\"10\" y=\"10\">\n    <field name=\"VAR\">cards<\/field>\n    <value name=\"VALUE\">\n      <block type=\"io_ask_num\" id=\"37\" inline=\"true\">\n        <value name=\"TEXT\">\n          <block type=\"text\" id=\"38\">\n            <field name=\"TEXT\">How many cards?<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/value>\n    <next>\n      <block type=\"loops_repeat_ext\" id=\"39\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"variables_get\" id=\"40\">\n            <field name=\"VAR\">cards<\/field>\n          <\/block>\n        <\/value>\n      <\/block>\n    <\/next>\n  <\/block>\n<\/blockly>\n<\/code><\/pre>\n\n<p>\n  Putting it all together, we have a working program.\n<\/p>"
    },
    {
      "language":1,
      "title":"Noooooooooooo",
      "notes":"",
      "updated_at":"2017-08-14T01:08:11.776764+00:00",
      "label":"aca-blockly-logo-nooooooo",
      "content":"<p>\n  Any time a character in a comic, cartoon or some other kind of animated short falls off a cliff or building, we often hear or see the word \"Noooooooo....\" as they fall to their demise. You can use your knowledge of translation to have the turtle draw your own comic text for this exact situation.\n<\/p>\n\n<p>\n  Write a Turtle program to draw the letter N in the top left corner, followed by six letter Os. Some details about the letters:\n<\/p>\n\n<ul>\n  <li>The pen size for all letters should be 5.<\/li>\n  <li>The left and right lines of the N should be 45 turtle steps long and <strong>parallel to each other<\/strong>.<\/li>\n  <li>The diagonal line should be 52 turtle steps long, and should be 30\u00b0 from the top of the left line.<\/li>\n  <li>The starting position for the N will be 180 turtle steps left from the start position, and 130 steps up.<\/li>\n  <li>Each O will be drawn as a square that will have a side length of 35 steps.<\/li>\n  <li>Each letter will be 15 steps to the right of the right edge of the previous letter.<\/li>\n  <li>The first O will be at the same height as the N, but each subsequent O will be 25 steps lower than the previous letter.<\/li>\n<\/ul>\n\n<pre class=\"js-logo-animation\"><code data-lang=\"logo\" style=\"display: none\">\n[\"begin_animation\",400,300,10,\"d3fdeef2-6dd7-11e7-bd9d-22000afc90c9\"]\n[\"create_shape\",\"d3fdffd2-6dd7-11e7-bd9d-22000afc90c9\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true,\"pensize\":1}]\n[\"pen\",{\"speed\":3,\"shown\":true,\"pendown\":false,\"fillcolor\":[0,0,0],\"heading\":0.0,\"tilt\":0.0,\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":false}]\n[\"forward\",-180]\n[\"left\",1.5707963267948966]\n[\"forward\",90]\n[\"pen\",{\"heading\":1.5707963267948966,\"pensize\":5}]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",45]\n[\"left\",-2.6179938779914944]\n[\"forward\",52]\n[\"left\",2.6179938779914944]\n[\"forward\",45]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-45]\n[\"left\",-1.5707963267948966]\n[\"forward\",15]\n[\"pen\",{\"pendown\":true,\"heading\":0.0}]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",35]\n[\"left\",-1.5707963267948966]\n[\"forward\",25]\n[\"left\",1.5707963267948966]\n[\"forward\",15]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",35]\n[\"left\",-1.5707963267948966]\n[\"forward\",25]\n[\"left\",1.5707963267948966]\n[\"forward\",15]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",35]\n[\"left\",-1.5707963267948966]\n[\"forward\",25]\n[\"left\",1.5707963267948966]\n[\"forward\",15]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",35]\n[\"left\",-1.5707963267948966]\n[\"forward\",25]\n[\"left\",1.5707963267948966]\n[\"forward\",15]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",35]\n[\"left\",-1.5707963267948966]\n[\"forward\",25]\n[\"left\",1.5707963267948966]\n[\"forward\",15]\n[\"pen\",{\"pendown\":true}]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",35]\n[\"left\",-1.5707963267948966]\n[\"forward\",25]\n[\"left\",1.5707963267948966]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<br>\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>Work out all of the distances and directions you will need to be translating your letter Os before you start coding - it will make it much easier!<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_arithmetic\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Wind turbine",
      "notes":"",
      "updated_at":"2017-08-14T01:08:19.348484+00:00",
      "label":"aca-blockly-logo-wind-turbine",
      "content":"<p>\n  Modern <a href=\"https:\/\/en.wikipedia.org\/wiki\/Wind_turbine\" target=\"_blank\">wind turbines<\/a> can use any number of blades, with two or three blades the most common. Usually, the blades are all the same shape and evenly spread around the rotor. We can use this information to draw a simple wind turbine using the turtle.\n<\/p>\n\n<p>The details of the wind turbine drawing are:<\/p>\n\n<ul>\n  <li>The background colour is sky blue.<\/li>\n  <li>The base of the turbine is coloured rgb(225, 225, 225).<\/li>\n  <li>The turbine blades are white.<\/li>\n  <li>The base is an isosceles trapezium with dimensions shown in the image below.<\/li>  \n  <li>Each of the blades is a quadrilateral with the dimensions shown in the image below.<\/li>\n  <li>The turtle starts at the centre of the top of the base, which is also the rotation point for the turbine blades.<\/li>\n<\/ul>\n\n<figure class=\"align-center\">\n  <img alt=\"Dimensions for the wind turbine base and blades\" src=\"https:\/\/groklearning-cdn.com\/problems\/WHUihxzusf4wURxPqXtYQ8\/turbine.png\">\n  <figcaption>Dimensions for the wind turbine base and blades<\/figcaption>\n<\/figure>\n\n<p>\n  You've been provided with some starter code that draws the base of the turbine for you, but is using the wrong colours.\n<\/p>\n\n<p>Your program should be able to draw a wind turbine with any number of blades.<\/p>\n\n<p>Since turbine blades are spread evenly in a circle, you will need to calculate the turn angle based on the number of blades chosen by the user.<\/p>\n\n<p>Don't forget that the turtle should return to the correct orientation and rotation point between drawing each blade.<\/p>\n\n<p>Here's what it should look like for 3 blades:<\/p>\n\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"py3\">\n{\"width\":400,\"height\":300,\"bgcolor\":[135,206,235],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"de6ed1e4-6f76-11e7-a1d2-22000afd18d3\",\"kind\":\"fill\",\"points\":[[0.0,0.0],[3.0,0.0],[10.850393436441593,-149.79443021318608],[-9.149606563558407,-149.79443021318608],[-1.2992131271168121,0.0],[1.7007868728831879,0.0]],\"fillcolor\":[225,225,225]},{\"id\":\"de6ee86e-6f76-11e7-a1d2-22000afd18d3\",\"kind\":\"line\",\"points\":[[0.0,0.0],[3.0,0.0],[10.850393436441593,-149.79443021318608],[-9.149606563558407,-149.79443021318608],[-1.2992131271168121,0.0],[1.7007868728831879,0.0]],\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":false},{\"id\":\"de6f6096-6f76-11e7-a1d2-22000afd18d3\",\"kind\":\"fill\",\"points\":[[1.7007868728831879,0.0],[-48.29921312711679,86.60254037844388],[-59.5575433763145,80.10254037844388],[-55.21633893464125,55.48234655313867],[1.3522035602825397,-1.0861959417851494]],\"fillcolor\":[255,255,255]},{\"id\":\"de6f826a-6f76-11e7-a1d2-22000afd18d3\",\"kind\":\"line\",\"points\":[[1.7007868728831879,0.0],[-48.29921312711679,86.60254037844388],[-59.5575433763145,80.10254037844388],[-55.21633893464125,55.48234655313867],[1.3522035602825397,-1.0861959417851494]],\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":false},{\"id\":\"de6fe5fc-6f76-11e7-a1d2-22000afd18d3\",\"kind\":\"fill\",\"points\":[[1.3522035602825397,-1.0861959417851494],[-48.64779643971758,-87.68873632022894],[-37.38946619051989,-94.18873632022895],[-18.238355112545428,-78.11904607806548],[2.467168495656299,-0.8449799749400313]],\"fillcolor\":[255,255,255]},{\"id\":\"de700780-6f76-11e7-a1d2-22000afd18d3\",\"kind\":\"line\",\"points\":[[1.3522035602825397,-1.0861959417851494],[-48.64779643971758,-87.68873632022894],[-37.38946619051989,-94.18873632022895],[-18.238355112545428,-78.11904607806548],[2.467168495656299,-0.8449799749400313]],\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":false},{\"id\":\"de7069e6-6f76-11e7-a1d2-22000afd18d3\",\"kind\":\"fill\",\"points\":[[2.467168495656299,-0.8449799749400313],[102.4671684956563,-0.8449799749402335],[102.46716849565632,12.155020025059766],[78.97485297600863,20.70552360820153],[1.7007868728831284,4.263256414560601e-14]],\"fillcolor\":[255,255,255]},{\"id\":\"de708c32-6f76-11e7-a1d2-22000afd18d3\",\"kind\":\"line\",\"points\":[[2.467168495656299,-0.8449799749400313],[102.4671684956563,-0.8449799749402335],[102.46716849565632,12.155020025059766],[78.97485297600863,20.70552360820153],[1.7007868728831284,4.263256414560601e-14]],\"pensize\":1,\"pencolor\":[0,0,0],\"filled\":false}]}\n<\/code><\/pre>\n\n<p>And for 7 blades:<\/p>\n\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"py3\">\n{\"width\":400,\"height\":300,\"bgcolor\":[135,206,235],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"fa27dc28-6f76-11e7-9097-22000a150559\",\"kind\":\"fill\",\"points\":[[0.0,0.0],[3.0,0.0],[10.850393436441593,-149.79443021318608],[-9.149606563558407,-149.79443021318608],[-1.2992131271168121,0.0],[1.7007868728831879,0.0]],\"fillcolor\":[225,225,225]},{\"id\":\"fa27f21c-6f76-11e7-9097-22000a150559\",\"kind\":\"line\",\"points\":[[0.0,0.0],[3.0,0.0],[10.850393436441593,-149.79443021318608],[-9.149606563558407,-149.79443021318608],[-1.2992131271168121,0.0],[1.7007868728831879,0.0]],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"fa286e54-6f76-11e7-9097-22000a150559\",\"kind\":\"fill\",\"points\":[[1.7007868728831879,0.0],[64.04976705875654,78.18314824680299],[53.88595778667216,86.28851567096652],[32.553685745868265,73.25263558647907],[0.5623238002889508,-0.07234488311900122]],\"fillcolor\":[255,255,255]},{\"id\":\"fa289262-6f76-11e7-9097-22000a150559\",\"kind\":\"line\",\"points\":[[1.7007868728831879,0.0],[64.04976705875654,78.18314824680299],[53.88595778667216,86.28851567096652],[32.553685745868265,73.25263558647907],[0.5623238002889508,-0.07234488311900122]],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"fa28f00e-6f76-11e7-9097-22000a150559\",\"kind\":\"fill\",\"points\":[[0.5623238002889508,-0.07234488311900122],[-21.689769595342483,97.42044633506336],[-34.36383245370619,94.52767419363127],[-37.47242506989331,69.72169402862697],[-0.0909348080483241,-1.007537451741797]],\"fillcolor\":[255,255,255]},{\"id\":\"fa29128c-6f76-11e7-9097-22000a150559\",\"kind\":\"line\",\"points\":[[0.5623238002889508,-0.07234488311900122],[-21.689769595342483,97.42044633506336],[-34.36383245370619,94.52767419363127],[-37.47242506989331,69.72169402862697],[-0.0909348080483241,-1.007537451741797]],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"fa296dea-6f76-11e7-9097-22000a150559\",\"kind\":\"fill\",\"points\":[[-0.0909348080483241,-1.007537451741797],[-90.18782159829024,42.380836460014024],[-95.8283102068185,30.668241177282574],[-78.37238975466667,12.771569945789615],[0.23292810399638597,-2.101358627243524]],\"fillcolor\":[255,255,255]},{\"id\":\"fa29920c-6f76-11e7-9097-22000a150559\",\"kind\":\"line\",\"points\":[[-0.0909348080483241,-1.007537451741797],[-90.18782159829024,42.380836460014024],[-95.8283102068185,30.668241177282574],[-78.37238975466667,12.771569945789615],[0.23292810399638597,-2.101358627243524]],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"fa29ee3c-6f76-11e7-9097-22000a150559\",\"kind\":\"fill\",\"points\":[[0.23292810399638597,-2.101358627243524],[-89.86395868624552,-45.48973253899932],[-84.22347007771727,-57.20232782173077],[-59.347700693582226,-54.713131656835344],[1.2900371580539982,-2.5301387545856358]],\"fillcolor\":[255,255,255]},{\"id\":\"fa2a127c-6f76-11e7-9097-22000a150559\",\"kind\":\"line\",\"points\":[[0.23292810399638597,-2.101358627243524],[-89.86395868624552,-45.48973253899932],[-84.22347007771727,-57.20232782173077],[-59.347700693582226,-54.713131656835344],[1.2900371580539982,-2.5301387545856358]],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"fa2a6ea2-6f76-11e7-9097-22000a150559\",\"kind\":\"fill\",\"points\":[[1.2900371580539982,-2.5301387545856358],[-20.96205623757746,-100.022929972768],[-8.287993379213756,-102.91570211420009],[5.275663217430221,-81.9150540354308],[2.284367675324147,-1.9709976523589177]],\"fillcolor\":[255,255,255]},{\"id\":\"fa2a912a-6f76-11e7-9097-22000a150559\",\"kind\":\"line\",\"points\":[[1.2900371580539982,-2.5301387545856358],[-20.96205623757746,-100.022929972768],[-8.287993379213756,-102.91570211420009],[5.275663217430221,-81.9150540354308],[2.284367675324147,-1.9709976523589177]],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"fa2aef08-6f76-11e7-9097-22000a150559\",\"kind\":\"fill\",\"points\":[[2.284367675324147,-1.9709976523589177],[64.63334786119748,-80.1541458991619],[74.79715713328187,-72.04877847499837],[66.83499087698976,-48.35059482082008],[2.46716849565631,-0.8449799749399247]],\"fillcolor\":[255,255,255]},{\"id\":\"fa2b1406-6f76-11e7-9097-22000a150559\",\"kind\":\"line\",\"points\":[[2.284367675324147,-1.9709976523589177],[64.63334786119748,-80.1541458991619],[74.79715713328187,-72.04877847499837],[66.83499087698976,-48.35059482082008],[2.46716849565631,-0.8449799749399247]],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"fa2b734c-6f76-11e7-9097-22000a150559\",\"kind\":\"fill\",\"points\":[[2.46716849565631,-0.8449799749399247],[102.46716849565631,-0.8449799749399247],[102.46716849565631,12.155020025060075],[78.9748529760086,20.705523608201798],[1.7007868728831284,1.7053025658242404e-13]],\"fillcolor\":[255,255,255]},{\"id\":\"fa2b96ec-6f76-11e7-9097-22000a150559\",\"kind\":\"line\",\"points\":[[2.46716849565631,-0.8449799749399247],[102.46716849565631,-0.8449799749399247],[102.46716849565631,12.155020025060075],[78.9748529760086,20.705523608201798],[1.7007868728831284,1.7053025658242404e-13]],\"pencolor\":[0,0,0],\"pensize\":1,\"filled\":false}]}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[{\"content\":\"<xml xmlns=\\\"http:\\\/\\\/www.w3.org\\\/1999\\\/xhtml\\\">\\n  <variables>\\n  <\\\/variables>\\n  <block type=\\\"turtle_colormode_dropdown\\\" id=\\\"d(opY`;a.k;G~!7]6=cL\\\" x=\\\"10\\\" y=\\\"10\\\">\\n    <field name=\\\"COLORMODE\\\">255<\\\/field>\\n    <next>\\n      <block type=\\\"turtle_bgcolor_dropdown\\\" id=\\\"$AY,*:.*ujg=Acdzh.14\\\">\\n        <field name=\\\"COLOR\\\">orange<\\\/field>\\n        <next>\\n          <block type=\\\"turtle_fillcolor_rgb\\\" id=\\\"2GKI_IhA#1dt).PVE-+]\\\">\\n            <value name=\\\"RED\\\">\\n              <block type=\\\"math_number\\\" id=\\\"-G\\\/vVu5gm#!CM+ut-]]Q\\\">\\n                <field name=\\\"NUM\\\">0<\\\/field>\\n              <\\\/block>\\n            <\\\/value>\\n            <value name=\\\"GREEN\\\">\\n              <block type=\\\"math_number\\\" id=\\\"OWMzYRaaN(,r{XJWkB?6\\\">\\n                <field name=\\\"NUM\\\">255<\\\/field>\\n              <\\\/block>\\n            <\\\/value>\\n            <value name=\\\"BLUE\\\">\\n              <block type=\\\"math_number\\\" id=\\\"0d{YtM[p]0THT[hrmE[o\\\">\\n                <field name=\\\"NUM\\\">0<\\\/field>\\n              <\\\/block>\\n            <\\\/value>\\n            <statement name=\\\"DO\\\">\\n              <block type=\\\"turtle_forward\\\" id=\\\"m%9fV#BFt[U#f2##vdbF\\\">\\n                <value name=\\\"DISTANCE\\\">\\n                  <block type=\\\"math_number\\\" id=\\\"Etu+XQ5O3Uw0Q#IBVr5R\\\">\\n                    <field name=\\\"NUM\\\">3<\\\/field>\\n                  <\\\/block>\\n                <\\\/value>\\n                <next>\\n                  <block type=\\\"turtle_turn\\\" id=\\\"*A$mmjC.Kd0MgYQtlHlr\\\">\\n                    <field name=\\\"DIRECTION\\\">RIGHT<\\\/field>\\n                    <value name=\\\"ANGLE\\\">\\n                      <block type=\\\"math_number\\\" id=\\\"E@BJ-lN~GU1dHJRzr)#R\\\">\\n                        <field name=\\\"NUM\\\">87<\\\/field>\\n                      <\\\/block>\\n                    <\\\/value>\\n                    <next>\\n                      <block type=\\\"turtle_forward\\\" id=\\\"cd@pfLyRk6j[P.K5q:=E\\\">\\n                        <value name=\\\"DISTANCE\\\">\\n                          <block type=\\\"math_number\\\" id=\\\"J:--Whs0Y}5#$HQB11xt\\\">\\n                            <field name=\\\"NUM\\\">150<\\\/field>\\n                          <\\\/block>\\n                        <\\\/value>\\n                        <next>\\n                          <block type=\\\"turtle_turn\\\" id=\\\"6piQ==2~y+HpNt=N6j^(\\\">\\n                            <field name=\\\"DIRECTION\\\">RIGHT<\\\/field>\\n                            <value name=\\\"ANGLE\\\">\\n                              <block type=\\\"math_number\\\" id=\\\"Dm5pX=eJN8MStCVXD!_Z\\\">\\n                                <field name=\\\"NUM\\\">93<\\\/field>\\n                              <\\\/block>\\n                            <\\\/value>\\n                            <next>\\n                              <block type=\\\"turtle_forward\\\" id=\\\"X,j:jXm%JNlA_AIUR}XR\\\">\\n                                <value name=\\\"DISTANCE\\\">\\n                                  <block type=\\\"math_number\\\" id=\\\"Ef5%FiIc|X)A,w)RHDXx\\\">\\n                                    <field name=\\\"NUM\\\">20<\\\/field>\\n                                  <\\\/block>\\n                                <\\\/value>\\n                                <next>\\n                                  <block type=\\\"turtle_turn\\\" id=\\\"wLNxZ|YA+mfd9Ck4(OTn\\\">\\n                                    <field name=\\\"DIRECTION\\\">RIGHT<\\\/field>\\n                                    <value name=\\\"ANGLE\\\">\\n                                      <block type=\\\"math_number\\\" id=\\\"xwN]h[-~4PRC!i#0a}1+\\\">\\n                                        <field name=\\\"NUM\\\">93<\\\/field>\\n                                      <\\\/block>\\n                                    <\\\/value>\\n                                    <next>\\n                                      <block type=\\\"turtle_forward\\\" id=\\\"$Ir]5J`jT^}9QRilOdiK\\\">\\n                                        <value name=\\\"DISTANCE\\\">\\n                                          <block type=\\\"math_number\\\" id=\\\"C3zO!W=\\\/WZ,S4Z{\\\/c7.d\\\">\\n                                            <field name=\\\"NUM\\\">150<\\\/field>\\n                                          <\\\/block>\\n                                        <\\\/value>\\n                                        <next>\\n                                          <block type=\\\"turtle_turn\\\" id=\\\"2M*^aE3KXAD+PCw)IbR[\\\">\\n                                            <field name=\\\"DIRECTION\\\">RIGHT<\\\/field>\\n                                            <value name=\\\"ANGLE\\\">\\n                                              <block type=\\\"math_number\\\" id=\\\"@6db[{,`2u3FsC9z^3^T\\\">\\n                                                <field name=\\\"NUM\\\">87<\\\/field>\\n                                              <\\\/block>\\n                                            <\\\/value>\\n                                            <next>\\n                                              <block type=\\\"turtle_forward\\\" id=\\\"L}l|=}EUuu;*UEi*S@?)\\\">\\n                                                <value name=\\\"DISTANCE\\\">\\n                                                  <block type=\\\"math_number\\\" id=\\\"WH-@5Q~nXjW%YrrJBQ_T\\\">\\n                                                    <field name=\\\"NUM\\\">3<\\\/field>\\n                                                  <\\\/block>\\n                                                <\\\/value>\\n                                              <\\\/block>\\n                                            <\\\/next>\\n                                          <\\\/block>\\n                                        <\\\/next>\\n                                      <\\\/block>\\n                                    <\\\/next>\\n                                  <\\\/block>\\n                                <\\\/next>\\n                              <\\\/block>\\n                            <\\\/next>\\n                          <\\\/block>\\n                        <\\\/next>\\n                      <\\\/block>\\n                    <\\\/next>\\n                  <\\\/block>\\n                <\\\/next>\\n              <\\\/block>\\n            <\\\/statement>\\n          <\\\/block>\\n        <\\\/next>\\n      <\\\/block>\\n    <\\\/next>\\n  <\\\/block>\\n<\\\/xml>\",\"path\":\"program.blockly\",\"is_static\":false,\"undeletable\":true,\"unrenamable\":true}]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Triangle wreath",
      "notes":"",
      "updated_at":"2017-08-14T01:08:27.456425+00:00",
      "label":"aca-blockly-logo-triangle-wreath",
      "content":"<p>\n  A common sight on doors at Christmas is the Christmas <a href=\"https:\/\/en.wikipedia.org\/wiki\/Wreath\" target=\"_blank\">Wreath<\/a>. You can use what you know about rotation to draw a simple wreath made up of triangles.\n<\/p>\n\n<p>Using the turtle, make a wreath with the following properties:<\/p>\n\n<ul>\n  <li>Each leaf of the wreath will be an equilateral triangle with side length 40.<\/li>\n  <li>The colour of each leaf will be rgb(0, 65, 0).<\/li>\n  <li>Each leaf will have an outline that is rgb(225, 0, 0).<\/li>\n  <li>The wreath will have a radius of 50. The radius will extend to the <strong>centre<\/strong> of the base of each leaf triangle.<\/li>\n  <li>The base of the first leaf will be on the horizontal the turtle starts, directly in front of its starting position.<\/li>  \n  <li>The program will ask how many leaves to draw, and will space them out evenly around the circle.<\/li>\n<\/ul>\n\n<p>\n  You should start your program by drawing one leaf, making sure that you position the pen correctly. You can then add a loop to draw the correct number of leaves as required by the user.\n<\/p>\n\n<p>Here's what it should look like for 10 leaves:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"logo\"><o>Leaves: <\/o><i>10<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-eg-id=\"\"><code data-lang=\"py3\">\n[\"begin_animation\",400,300,10,\"e6c8aa46-6f93-11e7-8da9-22000af41688\"]\n[\"create_shape\",\"e6c8b6a8-6f93-11e7-8da9-22000af41688\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"fillcolor\":[0,0,0],\"pencolor\":[0,0,0],\"filled\":true,\"pensize\":1}]\n[\"pen\",{\"pendown\":true,\"pensize\":1,\"pencolor\":[225,0,0],\"heading\":0.0,\"filled\":false,\"shown\":true,\"speed\":3,\"fillcolor\":[0,0,0],\"tilt\":0.0}]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",50]\n[\"pen\",{\"pendown\":true}]\n[\"pen\",{\"fillcolor\":[0,65,0]}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-50]\n[\"left\",0.6283185307179586]\n[\"forward\",50]\n[\"pen\",{\"pendown\":true,\"heading\":0.6283185307179586}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-50]\n[\"left\",0.6283185307179586]\n[\"forward\",50]\n[\"pen\",{\"pendown\":true,\"heading\":1.2566370614359172}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-50]\n[\"left\",0.6283185307179586]\n[\"forward\",50]\n[\"pen\",{\"pendown\":true,\"heading\":1.8849555921538759}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-50]\n[\"left\",0.6283185307179586]\n[\"forward\",50]\n[\"pen\",{\"pendown\":true,\"heading\":2.5132741228718345}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false,\"heading\":2.513274122871833}]\n[\"forward\",-50]\n[\"left\",0.6283185307179586]\n[\"forward\",50]\n[\"pen\",{\"pendown\":true,\"heading\":3.141592653589792}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-50]\n[\"left\",0.6283185307179586]\n[\"forward\",50]\n[\"pen\",{\"pendown\":true,\"heading\":3.7699111843077504}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-50]\n[\"left\",0.6283185307179586]\n[\"forward\",50]\n[\"pen\",{\"pendown\":true,\"heading\":4.398229715025709}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false,\"heading\":4.398229715025708}]\n[\"forward\",-50]\n[\"left\",0.6283185307179586]\n[\"forward\",50]\n[\"pen\",{\"pendown\":true,\"heading\":5.026548245743666}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-50]\n[\"left\",0.6283185307179586]\n[\"forward\",50]\n[\"pen\",{\"pendown\":true,\"heading\":5.654866776461625}]\n[\"begin_fill\"]\n[\"forward\",20]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",40]\n[\"left\",2.0943951023931953]\n[\"forward\",20]\n[\"end_fill\"]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-50]\n[\"left\",0.6283185307179586]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>And here's what a 20 leaf wreath looks like:<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"logo\"><o>Leaves: <\/o><i>20<\/i>\n<o><\/o>\n<\/code><\/pre>\n\n<pre class=\"js-logo-final\" data-eg-id=\"\"><code data-lang=\"py3\">\n{\"width\":400,\"height\":300,\"bgcolor\":[255,255,255],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"a3bddc64-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[50.0,0.0],[70.0,0.0],[50.00000000000001,34.64101615137755],[29.99999999999999,1.4210854715202004e-14],[49.999999999999986,1.4210854715202004e-14]],\"fillcolor\":[0,65,0]},{\"id\":\"a3bdf71c-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[50.0,0.0],[70.0,0.0],[50.00000000000001,34.64101615137755],[29.99999999999999,1.4210854715202004e-14],[49.999999999999986,1.4210854715202004e-14]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3be87b8-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[47.55282581475766,15.450849718747383],[66.57395614066073,21.63118960624633],[36.848163121564966,48.39641386060066],[28.531695488854574,9.27050983124844],[47.55282581475764,15.450849718747389]],\"fillcolor\":[0,65,0]},{\"id\":\"a3be9f6e-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[47.55282581475766,15.450849718747383],[66.57395614066073,21.63118960624633],[36.848163121564966,48.39641386060066],[28.531695488854574,9.27050983124844],[47.55282581475764,15.450849718747389]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3bf2cc2-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[40.450849718747335,29.389262614623675],[56.63118960624628,41.14496766047314],[20.089371300542254,57.414433383505155],[24.270509831248376,17.633557568774222],[40.45084971874732,29.389262614623686]],\"fillcolor\":[0,65,0]},{\"id\":\"a3bf4414-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[40.450849718747335,29.389262614623675],[56.63118960624628,41.14496766047314],[20.089371300542254,57.414433383505155],[24.270509831248376,17.633557568774222],[40.45084971874732,29.389262614623686]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3bfd208-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[29.389262614623608,40.4508497187474],[41.14496766047307,56.63118960624635],[1.3640918457421378,60.8123281369525],[17.63355756877413,24.27050983124846],[29.389262614623593,40.450849718747406]],\"fillcolor\":[0,65,0]},{\"id\":\"a3bfe978-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[29.389262614623608,40.4508497187474],[41.14496766047307,56.63118960624635],[1.3640918457421378,60.8123281369525],[17.63355756877413,24.27050983124846],[29.389262614623593,40.450849718747406]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c0778a-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[15.450849718747309,47.55282581475771],[21.63118960624626,66.57395614066078],[-17.494714423105968,58.25748850795042],[9.270509831248344,28.531695488854638],[15.450849718747293,47.55282581475771]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c08fcc-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[15.450849718747309,47.55282581475771],[21.63118960624626,66.57395614066078],[-17.494714423105968,58.25748850795042],[9.270509831248344,28.531695488854638],[15.450849718747293,47.55282581475771]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c1209a-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-7.687444077514289e-14,50.000000000000036],[-7.564979397599554e-14,70.00000000000003],[-34.641016151377634,50.00000000000004],[-9.947598300641403e-14,30.000000000000025],[-9.825133620726667e-14,50.00000000000003]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c1386e-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-7.687444077514289e-14,50.000000000000036],[-7.564979397599554e-14,70.00000000000003],[-34.641016151377634,50.00000000000004],[-9.947598300641403e-14,30.000000000000025],[-9.825133620726667e-14,50.00000000000003]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c1c61c-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-15.450849718747468,47.55282581475771],[-21.631189606246416,66.57395614066078],[-48.39641386060075,36.84816312156502],[-9.270509831248532,28.531695488854627],[-15.45084971874748,47.552825814757696]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c1ddbe-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-15.450849718747468,47.55282581475771],[-21.631189606246416,66.57395614066078],[-48.39641386060075,36.84816312156502],[-9.270509831248532,28.531695488854627],[-15.45084971874748,47.552825814757696]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c26fae-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-29.38926261462376,40.450849718747385],[-41.14496766047322,56.63118960624634],[-57.414433383505255,20.089371300542318],[-17.633557568774314,24.27050983124841],[-29.389262614623753,40.45084971874738]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c28750-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-29.38926261462376,40.450849718747385],[-41.14496766047322,56.63118960624634],[-57.414433383505255,20.089371300542318],[-17.633557568774314,24.27050983124841],[-29.389262614623753,40.45084971874738]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c32066-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-40.45084971874748,29.389262614623675],[-56.63118960624641,41.14496766047316],[-60.812328136952615,1.3640918457422302],[-24.27050983124856,17.633557568774194],[-40.45084971874749,29.38926261462368]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c33f2e-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-40.45084971874748,29.389262614623675],[-56.63118960624641,41.14496766047316],[-60.812328136952615,1.3640918457422302],[-24.27050983124856,17.633557568774194],[-40.45084971874749,29.38926261462368]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c3f5c2-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-47.55282581475782,15.450849718747406],[-66.57395614066088,21.63118960624638],[-58.257488507950576,-17.49471442310586],[-28.531695488854776,9.270509831248432],[-47.55282581475784,15.450849718747408]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c419b2-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-47.55282581475782,15.450849718747406],[-66.57395614066088,21.63118960624638],[-58.257488507950576,-17.49471442310586],[-28.531695488854776,9.270509831248432],[-47.55282581475784,15.450849718747408]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c4d29e-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-50.000000000000185,4.2538549203441905e-14],[-70.00000000000018,7.163319539274038e-14],[-50.00000000000024,-34.64101615137751],[-30.0000000000002,1.4210854715202004e-14],[-50.0000000000002,4.330550090450047e-14]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c4eee6-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-50.000000000000185,4.2538549203441905e-14],[-70.00000000000018,7.163319539274038e-14],[-50.00000000000024,-34.64101615137751],[-30.0000000000002,1.4210854715202004e-14],[-50.0000000000002,4.330550090450047e-14]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c5a1f6-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-47.552825814757895,-15.45084971874733],[-66.57395614066098,-21.631189606246252],[-36.84816312156526,-48.39641386060063],[-28.531695488854837,-9.270509831248418],[-47.55282581475792,-15.450849718747339]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c5c686-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-47.552825814757895,-15.45084971874733],[-66.57395614066098,-21.631189606246252],[-36.84816312156526,-48.39641386060063],[-28.531695488854837,-9.270509831248418],[-47.55282581475792,-15.450849718747339]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c68666-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-40.45084971874764,-29.389262614623636],[-56.63118960624661,-41.14496766047307],[-20.089371300542602,-57.41443338350514],[-24.27050983124869,-17.6335575687742],[-40.45084971874766,-29.38926261462364]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c6a736-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-40.45084971874764,-29.389262614623636],[-56.63118960624661,-41.14496766047307],[-20.089371300542602,-57.41443338350514],[-24.27050983124869,-17.6335575687742],[-40.45084971874766,-29.38926261462364]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c75f00-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-29.389262614623977,-40.45084971874736],[-41.14496766047347,-56.63118960624628],[-1.36409184574255,-60.81232813695252],[-17.633557568774446,-24.27050983124844],[-29.389262614623966,-40.45084971874734]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c77d64-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-29.389262614623977,-40.45084971874736],[-41.14496766047347,-56.63118960624628],[-1.36409184574255,-60.81232813695252],[-17.633557568774446,-24.27050983124844],[-29.389262614623966,-40.45084971874734]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c836dc-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-15.450849718747707,-47.552825814757696],[-21.631189606246725,-66.57395614066074],[17.49471442310553,-58.25748850795053],[-9.270509831248663,-28.53169548885464],[-15.450849718747701,-47.55282581475768]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c8569e-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-15.450849718747707,-47.552825814757696],[-21.631189606246725,-66.57395614066074],[17.49471442310553,-58.25748850795053],[-9.270509831248663,-28.53169548885464],[-15.450849718747701,-47.55282581475768]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c9148a-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[-3.4136357996145195e-13,-50.00000000000007],[-4.3385536232890653e-13,-70.00000000000007],[34.641016151377194,-50.00000000000021],[-2.6290081223123707e-13,-30.000000000000064],[-3.5539259459869165e-13,-50.000000000000064]],\"fillcolor\":[0,65,0]},{\"id\":\"a3c92df8-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[-3.4136357996145195e-13,-50.00000000000007],[-4.3385536232890653e-13,-70.00000000000007],[34.641016151377194,-50.00000000000021],[-2.6290081223123707e-13,-30.000000000000064],[-3.5539259459869165e-13,-50.000000000000064]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3c9e57c-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[15.450849718747026,-47.55282581475781],[21.631189606245886,-66.57395614066091],[48.39641386060034,-36.84816312156525],[9.270509831248155,-28.5316954888547],[15.450849718747016,-47.5528258147578]],\"fillcolor\":[0,65,0]},{\"id\":\"a3ca03f4-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[15.450849718747026,-47.55282581475781],[21.631189606245886,-66.57395614066091],[48.39641386060034,-36.84816312156525],[9.270509831248155,-28.5316954888547],[15.450849718747016,-47.5528258147578]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3cab4ac-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[29.389262614623334,-40.45084971874756],[41.14496766047272,-56.631189606246565],[57.414433383504885,-20.089371300542595],[17.63355756877393,-24.270509831248557],[29.38926261462332,-40.45084971874756]],\"fillcolor\":[0,65,0]},{\"id\":\"a3cacfdc-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[29.389262614623334,-40.45084971874756],[41.14496766047272,-56.631189606246565],[57.414433383504885,-20.089371300542595],[17.63355756877393,-24.270509831248557],[29.38926261462332,-40.45084971874756]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3cb7964-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[40.45084971874709,-29.389262614623902],[56.63118960624598,-41.14496766047344],[60.81232813695229,-1.3640918457425286],[24.270509831248184,-17.633557568774375],[40.45084971874708,-29.389262614623913]],\"fillcolor\":[0,65,0]},{\"id\":\"a3cb946c-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[40.45084971874709,-29.389262614623902],[56.63118960624598,-41.14496766047344],[60.81232813695229,-1.3640918457425286],[24.270509831248184,-17.633557568774375],[40.45084971874708,-29.389262614623913]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false},{\"id\":\"a3cc3fe8-6f96-11e7-92e6-22000a150559\",\"kind\":\"fill\",\"points\":[[47.55282581475745,-15.450849718747662],[66.57395614066048,-21.6311896062467],[58.25748850795028,17.494714423105556],[28.53169548885439,-9.270509831248638],[47.552825814757426,-15.450849718747676]],\"fillcolor\":[0,65,0]},{\"id\":\"a3cc5d0c-6f96-11e7-92e6-22000a150559\",\"kind\":\"line\",\"points\":[[47.55282581475745,-15.450849718747662],[66.57395614066048,-21.6311896062467],[58.25748850795028,17.494714423105556],[28.53169548885439,-9.270509831248638],[47.552825814757426,-15.450849718747676]],\"pensize\":1,\"pencolor\":[225,0,0],\"filled\":false}]}\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>You will need to think carefully about the position of the turtle and the direction the turtle is facing when you start and end your loop.<\/p>\n<\/aside>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Ring of fire",
      "notes":"",
      "updated_at":"2017-09-11T01:20:59.298383+00:00",
      "label":"aca-blockly-logo-ring-of-fire",
      "content":"<p>\n  Using your newly discovered knowlege of gradients, write a program that draws a ring of fire that gradually changes from red to yellow.\n<\/p>\n\n<p>\n  Your program will behave in the following way:\n<\/p>\n\n<ul>\n  <li>Ask the user <code data-lang=\"py3\">\"How many sides?\"<\/code> the ring has - this can be any number from 3 through to 256.<\/li>\n  <li>Each side of the ring will be 256 &div; <code data-lang=\"py3\">sides<\/code> turtle steps in length.<\/li>\n  <li>The pen colour will start out at rgb(255, 0, 0) and will finish at rgb(255, 255, 0). Each pixel the turtle draws will increase the green value of the colour by one.<\/li>\n  <li>After drawing each pixel, the turtle will turn 360 &div; <code data-lang=\"py3\">sides<\/code> degrees to the left.<\/li>\n<\/ul>\n\n<p>\n  The turtle starts out moving to the right from its starting location.\n<\/p>\n\n<p>\n  Here's an example with a ring of 10 sides:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"logo\"><o>How many sides? <\/o>10\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"b2d821c2-9689-11e7-bfe1-22000afd18d3\"]\n[\"create_shape\",\"b2d83482-9689-11e7-bfe1-22000afd18d3\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pensize\":1,\"fillcolor\":[0,0,0],\"filled\":true,\"pencolor\":[0,0,0]}]\n[\"pen\",{\"heading\":0.0,\"fillcolor\":[0,0,0],\"filled\":false,\"pendown\":true,\"shown\":true,\"tilt\":0.0,\"speed\":0,\"pensize\":1,\"pencolor\":[0,0,0]}]\n[\"pen\",{\"pencolor\":[255,0,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,1,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,2,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,3,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,4,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,5,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,6,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,7,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,8,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,9,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,10,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,11,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,12,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,13,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,14,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,15,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,16,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,17,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,18,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,19,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,20,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,21,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,22,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,23,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,24,0]}]\n[\"forward\",1]\n[\"left\",0.6283185307179586]\n[\"pen\",{\"heading\":0.6283185307179586,\"pencolor\":[255,25,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,26,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,27,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,28,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,29,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,30,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,31,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,32,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,33,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,34,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,35,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,36,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,37,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,38,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,39,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,40,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,41,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,42,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,43,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,44,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,45,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,46,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,47,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,48,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,49,0]}]\n[\"forward\",1]\n[\"left\",0.6283185307179586]\n[\"pen\",{\"heading\":1.2566370614359172,\"pencolor\":[255,50,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,51,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,52,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,53,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,54,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,55,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,56,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,57,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,58,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,59,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,60,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,61,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,62,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,63,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,64,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,65,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,66,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,67,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,68,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,69,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,70,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,71,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,72,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,73,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,74,0]}]\n[\"forward\",1]\n[\"left\",0.6283185307179586]\n[\"pen\",{\"heading\":1.8849555921538759,\"pencolor\":[255,75,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,76,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,77,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,78,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,79,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,80,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,81,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,82,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,83,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,84,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,85,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,86,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,87,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,88,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,89,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,90,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,91,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,92,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,93,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,94,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,95,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,96,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,97,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,98,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,99,0]}]\n[\"forward\",1]\n[\"left\",0.6283185307179586]\n[\"pen\",{\"heading\":2.5132741228718345,\"pencolor\":[255,100,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,101,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,102,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,103,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,104,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,105,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,106,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,107,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,108,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,109,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,110,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,111,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,112,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,113,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,114,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,115,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,116,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,117,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,118,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,119,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,120,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,121,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,122,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,123,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,124,0]}]\n[\"forward\",1]\n[\"left\",0.6283185307179586]\n[\"pen\",{\"heading\":3.141592653589793,\"pencolor\":[255,125,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,126,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,127,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,128,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,129,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,130,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,131,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,132,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,133,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,134,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,135,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,136,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,137,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,138,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,139,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,140,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,141,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,142,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,143,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,144,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,145,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,146,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,147,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,148,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,149,0]}]\n[\"forward\",1]\n[\"left\",0.6283185307179586]\n[\"pen\",{\"heading\":3.7699111843077517,\"pencolor\":[255,150,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,151,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,152,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,153,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,154,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,155,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,156,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,157,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,158,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,159,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,160,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,161,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,162,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,163,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,164,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,165,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,166,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,167,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,168,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,169,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,170,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,171,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,172,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,173,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,174,0]}]\n[\"forward\",1]\n[\"left\",0.6283185307179586]\n[\"pen\",{\"heading\":4.39822971502571,\"pencolor\":[255,175,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,176,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,177,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,178,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,179,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,180,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,181,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,182,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,183,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,184,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,185,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,186,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,187,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,188,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,189,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,190,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,191,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,192,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,193,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,194,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,195,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,196,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,197,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,198,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,199,0]}]\n[\"forward\",1]\n[\"left\",0.6283185307179586]\n[\"pen\",{\"heading\":5.026548245743669,\"pencolor\":[255,200,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,201,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,202,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,203,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,204,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,205,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,206,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,207,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,208,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,209,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,210,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,211,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,212,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,213,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,214,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,215,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,216,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,217,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,218,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,219,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,220,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,221,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,222,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,223,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,224,0]}]\n[\"forward\",1]\n[\"left\",0.6283185307179586]\n[\"pen\",{\"heading\":5.654866776461628,\"pencolor\":[255,225,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,226,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,227,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,228,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,229,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,230,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,231,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,232,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,233,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,234,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,235,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,236,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,237,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,238,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,239,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,240,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,241,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,242,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,243,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,244,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,245,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,246,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,247,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,248,0]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[255,249,0]}]\n[\"forward\",1]\n[\"left\",0.6283185307179586]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  And another example with 64 sides:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"logo\"><o>How many sides? <\/o>64\n<\/code><\/pre>\n\n<pre class=\"js-logo-final\" data-io=\"false\"><code data-lang=\"logo\">\n{\"width\":400,\"height\":300,\"bgcolor\":[255,255,255],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"dbcedc38-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[0.0,0.0],[1.0,0.0]],\"pencolor\":[255,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbcef3d0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[1.0,0.0],[2.0,0.0]],\"pencolor\":[255,1,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbcf1040-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[2.0,0.0],[3.0,0.0]],\"pencolor\":[255,2,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbcf2a58-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[3.0,0.0],[4.0,0.0]],\"pencolor\":[255,3,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbcf50e6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[4.0,0.0],[4.995184726672197,0.0980171403295606]],\"pencolor\":[255,4,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbcf6ba8-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[4.995184726672197,0.0980171403295606],[5.990369453344394,0.1960342806591212]],\"pencolor\":[255,5,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbcf8570-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[5.990369453344394,0.1960342806591212],[6.9855541800165915,0.2940514209886818]],\"pencolor\":[255,6,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbcf9f24-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[6.9855541800165915,0.2940514209886818],[7.980738906688789,0.3920685613182424]],\"pencolor\":[255,7,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbcfc67a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[7.980738906688789,0.3920685613182424],[8.961524187092019,0.5871588833343706]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbcfe01a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[8.961524187092019,0.5871588833343706],[9.94230946749525,0.7822492053504988]],\"pencolor\":[255,9,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbcff9ec-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[9.94230946749525,0.7822492053504988],[10.92309474789848,0.977339527366627]],\"pencolor\":[255,10,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd014f4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[10.92309474789848,0.977339527366627],[11.90388002830171,1.1724298493827552]],\"pencolor\":[255,11,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd03b8c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[11.90388002830171,1.1724298493827552],[12.86082036403392,1.4627145266372175]],\"pencolor\":[255,12,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd054fa-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[12.86082036403392,1.4627145266372175],[13.81776069976613,1.7529992038916797]],\"pencolor\":[255,13,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd06e0e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[13.81776069976613,1.7529992038916797],[14.774701035498339,2.043283881146142]],\"pencolor\":[255,14,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd08704-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[14.774701035498339,2.043283881146142],[15.731641371230548,2.3335685584006045]],\"pencolor\":[255,15,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd0aef0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[15.731641371230548,2.3335685584006045],[16.655520903741834,2.716251990765694]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd0c82c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[16.655520903741834,2.716251990765694],[17.57940043625312,3.0989354231307837]],\"pencolor\":[255,17,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd0e172-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[17.57940043625312,3.0989354231307837],[18.503279968764407,3.4816188554958734]],\"pencolor\":[255,18,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd0fa72-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[18.503279968764407,3.4816188554958734],[19.427159501275693,3.864302287860963]],\"pencolor\":[255,19,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd11f0c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[19.427159501275693,3.864302287860963],[20.30908076562405,4.335699024686961]],\"pencolor\":[255,20,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd137e4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[20.30908076562405,4.335699024686961],[21.191002029972406,4.807095761512959]],\"pencolor\":[255,21,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd152c4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[21.191002029972406,4.807095761512959],[22.072923294320763,5.278492498338957]],\"pencolor\":[255,22,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd16bd8-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[22.072923294320763,5.278492498338957],[22.95484455866912,5.749889235164955]],\"pencolor\":[255,23,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd19086-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[22.95484455866912,5.749889235164955],[23.786314170971664,6.305459468184557]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd1ab52-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[23.786314170971664,6.305459468184557],[24.61778378327421,6.861029701204159]],\"pencolor\":[255,25,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd1c45c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[24.61778378327421,6.861029701204159],[25.449253395576754,7.416599934223761]],\"pencolor\":[255,26,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd1de92-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[25.449253395576754,7.416599934223761],[26.2807230078793,7.972170167243363]],\"pencolor\":[255,27,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd203d6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[26.2807230078793,7.972170167243363],[27.053733461242036,8.606563451407009]],\"pencolor\":[255,28,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd21d4e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[27.053733461242036,8.606563451407009],[27.826743914604773,9.240956735570654]],\"pencolor\":[255,29,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd236a8-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[27.826743914604773,9.240956735570654],[28.59975436796751,9.875350019734299]],\"pencolor\":[255,30,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd25034-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[28.59975436796751,9.875350019734299],[29.372764821330247,10.509743303897944]],\"pencolor\":[255,31,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd276f4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[29.372764821330247,10.509743303897944],[30.079871602516793,11.216850085084491]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd291de-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[30.079871602516793,11.216850085084491],[30.78697838370334,11.92395686627104]],\"pencolor\":[255,33,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd2aaca-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[30.78697838370334,11.92395686627104],[31.494085164889885,12.631063647457587]],\"pencolor\":[255,34,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd2c384-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[31.494085164889885,12.631063647457587],[32.201191946076435,13.338170428644135]],\"pencolor\":[255,35,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd2e846-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[32.201191946076435,13.338170428644135],[32.83558523024008,14.111180882006872]],\"pencolor\":[255,36,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd30146-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[32.83558523024008,14.111180882006872],[33.46997851440372,14.884191335369609]],\"pencolor\":[255,37,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd31b04-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[33.46997851440372,14.884191335369609],[34.104371798567364,15.657201788732346]],\"pencolor\":[255,38,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd333d2-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[34.104371798567364,15.657201788732346],[34.73876508273101,16.430212242095084]],\"pencolor\":[255,39,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd3584e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[34.73876508273101,16.430212242095084],[35.29433531575061,17.26168185439763]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd37108-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[35.29433531575061,17.26168185439763],[35.84990554877021,18.093151466700174]],\"pencolor\":[255,41,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd38bb6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[35.84990554877021,18.093151466700174],[36.40547578178981,18.92462107900272]],\"pencolor\":[255,42,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd3a47a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[36.40547578178981,18.92462107900272],[36.96104601480941,19.756090691305264]],\"pencolor\":[255,43,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd3ca4a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[36.96104601480941,19.756090691305264],[37.432442751635406,20.638011955653617]],\"pencolor\":[255,44,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd3e34a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[37.432442751635406,20.638011955653617],[37.9038394884614,21.519933220001974]],\"pencolor\":[255,45,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd3fc4a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[37.9038394884614,21.519933220001974],[38.375236225287395,22.40185448435033]],\"pencolor\":[255,46,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd41536-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[38.375236225287395,22.40185448435033],[38.84663296211339,23.283775748698687]],\"pencolor\":[255,47,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd439ee-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[38.84663296211339,23.283775748698687],[39.22931639447848,24.207655281209973]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd453e8-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[39.22931639447848,24.207655281209973],[39.61199982684357,25.13153481372126]],\"pencolor\":[255,49,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd46e96-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[39.61199982684357,25.13153481372126],[39.994683259208664,26.055414346232546]],\"pencolor\":[255,50,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd487a0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[39.994683259208664,26.055414346232546],[40.377366691573755,26.97929387874383]],\"pencolor\":[255,51,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd4ac76-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[40.377366691573755,26.97929387874383],[40.66765136882822,27.93623421447604]],\"pencolor\":[255,52,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd4c53a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[40.66765136882822,27.93623421447604],[40.95793604608268,28.89317455020825]],\"pencolor\":[255,53,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd4de08-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[40.95793604608268,28.89317455020825],[41.24822072333714,29.85011488594046]],\"pencolor\":[255,54,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd4f8e8-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[41.24822072333714,29.85011488594046],[41.5385054005916,30.80705522167267]],\"pencolor\":[255,55,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd51e90-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[41.5385054005916,30.80705522167267],[41.73359572260773,31.787840502075902]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd5384e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[41.73359572260773,31.787840502075902],[41.92868604462386,32.768625782479134]],\"pencolor\":[255,57,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd5520c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[41.92868604462386,32.768625782479134],[42.12377636663999,33.749411062882366]],\"pencolor\":[255,58,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd56d78-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.12377636663999,33.749411062882366],[42.318866688656115,34.7301963432856]],\"pencolor\":[255,59,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd59460-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.318866688656115,34.7301963432856],[42.416883828985675,35.7253810699578]],\"pencolor\":[255,60,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd5adc4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.416883828985675,35.7253810699578],[42.514900969315235,36.72056579663]],\"pencolor\":[255,61,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd5c78c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.514900969315235,36.72056579663],[42.612918109644795,37.7157505233022]],\"pencolor\":[255,62,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd5e136-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.612918109644795,37.7157505233022],[42.710935249974355,38.7109352499744]],\"pencolor\":[255,63,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd60760-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.710935249974355,38.7109352499744],[42.710935249974355,39.7109352499744]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd621d2-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.710935249974355,39.7109352499744],[42.710935249974355,40.7109352499744]],\"pencolor\":[255,65,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd63abe-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.710935249974355,40.7109352499744],[42.710935249974355,41.7109352499744]],\"pencolor\":[255,66,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd653be-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.710935249974355,41.7109352499744],[42.710935249974355,42.7109352499744]],\"pencolor\":[255,67,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd67a56-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.710935249974355,42.7109352499744],[42.612918109644795,43.7061199766466]],\"pencolor\":[255,68,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd692fc-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.612918109644795,43.7061199766466],[42.514900969315235,44.7013047033188]],\"pencolor\":[255,69,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd6ab8e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.514900969315235,44.7013047033188],[42.416883828985675,45.696489429991]],\"pencolor\":[255,70,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd6c542-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.416883828985675,45.696489429991],[42.318866688656115,46.6916741566632]],\"pencolor\":[255,71,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd6ea18-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.318866688656115,46.6916741566632],[42.12377636663999,47.67245943706643]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd702f0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[42.12377636663999,47.67245943706643],[41.92868604462386,48.65324471746966]],\"pencolor\":[255,73,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd71bb4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[41.92868604462386,48.65324471746966],[41.73359572260773,49.634029997872894]],\"pencolor\":[255,74,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd73496-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[41.73359572260773,49.634029997872894],[41.5385054005916,50.614815278276126]],\"pencolor\":[255,75,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd75c32-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[41.5385054005916,50.614815278276126],[41.24822072333714,51.57175561400833]],\"pencolor\":[255,76,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd77564-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[41.24822072333714,51.57175561400833],[40.95793604608268,52.52869594974054]],\"pencolor\":[255,77,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd78e50-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[40.95793604608268,52.52869594974054],[40.66765136882822,53.485636285472744]],\"pencolor\":[255,78,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd7a700-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[40.66765136882822,53.485636285472744],[40.377366691573755,54.44257662120495]],\"pencolor\":[255,79,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd7d144-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[40.377366691573755,54.44257662120495],[39.994683259208664,55.366456153716236]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd7ea26-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[39.994683259208664,55.366456153716236],[39.61199982684357,56.29033568622752]],\"pencolor\":[255,81,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd80416-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[39.61199982684357,56.29033568622752],[39.22931639447848,57.21421521873881]],\"pencolor\":[255,82,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd81d84-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[39.22931639447848,57.21421521873881],[38.84663296211339,58.138094751250094]],\"pencolor\":[255,83,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd844c6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[38.84663296211339,58.138094751250094],[38.37523622528739,59.02001601559845]],\"pencolor\":[255,84,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd85e70-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[38.37523622528739,59.02001601559845],[37.90383948846139,59.90193727994681]],\"pencolor\":[255,85,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd877c0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[37.90383948846139,59.90193727994681],[37.432442751635385,60.783858544295164]],\"pencolor\":[255,86,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd88f62-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[37.432442751635385,60.783858544295164],[36.961046014809384,61.66577980864352]],\"pencolor\":[255,87,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd8bf78-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[36.961046014809384,61.66577980864352],[36.40547578178978,62.49724942094606]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd8d864-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[36.40547578178978,62.49724942094606],[35.84990554877018,63.3287190332486]],\"pencolor\":[255,89,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd8f164-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[35.84990554877018,63.3287190332486],[35.29433531575058,64.16018864555114]],\"pencolor\":[255,90,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd90a50-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[35.29433531575058,64.16018864555114],[34.73876508273098,64.99165825785369]],\"pencolor\":[255,91,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd93552-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[34.73876508273098,64.99165825785369],[34.104371798567335,65.76466871121642]],\"pencolor\":[255,92,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd94ec0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[34.104371798567335,65.76466871121642],[33.46997851440369,66.53767916457915]],\"pencolor\":[255,93,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd96874-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[33.46997851440369,66.53767916457915],[32.83558523024005,67.31068961794188]],\"pencolor\":[255,94,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd9821e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[32.83558523024005,67.31068961794188],[32.201191946076406,68.0837000713046]],\"pencolor\":[255,95,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd9ad3e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[32.201191946076406,68.0837000713046],[31.494085164889857,68.79080685249116]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd9c76a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[31.494085164889857,68.79080685249116],[30.786978383703307,69.49791363367771]],\"pencolor\":[255,97,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd9e0b0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[30.786978383703307,69.49791363367771],[30.079871602516757,70.20502041486426]],\"pencolor\":[255,98,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbd9f578-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[30.079871602516757,70.20502041486426],[29.372764821330207,70.91212719605082]],\"pencolor\":[255,99,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbda1c1a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[29.372764821330207,70.91212719605082],[28.59975436796747,71.54652048021447]],\"pencolor\":[255,100,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbda3dbc-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[28.59975436796747,71.54652048021447],[27.826743914604734,72.18091376437812]],\"pencolor\":[255,101,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbda63b4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[27.826743914604734,72.18091376437812],[27.053733461241997,72.81530704854177]],\"pencolor\":[255,102,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbda7fb6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[27.053733461241997,72.81530704854177],[26.28072300787926,73.44970033270542]],\"pencolor\":[255,103,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdaae78-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[26.28072300787926,73.44970033270542],[25.449253395576715,74.00527056572501]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdacf0c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[25.449253395576715,74.00527056572501],[24.61778378327417,74.56084079874461]],\"pencolor\":[255,105,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdaf40a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[24.61778378327417,74.56084079874461],[23.786314170971625,75.1164110317642]],\"pencolor\":[255,106,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdb1570-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[23.786314170971625,75.1164110317642],[22.95484455866908,75.6719812647838]],\"pencolor\":[255,107,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdb4d74-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[22.95484455866908,75.6719812647838],[22.072923294320724,76.14337800160979]],\"pencolor\":[255,108,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdb707e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[22.072923294320724,76.14337800160979],[21.191002029972367,76.61477473843578]],\"pencolor\":[255,109,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdb927a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[21.191002029972367,76.61477473843578],[20.30908076562401,77.08617147526178]],\"pencolor\":[255,110,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdbb354-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[20.30908076562401,77.08617147526178],[19.427159501275653,77.55756821208777]],\"pencolor\":[255,111,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdbe95a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[19.427159501275653,77.55756821208777],[18.503279968764367,77.94025164445286]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdc0c5a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[18.503279968764367,77.94025164445286],[17.57940043625308,78.32293507681794]],\"pencolor\":[255,113,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdc2c12-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[17.57940043625308,78.32293507681794],[16.655520903741795,78.70561850918303]],\"pencolor\":[255,114,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdc4d96-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[16.655520903741795,78.70561850918303],[15.731641371230507,79.08830194154811]],\"pencolor\":[255,115,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdc7e42-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[15.731641371230507,79.08830194154811],[14.774701035498298,79.37858661880257]],\"pencolor\":[255,116,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdca25a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[14.774701035498298,79.37858661880257],[13.817760699766088,79.66887129605703]],\"pencolor\":[255,117,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdcc5a0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[13.817760699766088,79.66887129605703],[12.860820364033879,79.9591559733115]],\"pencolor\":[255,118,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdce0ee-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[12.860820364033879,79.9591559733115],[11.90388002830167,80.24944065056596]],\"pencolor\":[255,119,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdd08a8-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[11.90388002830167,80.24944065056596],[10.923094747898439,80.44453097258209]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdd26b2-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[10.923094747898439,80.44453097258209],[9.942309467495209,80.63962129459821]],\"pencolor\":[255,121,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdd44da-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[9.942309467495209,80.63962129459821],[8.961524187091978,80.83471161661434]],\"pencolor\":[255,122,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdd5d44-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[8.961524187091978,80.83471161661434],[7.980738906688748,81.02980193863047]],\"pencolor\":[255,123,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdd87a6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[7.980738906688748,81.02980193863047],[6.985554180016551,81.12781907896003]],\"pencolor\":[255,124,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdda614-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[6.985554180016551,81.12781907896003],[5.9903694533443534,81.22583621928959]],\"pencolor\":[255,125,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbddc3c4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[5.9903694533443534,81.22583621928959],[4.995184726672156,81.32385335961915]],\"pencolor\":[255,126,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdddfbc-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[4.995184726672156,81.32385335961915],[3.999999999999959,81.42187049994871]],\"pencolor\":[255,127,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbde096a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[3.999999999999959,81.42187049994871],[2.999999999999959,81.42187049994871]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbde2620-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[2.999999999999959,81.42187049994871],[1.9999999999999591,81.42187049994871]],\"pencolor\":[255,129,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbde447a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[1.9999999999999591,81.42187049994871],[0.9999999999999591,81.42187049994871]],\"pencolor\":[255,130,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbde6090-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[0.9999999999999591,81.42187049994871],[-4.085620730620576e-14,81.42187049994871]],\"pencolor\":[255,131,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbde8d86-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-4.085620730620576e-14,81.42187049994871],[-0.9951847266722376,81.32385335961915]],\"pencolor\":[255,132,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdea640-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-0.9951847266722376,81.32385335961915],[-1.9903694533444343,81.22583621928959]],\"pencolor\":[255,133,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbded016-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-1.9903694533444343,81.22583621928959],[-2.985554180016631,81.12781907896003]],\"pencolor\":[255,134,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdeeefc-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-2.985554180016631,81.12781907896003],[-3.9807389066888277,81.02980193863047]],\"pencolor\":[255,135,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdf1a6c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-3.9807389066888277,81.02980193863047],[-4.961524187092058,80.83471161661434]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdf390c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-4.961524187092058,80.83471161661434],[-5.9423094674952885,80.63962129459821]],\"pencolor\":[255,137,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdf5630-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-5.9423094674952885,80.63962129459821],[-6.923094747898519,80.44453097258209]],\"pencolor\":[255,138,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdf7444-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-6.923094747898519,80.44453097258209],[-7.903880028301749,80.24944065056596]],\"pencolor\":[255,139,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdf9d0c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-7.903880028301749,80.24944065056596],[-8.860820364033957,79.9591559733115]],\"pencolor\":[255,140,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdfb8fa-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-8.860820364033957,79.9591559733115],[-9.817760699766165,79.66887129605703]],\"pencolor\":[255,141,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdfdad8-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-9.817760699766165,79.66887129605703],[-10.774701035498373,79.37858661880257]],\"pencolor\":[255,142,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbdff8a6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-10.774701035498373,79.37858661880257],[-11.73164137123058,79.08830194154811]],\"pencolor\":[255,143,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe021d2-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-11.73164137123058,79.08830194154811],[-12.655520903741866,78.70561850918301]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe03c3a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-12.655520903741866,78.70561850918301],[-13.579400436253152,78.32293507681791]],\"pencolor\":[255,145,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe05d8c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-13.579400436253152,78.32293507681791],[-14.503279968764438,77.94025164445281]],\"pencolor\":[255,146,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe07e0c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-14.503279968764438,77.94025164445281],[-15.427159501275725,77.55756821208772]],\"pencolor\":[255,147,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe0ab5c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-15.427159501275725,77.55756821208772],[-16.309080765624078,77.08617147526172]],\"pencolor\":[255,148,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe0c650-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-16.309080765624078,77.08617147526172],[-17.19100202997243,76.61477473843573]],\"pencolor\":[255,149,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe0e176-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-17.19100202997243,76.61477473843573],[-18.072923294320784,76.14337800160973]],\"pencolor\":[255,150,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe1000c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-18.072923294320784,76.14337800160973],[-18.954844558669137,75.67198126478374]],\"pencolor\":[255,151,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe12c1c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-18.954844558669137,75.67198126478374],[-19.786314170971682,75.11641103176413]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe14828-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-19.786314170971682,75.11641103176413],[-20.617783783274227,74.56084079874452]],\"pencolor\":[255,153,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe16312-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-20.617783783274227,74.56084079874452],[-21.449253395576772,74.00527056572491]],\"pencolor\":[255,154,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe18266-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-21.449253395576772,74.00527056572491],[-22.280723007879317,73.4497003327053]],\"pencolor\":[255,155,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe1ab2e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-22.280723007879317,73.4497003327053],[-23.053733461242054,72.81530704854165]],\"pencolor\":[255,156,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe1c76c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-23.053733461242054,72.81530704854165],[-23.82674391460479,72.180913764378]],\"pencolor\":[255,157,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe1e6ac-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-23.82674391460479,72.180913764378],[-24.599754367967527,71.54652048021435]],\"pencolor\":[255,158,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe20484-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-24.599754367967527,71.54652048021435],[-25.372764821330264,70.9121271960507]],\"pencolor\":[255,159,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe23314-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-25.372764821330264,70.9121271960507],[-26.07987160251681,70.20502041486415]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe24eee-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-26.07987160251681,70.20502041486415],[-26.786978383703357,69.4979136336776]],\"pencolor\":[255,161,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe27022-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-26.786978383703357,69.4979136336776],[-27.494085164889903,68.79080685249104]],\"pencolor\":[255,162,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe28c06-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-27.494085164889903,68.79080685249104],[-28.20119194607645,68.08370007130449]],\"pencolor\":[255,163,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe2badc-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-28.20119194607645,68.08370007130449],[-28.835585230240092,67.31068961794175]],\"pencolor\":[255,164,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe2d4d6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-28.835585230240092,67.31068961794175],[-29.469978514403735,66.537679164579]],\"pencolor\":[255,165,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe2f52e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-29.469978514403735,66.537679164579],[-30.104371798567378,65.76466871121626]],\"pencolor\":[255,166,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe312d4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-30.104371798567378,65.76466871121626],[-30.73876508273102,64.99165825785352]],\"pencolor\":[255,167,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe340ec-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-30.73876508273102,64.99165825785352],[-31.294335315750622,64.16018864555097]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe35eb0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-31.294335315750622,64.16018864555097],[-31.849905548770224,63.328719033248426]],\"pencolor\":[255,169,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe37cc4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-31.849905548770224,63.328719033248426],[-32.405475781789825,62.49724942094588]],\"pencolor\":[255,170,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe397d6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-32.405475781789825,62.49724942094588],[-32.961046014809426,61.66577980864333]],\"pencolor\":[255,171,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe3c0d0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-32.961046014809426,61.66577980864333],[-33.43244275163542,60.78385854429497]],\"pencolor\":[255,172,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe3de30-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-33.43244275163542,60.78385854429497],[-33.903839488461415,59.901937279946615]],\"pencolor\":[255,173,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe3fb22-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-33.903839488461415,59.901937279946615],[-34.37523622528741,59.02001601559826]],\"pencolor\":[255,174,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe41c38-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-34.37523622528741,59.02001601559826],[-34.846632962113404,58.1380947512499]],\"pencolor\":[255,175,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe44a78-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-34.846632962113404,58.1380947512499],[-35.229316394478495,57.214215218738616]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe46350-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-35.229316394478495,57.214215218738616],[-35.61199982684359,56.29033568622733]],\"pencolor\":[255,177,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe47ed0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-35.61199982684359,56.29033568622733],[-35.99468325920868,55.366456153716044]],\"pencolor\":[255,178,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe49eba-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-35.99468325920868,55.366456153716044],[-36.37736669157377,54.44257662120476]],\"pencolor\":[255,179,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe4c868-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-36.37736669157377,54.44257662120476],[-36.66765136882823,53.48563628547255]],\"pencolor\":[255,180,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe4e2e4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-36.66765136882823,53.48563628547255],[-36.95793604608269,52.528695949740346]],\"pencolor\":[255,181,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe50346-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-36.95793604608269,52.528695949740346],[-37.248220723337155,51.57175561400814]],\"pencolor\":[255,182,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe52b78-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-37.248220723337155,51.57175561400814],[-37.53850540059162,50.614815278275934]],\"pencolor\":[255,183,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe553a0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-37.53850540059162,50.614815278275934],[-37.733595722607745,49.6340299978727]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe56f84-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-37.733595722607745,49.6340299978727],[-37.92868604462387,48.65324471746947]],\"pencolor\":[255,185,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe58b2c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-37.92868604462387,48.65324471746947],[-38.12377636664,47.67245943706624]],\"pencolor\":[255,186,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe5a92c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.12377636664,47.67245943706624],[-38.31886668865613,46.691674156663005]],\"pencolor\":[255,187,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe5d7bc-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.31886668865613,46.691674156663005],[-38.41688382898569,45.696489429990805]],\"pencolor\":[255,188,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe5fb0c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.41688382898569,45.696489429990805],[-38.51490096931525,44.701304703318606]],\"pencolor\":[255,189,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe615f6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.51490096931525,44.701304703318606],[-38.61291810964481,43.706119976646406]],\"pencolor\":[255,190,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe6369e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.61291810964481,43.706119976646406],[-38.71093524997437,42.710935249974206]],\"pencolor\":[255,191,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe66376-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.71093524997437,42.710935249974206],[-38.71093524997437,41.710935249974206]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe68338-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.71093524997437,41.710935249974206],[-38.71093524997437,40.710935249974206]],\"pencolor\":[255,193,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe6a4c6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.71093524997437,40.710935249974206],[-38.71093524997437,39.710935249974206]],\"pencolor\":[255,194,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe6bdda-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.71093524997437,39.710935249974206],[-38.71093524997437,38.710935249974206]],\"pencolor\":[255,195,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe6ef62-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.71093524997437,38.710935249974206],[-38.61291810964481,37.715750523302006]],\"pencolor\":[255,196,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe70fd8-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.61291810964481,37.715750523302006],[-38.51490096931525,36.720565796629806]],\"pencolor\":[255,197,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe72fa4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.51490096931525,36.720565796629806],[-38.41688382898569,35.725381069957606]],\"pencolor\":[255,198,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe749e4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.41688382898569,35.725381069957606],[-38.31886668865613,34.73019634328541]],\"pencolor\":[255,199,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe77540-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.31886668865613,34.73019634328541],[-38.12377636664,33.749411062882174]],\"pencolor\":[255,200,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe79232-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-38.12377636664,33.749411062882174],[-37.92868604462387,32.76862578247894]],\"pencolor\":[255,201,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe7ad9e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-37.92868604462387,32.76862578247894],[-37.733595722607745,31.78784050207571]],\"pencolor\":[255,202,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe7c946-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-37.733595722607745,31.78784050207571],[-37.53850540059162,30.807055221672478]],\"pencolor\":[255,203,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe7f45c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-37.53850540059162,30.807055221672478],[-37.248220723337155,29.85011488594027]],\"pencolor\":[255,204,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe80f5a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-37.248220723337155,29.85011488594027],[-36.95793604608269,28.89317455020806]],\"pencolor\":[255,205,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe82e86-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-36.95793604608269,28.89317455020806],[-36.66765136882823,27.93623421447585]],\"pencolor\":[255,206,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe85028-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-36.66765136882823,27.93623421447585],[-36.37736669157377,26.97929387874364]],\"pencolor\":[255,207,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe88160-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-36.37736669157377,26.97929387874364],[-35.99468325920868,26.055414346232354]],\"pencolor\":[255,208,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe89f74-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-35.99468325920868,26.055414346232354],[-35.61199982684359,25.131534813721068]],\"pencolor\":[255,209,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe8b9dc-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-35.61199982684359,25.131534813721068],[-35.229316394478495,24.20765528120978]],\"pencolor\":[255,210,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe8d854-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-35.229316394478495,24.20765528120978],[-34.846632962113404,23.283775748698496]],\"pencolor\":[255,211,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe9096e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-34.846632962113404,23.283775748698496],[-34.37523622528741,22.40185448435014]],\"pencolor\":[255,212,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe92368-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-34.37523622528741,22.40185448435014],[-33.903839488461415,21.519933220001782]],\"pencolor\":[255,213,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe945a0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-33.903839488461415,21.519933220001782],[-33.43244275163542,20.638011955653425]],\"pencolor\":[255,214,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe9676a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-33.43244275163542,20.638011955653425],[-32.961046014809426,19.75609069130507]],\"pencolor\":[255,215,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe990a0-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-32.961046014809426,19.75609069130507],[-32.405475781789825,18.924621079002524]],\"pencolor\":[255,216,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe9acde-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-32.405475781789825,18.924621079002524],[-31.849905548770224,18.09315146669998]],\"pencolor\":[255,217,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe9cd0e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-31.849905548770224,18.09315146669998],[-31.294335315750622,17.261681854397434]],\"pencolor\":[255,218,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbe9ecc6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-31.294335315750622,17.261681854397434],[-30.73876508273102,16.43021224209489]],\"pencolor\":[255,219,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbea15a2-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-30.73876508273102,16.43021224209489],[-30.104371798567378,15.65720178873215]],\"pencolor\":[255,220,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbea33ac-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-30.104371798567378,15.65720178873215],[-29.469978514403735,14.884191335369412]],\"pencolor\":[255,221,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbea5378-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-29.469978514403735,14.884191335369412],[-28.835585230240092,14.111180882006673]],\"pencolor\":[255,222,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbea7240-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-28.835585230240092,14.111180882006673],[-28.20119194607645,13.338170428643934]],\"pencolor\":[255,223,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbea9c16-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-28.20119194607645,13.338170428643934],[-27.494085164889903,12.631063647457385]],\"pencolor\":[255,224,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbeab598-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-27.494085164889903,12.631063647457385],[-26.786978383703357,11.923956866270835]],\"pencolor\":[255,225,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbead4d8-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-26.786978383703357,11.923956866270835],[-26.07987160251681,11.216850085084285]],\"pencolor\":[255,226,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbeaf918-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-26.07987160251681,11.216850085084285],[-25.372764821330264,10.509743303897736]],\"pencolor\":[255,227,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbeb228a-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-25.372764821330264,10.509743303897736],[-24.599754367967527,9.875350019734089]],\"pencolor\":[255,228,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbeb4058-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-24.599754367967527,9.875350019734089],[-23.82674391460479,9.240956735570443]],\"pencolor\":[255,229,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbeb5bf6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-23.82674391460479,9.240956735570443],[-23.053733461242054,8.606563451406796]],\"pencolor\":[255,230,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbeb7a78-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-23.053733461242054,8.606563451406796],[-22.280723007879317,7.972170167243148]],\"pencolor\":[255,231,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbebabc4-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-22.280723007879317,7.972170167243148],[-21.449253395576772,7.4165999342235445]],\"pencolor\":[255,232,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbebd004-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-21.449253395576772,7.4165999342235445],[-20.617783783274227,6.86102970120394]],\"pencolor\":[255,233,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbebf318-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-20.617783783274227,6.86102970120394],[-19.786314170971682,6.305459468184335]],\"pencolor\":[255,234,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbec126c-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-19.786314170971682,6.305459468184335],[-18.954844558669137,5.74988923516473]],\"pencolor\":[255,235,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbec3cf6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-18.954844558669137,5.74988923516473],[-18.072923294320784,5.278492498338729]],\"pencolor\":[255,236,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbec5aec-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-18.072923294320784,5.278492498338729],[-17.19100202997243,4.807095761512729]],\"pencolor\":[255,237,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbec7892-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-17.19100202997243,4.807095761512729],[-16.309080765624078,4.335699024686728]],\"pencolor\":[255,238,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbec9b10-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-16.309080765624078,4.335699024686728],[-15.427159501275725,3.864302287860728]],\"pencolor\":[255,239,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbecd1a2-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-15.427159501275725,3.864302287860728],[-14.503279968764438,3.4816188554956353]],\"pencolor\":[255,240,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbece5b6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-14.503279968764438,3.4816188554956353],[-13.579400436253152,3.0989354231305426]],\"pencolor\":[255,241,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbed01d6-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-13.579400436253152,3.0989354231305426],[-12.655520903741866,2.71625199076545]],\"pencolor\":[255,242,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbed2878-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-12.655520903741866,2.71625199076545],[-11.73164137123058,2.333568558400357]],\"pencolor\":[255,243,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbed56ae-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-11.73164137123058,2.333568558400357],[-10.774701035498373,2.043283881145891]],\"pencolor\":[255,244,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbed7576-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-10.774701035498373,2.043283881145891],[-9.817760699766165,1.7529992038914253]],\"pencolor\":[255,245,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbed92cc-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-9.817760699766165,1.7529992038914253],[-8.860820364033957,1.4627145266369594]],\"pencolor\":[255,246,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbedadca-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-8.860820364033957,1.4627145266369594],[-7.903880028301749,1.1724298493824936]],\"pencolor\":[255,247,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbedde94-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-7.903880028301749,1.1724298493824936],[-6.92309474789852,0.9773395273663614]],\"pencolor\":[255,248,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbedfe92-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-6.92309474789852,0.9773395273663614],[-5.94230946749529,0.7822492053502292]],\"pencolor\":[255,249,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbee1558-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-5.94230946749529,0.7822492053502292],[-4.961524187092061,0.587158883334097]],\"pencolor\":[255,250,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbee3128-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-4.961524187092061,0.587158883334097],[-3.9807389066888312,0.39206856131796486]],\"pencolor\":[255,251,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbee6080-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-3.9807389066888312,0.39206856131796486],[-2.985554180016635,0.2940514209883999]],\"pencolor\":[255,252,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbee7e44-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-2.985554180016635,0.2940514209883999],[-1.9903694533444385,0.196034280658835]],\"pencolor\":[255,253,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbee99ce-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-1.9903694533444385,0.196034280658835],[-0.995184726672242,0.09801714032927006]],\"pencolor\":[255,254,0],\"pensize\":1,\"filled\":false},{\"id\":\"dbeeb81e-9689-11e7-9bbe-22000afc90b6\",\"kind\":\"line\",\"points\":[[-0.995184726672242,0.09801714032927006],[-4.551914400963142e-14,-2.948752353404416e-13]],\"pencolor\":[255,255,0],\"pensize\":1,\"filled\":false}]}\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Speed things up!<\/h2>\n  <p>Don't forget that you can use the <bk class=\"lib\">set speed<\/bk> block to make the turtle move faster when drawing lots of pixels.<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_goto\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Baby you're a firework!",
      "notes":"",
      "updated_at":"2017-09-11T01:20:46.934719+00:00",
      "label":"aca-blockly-logo-firework",
      "content":"<p>\n  Let's create our first firework! Our first firework design will be an 8 pointed star that gradually transitions from magenta to cyan.\n<\/p>\n\n<p>\nThe dimensions of the firework are as follows:\n<\/p>\n\n<ul>\n  <li>The pen size used by the turtle is 2 pixels;<\/li>\n  <li>The colour starts at magenta, which is rgb(255,0,255);<\/li>\n  <li>The colour finishes at cyan, which is rgb(0,255,255);<\/li>\n  <li>The firework has 8 arms, meaning they are at an angle of 45\u00b0 relative to each other;<\/li>\n  <li>Each arm of the firework is 32 pixels long;<\/li>\n  <li>The pen changes colour after the turtle moves 1 pixel;<\/li>\n  <li>The colour channels red and green change at the rate of 1 per pixel moved by the turtle.<\/li>\n<\/ul>\n\n<p>\n  Here's what it will looks like, drawn at <bk class=\"lib\"><bk class=\"inner\">fastest speed<\/bk><\/bk>:\n<\/p>\n\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"bdc00794-86c1-11e7-8c74-22000a154928\"]\n[\"create_shape\",\"bdc01ba8-86c1-11e7-8c74-22000a154928\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"pensize\":1}]\n[\"pen\",{\"filled\":false,\"fillcolor\":[0,0,0],\"pensize\":1,\"heading\":0.0,\"pendown\":true,\"shown\":true,\"tilt\":0.0,\"speed\":0,\"pencolor\":[0,0,0]}]\n[\"pen\",{\"pensize\":2}]\n[\"pen\",{\"pencolor\":[255,0,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[254,1,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[253,2,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[252,3,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[251,4,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[250,5,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[249,6,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[248,7,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[247,8,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[246,9,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[245,10,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[244,11,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[243,12,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[242,13,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[241,14,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[240,15,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[239,16,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[238,17,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[237,18,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[236,19,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[235,20,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[234,21,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[233,22,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[232,23,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[231,24,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[230,25,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[229,26,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[228,27,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[227,28,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[226,29,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[225,30,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[224,31,255]}]\n[\"forward\",1]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-32]\n[\"left\",0.7853981633974483]\n[\"pen\",{\"heading\":0.7853981633974483,\"pendown\":true}]\n[\"pen\",{\"pencolor\":[223,32,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[222,33,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[221,34,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[220,35,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[219,36,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[218,37,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[217,38,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[216,39,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[215,40,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[214,41,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[213,42,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[212,43,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[211,44,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[210,45,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[209,46,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[208,47,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[207,48,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[206,49,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[205,50,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[204,51,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[203,52,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[202,53,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[201,54,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[200,55,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[199,56,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[198,57,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[197,58,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[196,59,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[195,60,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[194,61,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[193,62,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[192,63,255]}]\n[\"forward\",1]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-32]\n[\"left\",0.7853981633974483]\n[\"pen\",{\"heading\":1.5707963267948966,\"pendown\":true}]\n[\"pen\",{\"pencolor\":[191,64,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[190,65,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[189,66,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[188,67,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[187,68,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[186,69,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[185,70,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[184,71,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[183,72,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[182,73,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[181,74,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[180,75,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[179,76,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[178,77,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[177,78,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[176,79,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[175,80,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[174,81,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[173,82,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[172,83,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[171,84,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[170,85,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[169,86,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[168,87,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[167,88,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[166,89,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[165,90,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[164,91,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[163,92,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[162,93,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[161,94,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[160,95,255]}]\n[\"forward\",1]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-32]\n[\"left\",0.7853981633974483]\n[\"pen\",{\"heading\":2.356194490192345,\"pendown\":true}]\n[\"pen\",{\"pencolor\":[159,96,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[158,97,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[157,98,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[156,99,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[155,100,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[154,101,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[153,102,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[152,103,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[151,104,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[150,105,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[149,106,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[148,107,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[147,108,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[146,109,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[145,110,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[144,111,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[143,112,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[142,113,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[141,114,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[140,115,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[139,116,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[138,117,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[137,118,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[136,119,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[135,120,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[134,121,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[133,122,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[132,123,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[131,124,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[130,125,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[129,126,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[128,127,255]}]\n[\"forward\",1]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-32]\n[\"left\",0.7853981633974483]\n[\"pen\",{\"heading\":3.141592653589793,\"pendown\":true}]\n[\"pen\",{\"pencolor\":[127,128,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[126,129,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[125,130,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[124,131,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[123,132,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[122,133,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[121,134,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[120,135,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[119,136,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[118,137,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[117,138,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[116,139,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[115,140,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[114,141,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[113,142,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[112,143,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[111,144,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[110,145,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[109,146,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[108,147,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[107,148,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[106,149,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[105,150,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[104,151,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[103,152,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[102,153,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[101,154,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[100,155,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[99,156,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[98,157,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[97,158,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[96,159,255]}]\n[\"forward\",1]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-32]\n[\"left\",0.7853981633974483]\n[\"pen\",{\"heading\":3.9269908169872414,\"pendown\":true}]\n[\"pen\",{\"pencolor\":[95,160,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[94,161,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[93,162,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[92,163,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[91,164,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[90,165,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[89,166,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[88,167,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[87,168,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[86,169,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[85,170,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[84,171,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[83,172,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[82,173,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[81,174,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[80,175,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[79,176,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[78,177,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[77,178,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[76,179,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[75,180,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[74,181,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[73,182,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[72,183,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[71,184,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[70,185,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[69,186,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[68,187,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[67,188,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[66,189,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[65,190,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[64,191,255]}]\n[\"forward\",1]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-32]\n[\"left\",0.7853981633974483]\n[\"pen\",{\"heading\":4.71238898038469,\"pendown\":true}]\n[\"pen\",{\"pencolor\":[63,192,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[62,193,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[61,194,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[60,195,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[59,196,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[58,197,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[57,198,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[56,199,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[55,200,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[54,201,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[53,202,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[52,203,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[51,204,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[50,205,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[49,206,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[48,207,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[47,208,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[46,209,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[45,210,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[44,211,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[43,212,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[42,213,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[41,214,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[40,215,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[39,216,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[38,217,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[37,218,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[36,219,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[35,220,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[34,221,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[33,222,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[32,223,255]}]\n[\"forward\",1]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-32]\n[\"left\",0.7853981633974483]\n[\"pen\",{\"heading\":5.497787143782138,\"pendown\":true}]\n[\"pen\",{\"pencolor\":[31,224,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[30,225,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[29,226,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[28,227,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[27,228,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[26,229,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[25,230,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[24,231,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[23,232,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[22,233,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[21,234,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[20,235,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[19,236,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[18,237,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[17,238,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[16,239,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[15,240,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[14,241,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[13,242,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[12,243,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[11,244,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[10,245,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[9,246,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[8,247,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[7,248,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[6,249,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[5,250,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[4,251,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[3,252,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[2,253,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[1,254,255]}]\n[\"forward\",1]\n[\"pen\",{\"pencolor\":[0,255,255]}]\n[\"forward\",1]\n[\"pen\",{\"pendown\":false}]\n[\"forward\",-32]\n[\"left\",0.7853981633974483]\n[\"pen\",{\"heading\":0.0,\"pendown\":true}]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Careful with that pen!<\/h2>\n  <p>Make sure you don't draw over the top of your nicely created gradients...<\/p>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_goto\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Firework spinner",
      "notes":"",
      "updated_at":"2017-09-11T01:20:22.130122+00:00",
      "label":"aca-blockly-logo-firework-spinner",
      "content":"<p>\n  If all of our fireworks looked the same then it would be a bit boring. There are lots of different types of fireworks, one of which is a spinner that can be attached to a fence or post while it spins sending sparks flying in all directions.\n<\/p>\n\n<p>\n  In this problem you'll draw a spinner firework design, and make it so that each time you run the program you can generate a different result!\n<\/p>\n\n<p>\nYour program should ask the user to specify an angle, then draw a firework according to the following requirements:\n<\/p>\n\n<ul>\n  <li>The background colour of the scene is rgb(0,0,0);<\/li>\n  <li>The pen size used by the turtle is 1 pixel;<\/li>\n  <li>The colour starts at red, which is rgb(255,0,0);<\/li>\n  <li>The colour finishes at yellow, which is rgb(255,255,0);<\/li>\n  <li>The turtle moves 256 times;<\/li>\n  <li>The distance of the turtle's first movement is 1 step in the forward direction (i.e. to the right)<\/li>\n  <li>After each step, the turtle turns left by the angle typed in by the user;<\/li>\n  <li>The pen changes colour after each movement of the turtle;<\/li>\n  <li>The green colour channel of the pen changes at the rate of 1 per movement of the turtle;<\/li>\n  <li>Each time the turtle moves after the first time, the distance it travels increases by 0.2 turtle steps.<\/li>\n<\/ul>\n\n<p>\n  Here's what it will looks like, drawn at <bk class=\"lib\"><bk class=\"inner\">fastest speed<\/bk><\/bk>:\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"logo\"><o>Angle:<\/o> 76\n<\/code><\/pre>\n\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"9f0a6182-968e-11e7-ab7e-22000afd051d\"]\n[\"create_shape\",\"9f0a758c-968e-11e7-ab7e-22000afd051d\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":true,\"pensize\":1}]\n[\"bgcolor\",[0,0,0]]\n[\"pen\",{\"heading\":0.0,\"pensize\":1,\"tilt\":0.0,\"speed\":0,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0],\"filled\":false,\"pendown\":true,\"shown\":true}]\n[\"pen\",{\"pencolor\":[255,0,0]}]\n[\"forward\",1]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.3264502315156905,\"pencolor\":[255,1,0]}]\n[\"forward\",1.2]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.652900463031381,\"pencolor\":[255,2,0]}]\n[\"forward\",1.4]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.9793506945470716,\"pencolor\":[255,3,0]}]\n[\"forward\",1.5999999999999999]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.305800926062762,\"pencolor\":[255,4,0]}]\n[\"forward\",1.7999999999999998]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.3490658503988664,\"pencolor\":[255,5,0]}]\n[\"forward\",1.9999999999999998]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.675516081914557,\"pencolor\":[255,6,0]}]\n[\"forward\",2.1999999999999997]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.0019663134302474,\"pencolor\":[255,7,0]}]\n[\"forward\",2.4]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.328416544945938,\"pencolor\":[255,8,0]}]\n[\"forward\",2.6]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.6548667764616285,\"pencolor\":[255,9,0]}]\n[\"forward\",2.8000000000000003]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.6981317007977328,\"pencolor\":[255,10,0]}]\n[\"forward\",3.0000000000000004]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.0245819323134233,\"pencolor\":[255,11,0]}]\n[\"forward\",3.2000000000000006]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.351032163829114,\"pencolor\":[255,12,0]}]\n[\"forward\",3.400000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.677482395344804,\"pencolor\":[255,13,0]}]\n[\"forward\",3.600000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.003932626860495,\"pencolor\":[255,14,0]}]\n[\"forward\",3.800000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.0471975511965992,\"pencolor\":[255,15,0]}]\n[\"forward\",4.000000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.3736477827122897,\"pencolor\":[255,16,0]}]\n[\"forward\",4.200000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.7000980142279802,\"pencolor\":[255,17,0]}]\n[\"forward\",4.400000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.026548245743671,\"pencolor\":[255,18,0]}]\n[\"forward\",4.600000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.06981317007977506,\"pencolor\":[255,19,0]}]\n[\"forward\",4.800000000000002]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.3962634015954656,\"pencolor\":[255,20,0]}]\n[\"forward\",5.000000000000002]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.722713633111156,\"pencolor\":[255,21,0]}]\n[\"forward\",5.200000000000002]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.049163864626847,\"pencolor\":[255,22,0]}]\n[\"forward\",5.400000000000002]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.375614096142537,\"pencolor\":[255,23,0]}]\n[\"forward\",5.600000000000002]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.41887902047864145,\"pencolor\":[255,24,0]}]\n[\"forward\",5.8000000000000025]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.745329251994332,\"pencolor\":[255,25,0]}]\n[\"forward\",6.000000000000003]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.0717794835100225,\"pencolor\":[255,26,0]}]\n[\"forward\",6.200000000000003]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.398229715025713,\"pencolor\":[255,27,0]}]\n[\"forward\",6.400000000000003]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.7246799465414036,\"pencolor\":[255,28,0]}]\n[\"forward\",6.600000000000003]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.7679448708775078,\"pencolor\":[255,29,0]}]\n[\"forward\",6.800000000000003]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.0943951023931984,\"pencolor\":[255,30,0]}]\n[\"forward\",7.0000000000000036]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.420845333908889,\"pencolor\":[255,31,0]}]\n[\"forward\",7.200000000000004]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.747295565424579,\"pencolor\":[255,32,0]}]\n[\"forward\",7.400000000000004]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.07374579694027,\"pencolor\":[255,33,0]}]\n[\"forward\",7.600000000000004]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.1170107212763742,\"pencolor\":[255,34,0]}]\n[\"forward\",7.800000000000004]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.4434609527920648,\"pencolor\":[255,35,0]}]\n[\"forward\",8.000000000000004]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.7699111843077553,\"pencolor\":[255,36,0]}]\n[\"forward\",8.200000000000003]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.096361415823446,\"pencolor\":[255,37,0]}]\n[\"forward\",8.400000000000002]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.1396263401595501,\"pencolor\":[255,38,0]}]\n[\"forward\",8.600000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.4660765716752406,\"pencolor\":[255,39,0]}]\n[\"forward\",8.8]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.792526803190931,\"pencolor\":[255,40,0]}]\n[\"forward\",9.0]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.118977034706622,\"pencolor\":[255,41,0]}]\n[\"forward\",9.2]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.445427266222312,\"pencolor\":[255,42,0]}]\n[\"forward\",9.399999999999999]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.4886921905584165,\"pencolor\":[255,43,0]}]\n[\"forward\",9.599999999999998]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.815142422074107,\"pencolor\":[255,44,0]}]\n[\"forward\",9.799999999999997]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.1415926535897976,\"pencolor\":[255,45,0]}]\n[\"forward\",9.999999999999996]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.468042885105488,\"pencolor\":[255,46,0]}]\n[\"forward\",10.199999999999996]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.794493116621179,\"pencolor\":[255,47,0]}]\n[\"forward\",10.399999999999995]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.8377580409572829,\"pencolor\":[255,48,0]}]\n[\"forward\",10.599999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.1642082724729734,\"pencolor\":[255,49,0]}]\n[\"forward\",10.799999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.490658503988664,\"pencolor\":[255,50,0]}]\n[\"forward\",10.999999999999993]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.8171087355043545,\"pencolor\":[255,51,0]}]\n[\"forward\",11.199999999999992]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.143558967020045,\"pencolor\":[255,52,0]}]\n[\"forward\",11.399999999999991]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.1868238913561493,\"pencolor\":[255,53,0]}]\n[\"forward\",11.59999999999999]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.51327412287184,\"pencolor\":[255,54,0]}]\n[\"forward\",11.79999999999999]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.8397243543875303,\"pencolor\":[255,55,0]}]\n[\"forward\",11.99999999999999]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.166174585903221,\"pencolor\":[255,56,0]}]\n[\"forward\",12.199999999999989]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.20943951023932517,\"pencolor\":[255,57,0]}]\n[\"forward\",12.399999999999988]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.5358897417550157,\"pencolor\":[255,58,0]}]\n[\"forward\",12.599999999999987]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.862339973270706,\"pencolor\":[255,59,0]}]\n[\"forward\",12.799999999999986]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.188790204786397,\"pencolor\":[255,60,0]}]\n[\"forward\",12.999999999999986]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.515240436302087,\"pencolor\":[255,61,0]}]\n[\"forward\",13.199999999999985]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.5585053606381916,\"pencolor\":[255,62,0]}]\n[\"forward\",13.399999999999984]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.884955592153882,\"pencolor\":[255,63,0]}]\n[\"forward\",13.599999999999984]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.2114058236695726,\"pencolor\":[255,64,0]}]\n[\"forward\",13.799999999999983]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.537856055185263,\"pencolor\":[255,65,0]}]\n[\"forward\",13.999999999999982]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.864306286700954,\"pencolor\":[255,66,0]}]\n[\"forward\",14.199999999999982]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.907571211037058,\"pencolor\":[255,67,0]}]\n[\"forward\",14.39999999999998]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.2340214425527485,\"pencolor\":[255,68,0]}]\n[\"forward\",14.59999999999998]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.560471674068439,\"pencolor\":[255,69,0]}]\n[\"forward\",14.79999999999998]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.8869219055841295,\"pencolor\":[255,70,0]}]\n[\"forward\",14.999999999999979]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.21337213709982,\"pencolor\":[255,71,0]}]\n[\"forward\",15.199999999999978]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.2566370614359244,\"pencolor\":[255,72,0]}]\n[\"forward\",15.399999999999977]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.583087292951615,\"pencolor\":[255,73,0]}]\n[\"forward\",15.599999999999977]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.9095375244673054,\"pencolor\":[255,74,0]}]\n[\"forward\",15.799999999999976]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.235987755982996,\"pencolor\":[255,75,0]}]\n[\"forward\",15.999999999999975]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.2792526803191002,\"pencolor\":[255,76,0]}]\n[\"forward\",16.199999999999974]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.6057029118347907,\"pencolor\":[255,77,0]}]\n[\"forward\",16.399999999999974]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.9321531433504813,\"pencolor\":[255,78,0]}]\n[\"forward\",16.599999999999973]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.258603374866172,\"pencolor\":[255,79,0]}]\n[\"forward\",16.799999999999972]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.585053606381862,\"pencolor\":[255,80,0]}]\n[\"forward\",16.99999999999997]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.6283185307179666,\"pencolor\":[255,81,0]}]\n[\"forward\",17.19999999999997]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.9547687622336571,\"pencolor\":[255,82,0]}]\n[\"forward\",17.39999999999997]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.2812189937493477,\"pencolor\":[255,83,0]}]\n[\"forward\",17.59999999999997]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.607669225265038,\"pencolor\":[255,84,0]}]\n[\"forward\",17.79999999999997]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.934119456780729,\"pencolor\":[255,85,0]}]\n[\"forward\",17.999999999999968]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.977384381116833,\"pencolor\":[255,86,0]}]\n[\"forward\",18.199999999999967]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.3038346126325235,\"pencolor\":[255,87,0]}]\n[\"forward\",18.399999999999967]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.630284844148214,\"pencolor\":[255,88,0]}]\n[\"forward\",18.599999999999966]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.956735075663905,\"pencolor\":[255,89,0]}]\n[\"forward\",18.799999999999965]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":8.881784197001252e-15,\"pencolor\":[255,90,0]}]\n[\"forward\",18.999999999999964]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.3264502315156994,\"pencolor\":[255,91,0]}]\n[\"forward\",19.199999999999964]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.65290046303139,\"pencolor\":[255,92,0]}]\n[\"forward\",19.399999999999963]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.9793506945470805,\"pencolor\":[255,93,0]}]\n[\"forward\",19.599999999999962]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.305800926062771,\"pencolor\":[255,94,0]}]\n[\"forward\",19.79999999999996]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.3490658503988753,\"pencolor\":[255,95,0]}]\n[\"forward\",19.99999999999996]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.6755160819145658,\"pencolor\":[255,96,0]}]\n[\"forward\",20.19999999999996]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.0019663134302563,\"pencolor\":[255,97,0]}]\n[\"forward\",20.39999999999996]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.328416544945947,\"pencolor\":[255,98,0]}]\n[\"forward\",20.59999999999996]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.654866776461637,\"pencolor\":[255,99,0]}]\n[\"forward\",20.799999999999958]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.6981317007977417,\"pencolor\":[255,100,0]}]\n[\"forward\",20.999999999999957]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.024581932313432,\"pencolor\":[255,101,0]}]\n[\"forward\",21.199999999999957]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.3510321638291227,\"pencolor\":[255,102,0]}]\n[\"forward\",21.399999999999956]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.677482395344813,\"pencolor\":[255,103,0]}]\n[\"forward\",21.599999999999955]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.003932626860504,\"pencolor\":[255,104,0]}]\n[\"forward\",21.799999999999955]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.047197551196608,\"pencolor\":[255,105,0]}]\n[\"forward\",21.999999999999954]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.3736477827122986,\"pencolor\":[255,106,0]}]\n[\"forward\",22.199999999999953]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.700098014227989,\"pencolor\":[255,107,0]}]\n[\"forward\",22.399999999999952]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.02654824574368,\"pencolor\":[255,108,0]}]\n[\"forward\",22.59999999999995]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.06981317007978394,\"pencolor\":[255,109,0]}]\n[\"forward\",22.79999999999995]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.3962634015954745,\"pencolor\":[255,110,0]}]\n[\"forward\",22.99999999999995]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.722713633111165,\"pencolor\":[255,111,0]}]\n[\"forward\",23.19999999999995]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.0491638646268555,\"pencolor\":[255,112,0]}]\n[\"forward\",23.39999999999995]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.375614096142546,\"pencolor\":[255,113,0]}]\n[\"forward\",23.599999999999948]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.41887902047865033,\"pencolor\":[255,114,0]}]\n[\"forward\",23.799999999999947]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.7453292519943409,\"pencolor\":[255,115,0]}]\n[\"forward\",23.999999999999947]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.0717794835100314,\"pencolor\":[255,116,0]}]\n[\"forward\",24.199999999999946]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.398229715025722,\"pencolor\":[255,117,0]}]\n[\"forward\",24.399999999999945]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.724679946541412,\"pencolor\":[255,118,0]}]\n[\"forward\",24.599999999999945]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.7679448708775167,\"pencolor\":[255,119,0]}]\n[\"forward\",24.799999999999944]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.0943951023932073,\"pencolor\":[255,120,0]}]\n[\"forward\",24.999999999999943]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.420845333908898,\"pencolor\":[255,121,0]}]\n[\"forward\",25.199999999999942]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.747295565424588,\"pencolor\":[255,122,0]}]\n[\"forward\",25.39999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.073745796940279,\"pencolor\":[255,123,0]}]\n[\"forward\",25.59999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.1170107212763831,\"pencolor\":[255,124,0]}]\n[\"forward\",25.79999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.4434609527920736,\"pencolor\":[255,125,0]}]\n[\"forward\",25.99999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.769911184307764,\"pencolor\":[255,126,0]}]\n[\"forward\",26.19999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.096361415823455,\"pencolor\":[255,127,0]}]\n[\"forward\",26.399999999999938]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.139626340159559,\"pencolor\":[255,128,0]}]\n[\"forward\",26.599999999999937]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.4660765716752495,\"pencolor\":[255,129,0]}]\n[\"forward\",26.799999999999937]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.79252680319094,\"pencolor\":[255,130,0]}]\n[\"forward\",26.999999999999936]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.118977034706631,\"pencolor\":[255,131,0]}]\n[\"forward\",27.199999999999935]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.445427266222321,\"pencolor\":[255,132,0]}]\n[\"forward\",27.399999999999935]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.4886921905584254,\"pencolor\":[255,133,0]}]\n[\"forward\",27.599999999999934]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.815142422074116,\"pencolor\":[255,134,0]}]\n[\"forward\",27.799999999999933]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.1415926535898064,\"pencolor\":[255,135,0]}]\n[\"forward\",27.999999999999932]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.468042885105497,\"pencolor\":[255,136,0]}]\n[\"forward\",28.199999999999932]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.7944931166211875,\"pencolor\":[255,137,0]}]\n[\"forward\",28.39999999999993]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.8377580409572918,\"pencolor\":[255,138,0]}]\n[\"forward\",28.59999999999993]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.1642082724729823,\"pencolor\":[255,139,0]}]\n[\"forward\",28.79999999999993]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.490658503988673,\"pencolor\":[255,140,0]}]\n[\"forward\",28.99999999999993]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.817108735504363,\"pencolor\":[255,141,0]}]\n[\"forward\",29.19999999999993]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.143558967020054,\"pencolor\":[255,142,0]}]\n[\"forward\",29.399999999999928]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.1868238913561582,\"pencolor\":[255,143,0]}]\n[\"forward\",29.599999999999927]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.5132741228718487,\"pencolor\":[255,144,0]}]\n[\"forward\",29.799999999999926]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.8397243543875392,\"pencolor\":[255,145,0]}]\n[\"forward\",29.999999999999925]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.16617458590323,\"pencolor\":[255,146,0]}]\n[\"forward\",30.199999999999925]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.20943951023933405,\"pencolor\":[255,147,0]}]\n[\"forward\",30.399999999999924]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.5358897417550246,\"pencolor\":[255,148,0]}]\n[\"forward\",30.599999999999923]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.862339973270715,\"pencolor\":[255,149,0]}]\n[\"forward\",30.799999999999923]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.188790204786406,\"pencolor\":[255,150,0]}]\n[\"forward\",30.999999999999922]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.515240436302096,\"pencolor\":[255,151,0]}]\n[\"forward\",31.19999999999992]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.5585053606382004,\"pencolor\":[255,152,0]}]\n[\"forward\",31.39999999999992]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.884955592153891,\"pencolor\":[255,153,0]}]\n[\"forward\",31.59999999999992]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.2114058236695815,\"pencolor\":[255,154,0]}]\n[\"forward\",31.79999999999992]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.537856055185272,\"pencolor\":[255,155,0]}]\n[\"forward\",31.99999999999992]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.8643062867009625,\"pencolor\":[255,156,0]}]\n[\"forward\",32.19999999999992]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.9075712110370668,\"pencolor\":[255,157,0]}]\n[\"forward\",32.39999999999992]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.2340214425527574,\"pencolor\":[255,158,0]}]\n[\"forward\",32.59999999999992]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.560471674068448,\"pencolor\":[255,159,0]}]\n[\"forward\",32.799999999999926]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.886921905584138,\"pencolor\":[255,160,0]}]\n[\"forward\",32.99999999999993]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.213372137099829,\"pencolor\":[255,161,0]}]\n[\"forward\",33.19999999999993]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.2566370614359332,\"pencolor\":[255,162,0]}]\n[\"forward\",33.399999999999935]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.5830872929516238,\"pencolor\":[255,163,0]}]\n[\"forward\",33.59999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.9095375244673143,\"pencolor\":[255,164,0]}]\n[\"forward\",33.79999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.235987755983005,\"pencolor\":[255,165,0]}]\n[\"forward\",33.99999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.2792526803191091,\"pencolor\":[255,166,0]}]\n[\"forward\",34.199999999999946]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.6057029118347996,\"pencolor\":[255,167,0]}]\n[\"forward\",34.39999999999995]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.93215314335049,\"pencolor\":[255,168,0]}]\n[\"forward\",34.59999999999995]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.258603374866181,\"pencolor\":[255,169,0]}]\n[\"forward\",34.799999999999955]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.585053606381871,\"pencolor\":[255,170,0]}]\n[\"forward\",34.99999999999996]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.6283185307179755,\"pencolor\":[255,171,0]}]\n[\"forward\",35.19999999999996]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.954768762233666,\"pencolor\":[255,172,0]}]\n[\"forward\",35.39999999999996]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.2812189937493565,\"pencolor\":[255,173,0]}]\n[\"forward\",35.599999999999966]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.607669225265047,\"pencolor\":[255,174,0]}]\n[\"forward\",35.79999999999997]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.934119456780738,\"pencolor\":[255,175,0]}]\n[\"forward\",35.99999999999997]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.9773843811168419,\"pencolor\":[255,176,0]}]\n[\"forward\",36.199999999999974]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.3038346126325324,\"pencolor\":[255,177,0]}]\n[\"forward\",36.39999999999998]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.630284844148223,\"pencolor\":[255,178,0]}]\n[\"forward\",36.59999999999998]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.9567350756639135,\"pencolor\":[255,179,0]}]\n[\"forward\",36.79999999999998]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.7763568394002505e-14,\"pencolor\":[255,180,0]}]\n[\"forward\",36.999999999999986]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.3264502315157083,\"pencolor\":[255,181,0]}]\n[\"forward\",37.19999999999999]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.652900463031399,\"pencolor\":[255,182,0]}]\n[\"forward\",37.39999999999999]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.9793506945470893,\"pencolor\":[255,183,0]}]\n[\"forward\",37.599999999999994]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.30580092606278,\"pencolor\":[255,184,0]}]\n[\"forward\",37.8]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.34906585039888416,\"pencolor\":[255,185,0]}]\n[\"forward\",38.0]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.6755160819145747,\"pencolor\":[255,186,0]}]\n[\"forward\",38.2]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.001966313430265,\"pencolor\":[255,187,0]}]\n[\"forward\",38.400000000000006]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.328416544945956,\"pencolor\":[255,188,0]}]\n[\"forward\",38.60000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.654866776461646,\"pencolor\":[255,189,0]}]\n[\"forward\",38.80000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.6981317007977506,\"pencolor\":[255,190,0]}]\n[\"forward\",39.000000000000014]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.024581932313441,\"pencolor\":[255,191,0]}]\n[\"forward\",39.20000000000002]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.3510321638291316,\"pencolor\":[255,192,0]}]\n[\"forward\",39.40000000000002]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.677482395344822,\"pencolor\":[255,193,0]}]\n[\"forward\",39.60000000000002]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.003932626860513,\"pencolor\":[255,194,0]}]\n[\"forward\",39.800000000000026]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.047197551196617,\"pencolor\":[255,195,0]}]\n[\"forward\",40.00000000000003]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.3736477827123075,\"pencolor\":[255,196,0]}]\n[\"forward\",40.20000000000003]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.700098014227998,\"pencolor\":[255,197,0]}]\n[\"forward\",40.400000000000034]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.0265482457436885,\"pencolor\":[255,198,0]}]\n[\"forward\",40.60000000000004]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.06981317007979282,\"pencolor\":[255,199,0]}]\n[\"forward\",40.80000000000004]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.3962634015954833,\"pencolor\":[255,200,0]}]\n[\"forward\",41.00000000000004]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.722713633111174,\"pencolor\":[255,201,0]}]\n[\"forward\",41.200000000000045]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.049163864626864,\"pencolor\":[255,202,0]}]\n[\"forward\",41.40000000000005]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.375614096142555,\"pencolor\":[255,203,0]}]\n[\"forward\",41.60000000000005]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.4188790204786592,\"pencolor\":[255,204,0]}]\n[\"forward\",41.800000000000054]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.7453292519943497,\"pencolor\":[255,205,0]}]\n[\"forward\",42.00000000000006]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.0717794835100403,\"pencolor\":[255,206,0]}]\n[\"forward\",42.20000000000006]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.398229715025731,\"pencolor\":[255,207,0]}]\n[\"forward\",42.40000000000006]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.724679946541421,\"pencolor\":[255,208,0]}]\n[\"forward\",42.600000000000065]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.7679448708775256,\"pencolor\":[255,209,0]}]\n[\"forward\",42.80000000000007]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.094395102393216,\"pencolor\":[255,210,0]}]\n[\"forward\",43.00000000000007]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.4208453339089067,\"pencolor\":[255,211,0]}]\n[\"forward\",43.200000000000074]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.747295565424597,\"pencolor\":[255,212,0]}]\n[\"forward\",43.40000000000008]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.073745796940288,\"pencolor\":[255,213,0]}]\n[\"forward\",43.60000000000008]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.117010721276392,\"pencolor\":[255,214,0]}]\n[\"forward\",43.80000000000008]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.4434609527920825,\"pencolor\":[255,215,0]}]\n[\"forward\",44.000000000000085]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.769911184307773,\"pencolor\":[255,216,0]}]\n[\"forward\",44.20000000000009]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.096361415823464,\"pencolor\":[255,217,0]}]\n[\"forward\",44.40000000000009]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.13962634015956787,\"pencolor\":[255,218,0]}]\n[\"forward\",44.600000000000094]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.4660765716752584,\"pencolor\":[255,219,0]}]\n[\"forward\",44.8000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.792526803190949,\"pencolor\":[255,220,0]}]\n[\"forward\",45.0000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.1189770347066395,\"pencolor\":[255,221,0]}]\n[\"forward\",45.2000000000001]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.44542726622233,\"pencolor\":[255,222,0]}]\n[\"forward\",45.400000000000105]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.48869219055843427,\"pencolor\":[255,223,0]}]\n[\"forward\",45.60000000000011]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.8151424220741248,\"pencolor\":[255,224,0]}]\n[\"forward\",45.80000000000011]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.1415926535898153,\"pencolor\":[255,225,0]}]\n[\"forward\",46.000000000000114]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.468042885105506,\"pencolor\":[255,226,0]}]\n[\"forward\",46.20000000000012]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.794493116621196,\"pencolor\":[255,227,0]}]\n[\"forward\",46.40000000000012]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.8377580409573007,\"pencolor\":[255,228,0]}]\n[\"forward\",46.60000000000012]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.164208272472991,\"pencolor\":[255,229,0]}]\n[\"forward\",46.800000000000125]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.4906585039886817,\"pencolor\":[255,230,0]}]\n[\"forward\",47.00000000000013]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.817108735504372,\"pencolor\":[255,231,0]}]\n[\"forward\",47.20000000000013]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.143558967020063,\"pencolor\":[255,232,0]}]\n[\"forward\",47.400000000000134]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.186823891356167,\"pencolor\":[255,233,0]}]\n[\"forward\",47.600000000000136]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.5132741228718576,\"pencolor\":[255,234,0]}]\n[\"forward\",47.80000000000014]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.839724354387548,\"pencolor\":[255,235,0]}]\n[\"forward\",48.00000000000014]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.166174585903239,\"pencolor\":[255,236,0]}]\n[\"forward\",48.200000000000145]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.20943951023934293,\"pencolor\":[255,237,0]}]\n[\"forward\",48.40000000000015]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.5358897417550335,\"pencolor\":[255,238,0]}]\n[\"forward\",48.60000000000015]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.862339973270724,\"pencolor\":[255,239,0]}]\n[\"forward\",48.80000000000015]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.1887902047864145,\"pencolor\":[255,240,0]}]\n[\"forward\",49.000000000000156]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.515240436302105,\"pencolor\":[255,241,0]}]\n[\"forward\",49.20000000000016]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.5585053606382093,\"pencolor\":[255,242,0]}]\n[\"forward\",49.40000000000016]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.8849555921538999,\"pencolor\":[255,243,0]}]\n[\"forward\",49.600000000000165]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.2114058236695904,\"pencolor\":[255,244,0]}]\n[\"forward\",49.80000000000017]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.537856055185281,\"pencolor\":[255,245,0]}]\n[\"forward\",50.00000000000017]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.864306286700971,\"pencolor\":[255,246,0]}]\n[\"forward\",50.20000000000017]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":0.9075712110370757,\"pencolor\":[255,247,0]}]\n[\"forward\",50.400000000000176]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.2340214425527662,\"pencolor\":[255,248,0]}]\n[\"forward\",50.60000000000018]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.5604716740684568,\"pencolor\":[255,249,0]}]\n[\"forward\",50.80000000000018]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":4.886921905584147,\"pencolor\":[255,250,0]}]\n[\"forward\",51.000000000000185]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":6.213372137099838,\"pencolor\":[255,251,0]}]\n[\"forward\",51.20000000000019]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":1.2566370614359421,\"pencolor\":[255,252,0]}]\n[\"forward\",51.40000000000019]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":2.5830872929516326,\"pencolor\":[255,253,0]}]\n[\"forward\",51.60000000000019]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":3.909537524467323,\"pencolor\":[255,254,0]}]\n[\"forward\",51.800000000000196]\n[\"left\",1.3264502315156905]\n[\"pen\",{\"heading\":5.235987755983014,\"pencolor\":[255,255,0]}]\n[\"forward\",52.0000000000002]\n[\"left\",1.3264502315156905]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  And here's what it looks like when it turns at a different angle:\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"logo\"><o>Angle:<\/o> 34\n<\/code><\/pre>\n\n<pre class=\"js-logo-final\" data-io=\"false\"><code data-lang=\"logo\">\n{\"width\":400,\"height\":300,\"bgcolor\":[0,0,0],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"c0ec9efa-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[0.0,0.0],[1.0,0.0]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"c0ecc38a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[1.0,0.0],[1.99484508706605,0.6710314841648962]],\"pensize\":1,\"pencolor\":[255,1,0],\"filled\":false},{\"id\":\"c0ecf5f8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[1.99484508706605,0.6710314841648962],[2.5192943178483267,1.9690888805583984]],\"pensize\":1,\"pencolor\":[255,2,0],\"filled\":false},{\"id\":\"c0ed18bc-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[2.5192943178483267,1.9690888805583984],[2.1866356125399116,3.534125041732487]],\"pensize\":1,\"pencolor\":[255,3,0],\"filled\":false},{\"id\":\"c0ed4878-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[2.1866356125399116,3.534125041732487],[0.8918239719303396,4.784510108558682]],\"pensize\":1,\"pencolor\":[255,4,0],\"filled\":false},{\"id\":\"c0ed6e20-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[0.8918239719303396,4.784510108558682],[-1.0777915340940762,5.131806463892542]],\"pensize\":1,\"pencolor\":[255,5,0],\"filled\":false},{\"id\":\"c0ed9454-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-1.0777915340940762,5.131806463892542],[-3.0875915409077983,4.236985849125782]],\"pensize\":1,\"pencolor\":[255,6,0],\"filled\":false},{\"id\":\"c0edbbaa-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-3.0875915409077983,4.236985849125782],[-4.359397775067491,2.2016704183503597]],\"pensize\":1,\"pencolor\":[255,7,0],\"filled\":false},{\"id\":\"c0ede08a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-4.359397775067491,2.2016704183503597],[-4.268659083640987,-0.3967457318992893]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"c0ee0844-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-4.268659083640987,-0.3967457318992893],[-2.6228603772220604,-2.661993316149141]],\"pensize\":1,\"pencolor\":[255,9,0],\"filled\":false},{\"id\":\"c0ee2e82-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-2.6228603772220604,-2.661993316149141],[0.19621748513566617,-3.6880537461261444]],\"pensize\":1,\"pencolor\":[255,10,0],\"filled\":false},{\"id\":\"c0ee5628-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[0.19621748513566617,-3.6880537461261444],[3.301163809218854,-2.9139036802072025]],\"pensize\":1,\"pencolor\":[255,11,0],\"filled\":false},{\"id\":\"c0ee7bf8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[3.301163809218854,-2.9139036802072025],[5.576207870838968,-0.3872112735840578]],\"pensize\":1,\"pencolor\":[255,12,0],\"filled\":false},{\"id\":\"c0eea51a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[5.576207870838968,-0.3872112735840578],[6.077231034295198,3.1777537738855974]],\"pensize\":1,\"pencolor\":[255,13,0],\"filled\":false},{\"id\":\"c0eed3c8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[6.077231034295198,3.1777537738855974],[4.411420676496697,6.59317114982243]],\"pensize\":1,\"pencolor\":[255,14,0],\"filled\":false},{\"id\":\"c0eefe34-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[4.411420676496697,6.59317114982243],[0.9473190613589373,8.593171149822425]],\"pensize\":1,\"pencolor\":[255,15,0],\"filled\":false},{\"id\":\"c0ef31c4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[0.9473190613589373,8.593171149822425],[-3.242449949732325,8.30019396009709]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"c0ef673e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-3.242449949732325,8.30019396009709],[-6.709697265601898,5.591283468664187]],\"pensize\":1,\"pencolor\":[255,17,0],\"filled\":false},{\"id\":\"c0ef9e2a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-6.709697265601898,5.591283468664187],[-8.13117543972665,1.2164234937064773]],\"pensize\":1,\"pencolor\":[255,18,0],\"filled\":false},{\"id\":\"c0efd750-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-8.13117543972665,1.2164234937064773],[-6.808116131805045,-3.3976326467974527]],\"pensize\":1,\"pencolor\":[255,19,0],\"filled\":false},{\"id\":\"c0f0043c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-6.808116131805045,-3.3976326467974527],[-2.977893916210146,-6.611570695230141]],\"pensize\":1,\"pencolor\":[255,20,0],\"filled\":false},{\"id\":\"c0f034c0-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-2.977893916210146,-6.611570695230141],[2.1936199397048792,-7.155118704221925]],\"pensize\":1,\"pencolor\":[255,21,0],\"filled\":false},{\"id\":\"c0f06d50-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[2.1936199397048792,-7.155118704221925],[6.961536941143078,-4.619972265178098]],\"pensize\":1,\"pencolor\":[255,22,0],\"filled\":false},{\"id\":\"c0f0a14e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[6.961536941143078,-4.619972265178098],[9.590577692744052,0.324534254831903]],\"pensize\":1,\"pencolor\":[255,23,0],\"filled\":false},{\"id\":\"c0f0d524-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[9.590577692744052,0.324534254831903],[8.984312605791644,6.092761247967888]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"c0f10706-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[8.984312605791644,6.092761247967888],[5.127586947672391,10.689027906681748]],\"pensize\":1,\"pencolor\":[255,25,0],\"filled\":false},{\"id\":\"c0f141a8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[5.127586947672391,10.689027906681748],[-0.8322355671451938,12.397979512747126]],\"pensize\":1,\"pencolor\":[255,26,0],\"filled\":false},{\"id\":\"c0f17812-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-0.8322355671451938,12.397979512747126],[-6.918997271434174,10.420270748747443]],\"pensize\":1,\"pencolor\":[255,27,0],\"filled\":false},{\"id\":\"c0f1ace2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-6.918997271434174,10.420270748747443],[-10.982363008583505,5.219399774943064]],\"pensize\":1,\"pencolor\":[255,28,0],\"filled\":false},{\"id\":\"c0f1d8e8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-10.982363008583505,5.219399774943064],[-11.456707030043535,-1.5640357668237463]],\"pensize\":1,\"pencolor\":[255,29,0],\"filled\":false},{\"id\":\"c0f206ba-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-11.456707030043535,-1.5640357668237463],[-7.956707030043512,-7.626213593314807]],\"pensize\":1,\"pencolor\":[255,30,0],\"filled\":false},{\"id\":\"c0f23194-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-7.956707030043512,-7.626213593314807],[-1.4853898966894947,-10.78248585019614]],\"pensize\":1,\"pencolor\":[255,31,0],\"filled\":false},{\"id\":\"c0f258f4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-1.4853898966894947,-10.78248585019614],[5.842593811998125,-9.75260490309162]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"c0f28afe-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[5.842593811998125,-9.75260490309162],[11.4904944856263,-4.667212294764269]],\"pensize\":1,\"pencolor\":[255,33,0],\"filled\":false},{\"id\":\"c0f2bd94-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[11.4904944856263,-4.667212294764269],[13.377485271303673,2.901094370188516]],\"pensize\":1,\"pencolor\":[255,34,0],\"filled\":false},{\"id\":\"c0f2f124-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[13.377485271303673,2.901094370188516],[10.641324124698285,10.418635336475774]],\"pensize\":1,\"pencolor\":[255,35,0],\"filled\":false},{\"id\":\"c0f31d8e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[10.641324124698285,10.418635336475774],[4.00738477082369,15.238474405274022]],\"pensize\":1,\"pencolor\":[255,36,0],\"filled\":false},{\"id\":\"c0f3499e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[4.00738477082369,15.238474405274022],[-4.3874981761367176,15.531630177574991]],\"pensize\":1,\"pencolor\":[255,37,0],\"filled\":false},{\"id\":\"c0f37400-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-4.3874981761367176,15.531630177574991],[-11.68071180308196,10.974324505169394]],\"pensize\":1,\"pencolor\":[255,38,0],\"filled\":false},{\"id\":\"c0f3aace-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-11.68071180308196,10.974324505169394],[-15.259994262148966,2.9351244779144885]],\"pensize\":1,\"pencolor\":[255,39,0],\"filled\":false},{\"id\":\"c0f3dc2e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-15.259994262148966,2.9351244779144885],[-13.69716066314655,-5.928145299195377]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"c0f40b5e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-13.69716066314655,-5.928145299195377],[-7.30630365492374,-12.546071462310932]],\"pensize\":1,\"pencolor\":[255,41,0],\"filled\":false},{\"id\":\"c0f43336-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-7.30630365492374,-12.546071462310932],[1.8882837919740432,-14.500441355997818]],\"pensize\":1,\"pencolor\":[255,42,0],\"filled\":false},{\"id\":\"c0f45e6a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[1.8882837919740432,-14.500441355997818],[10.789248795815178,-10.904218059205007]],\"pensize\":1,\"pencolor\":[255,43,0],\"filled\":false},{\"id\":\"c0f48a2a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[10.789248795815178,-10.904218059205007],[16.269339249828445,-2.7796498481655654]],\"pensize\":1,\"pencolor\":[255,44,0],\"filled\":false},{\"id\":\"c0f4ba54-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[16.269339249828445,-2.7796498481655654],[16.26933924982838,7.220350151834431]],\"pensize\":1,\"pencolor\":[255,45,0],\"filled\":false},{\"id\":\"c0f4dffc-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[16.26933924982838,7.220350151834431],[10.56557163442671,15.676533391895816]],\"pensize\":1,\"pencolor\":[255,46,0],\"filled\":false},{\"id\":\"c0f507c0-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[10.56557163442671,15.676533391895816],[0.9228595469321004,19.572441963421237]],\"pensize\":1,\"pencolor\":[255,47,0],\"filled\":false},{\"id\":\"c0f5318c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[0.9228595469321004,19.572441963421237],[-9.44550502084622,17.368578040752922]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"c0f559a0-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-9.44550502084622,17.368578040752922],[-16.947815421803337,9.599708197095447]],\"pensize\":1,\"pencolor\":[255,49,0],\"filled\":false},{\"id\":\"c0f57e58-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-16.947815421803337,9.599708197095447],[-18.8579453761395,-1.2331770860388467]],\"pensize\":1,\"pencolor\":[255,50,0],\"filled\":false},{\"id\":\"c0f5a220-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-18.8579453761395,-1.2331770860388467],[-14.302494973690475,-11.464886211635939]],\"pensize\":1,\"pencolor\":[255,51,0],\"filled\":false},{\"id\":\"c0f5d0f6-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-14.302494973690475,-11.464886211635939],[-4.634746677507184,-17.505965823894403]],\"pensize\":1,\"pencolor\":[255,52,0],\"filled\":false},{\"id\":\"c0f5f496-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-4.634746677507184,-17.505965823894403],[6.958186915914313,-17.101131662145303]],\"pensize\":1,\"pencolor\":[255,53,0],\"filled\":false},{\"id\":\"c0f615d4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[6.958186915914313,-17.101131662145303],[16.504587449538633,-10.165265685094052]],\"pensize\":1,\"pencolor\":[255,54,0],\"filled\":false},{\"id\":\"c0f6353c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[16.504587449538633,-10.165265685094052],[20.608829169446565,1.11104576433687]],\"pensize\":1,\"pencolor\":[255,55,0],\"filled\":false},{\"id\":\"c0f65a44-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[20.608829169446565,1.11104576433687],[17.65738204313053,12.948653624903994]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"c0f680d2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[17.65738204313053,12.948653624903994],[8.442386207210784,21.245873143753755]],\"pensize\":1,\"pencolor\":[255,57,0],\"filled\":false},{\"id\":\"c0f6a15c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[8.442386207210784,21.245873143753755],[-4.034991458933002,22.99945421585048]],\"pensize\":1,\"pencolor\":[255,58,0],\"filled\":false},{\"id\":\"c0f6c22c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-4.034991458933002,22.99945421585048],[-15.539555251562286,17.388303536950207]],\"pensize\":1,\"pencolor\":[255,59,0],\"filled\":false},{\"id\":\"c0f6ebd0-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-15.539555251562286,17.388303536950207],[-22.03955525156219,6.129973287752469]],\"pensize\":1,\"pencolor\":[255,60,0],\"filled\":false},{\"id\":\"c0f71538-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-22.03955525156219,6.129973287752469],[-21.118769798139635,-7.0378721756771885]],\"pensize\":1,\"pencolor\":[255,61,0],\"filled\":false},{\"id\":\"c0f74062-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-21.118769798139635,-7.0378721756771885],[-12.868906028775735,-17.59721627400718]],\"pensize\":1,\"pencolor\":[255,62,0],\"filled\":false},{\"id\":\"c0f76448-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-12.868906028775735,-17.59721627400718],[0.06546259283837408,-21.799847397506348]],\"pensize\":1,\"pencolor\":[255,63,0],\"filled\":false},{\"id\":\"c0f78f90-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[0.06546259283837408,-21.799847397506348],[13.330873996787123,-17.99605188723164]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"c0f7b498-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[13.330873996787123,-17.99605188723164],[22.32990053239856,-7.271429683565879]],\"pensize\":1,\"pencolor\":[255,65,0],\"filled\":false},{\"id\":\"c0f7dd42-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[22.32990053239856,-7.271429683565879],[23.814204710799107,6.850781230663598]],\"pensize\":1,\"pencolor\":[255,66,0],\"filled\":false},{\"id\":\"c0f802f4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[23.814204710799107,6.850781230663598],[17.05381420668217,19.565226567832063]],\"pensize\":1,\"pencolor\":[255,67,0],\"filled\":false},{\"id\":\"c0f82a0e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[17.05381420668217,19.565226567832063],[4.16277935094179,26.419511384505938]],\"pensize\":1,\"pencolor\":[255,68,0],\"filled\":false},{\"id\":\"c0f84e30-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[4.16277935094179,26.419511384505938],[-10.556144700508622,24.87249012814453]],\"pensize\":1,\"pencolor\":[255,69,0],\"filled\":false},{\"id\":\"c0f872de-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-10.556144700508622,24.87249012814453],[-22.046811347293186,15.230675982846348]],\"pensize\":1,\"pencolor\":[255,70,0],\"filled\":false},{\"id\":\"c0f898ea-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-22.046811347293186,15.230675982846348],[-26.236499155711435,0.6194982045838824]],\"pensize\":1,\"pencolor\":[255,71,0],\"filled\":false},{\"id\":\"c0f8bee2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-26.236499155711435,0.6194982045838824],[-21.477637442337112,-14.026772146361417]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"c0f8e61a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-21.477637442337112,-14.026772146361417],[-9.184669686072173,-23.631091161441546]],\"pensize\":1,\"pencolor\":[255,73,0],\"filled\":false},{\"id\":\"c0f90f3c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-9.184669686072173,-23.631091161441546],[6.576842308033038,-24.73324344659856]],\"pensize\":1,\"pencolor\":[255,74,0],\"filled\":false},{\"id\":\"c0f92ecc-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[6.576842308033038,-24.73324344659856],[20.433248768583947,-16.733243446598422]],\"pensize\":1,\"pencolor\":[255,75,0],\"filled\":false},{\"id\":\"c0f955c8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[20.433248768583947,-16.733243446598422],[27.53486134656683,-2.172779896551864]],\"pensize\":1,\"pencolor\":[255,76,0],\"filled\":false},{\"id\":\"c0f97d96-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[27.53486134656683,-2.172779896551864],[25.252422490821587,14.067616430809837]],\"pensize\":1,\"pencolor\":[255,77,0],\"filled\":false},{\"id\":\"c0f9a2a8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[25.252422490821587,14.067616430809837],[14.144854425264425,26.40382053373444]],\"pensize\":1,\"pencolor\":[255,78,0],\"filled\":false},{\"id\":\"c0f9c8aa-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[14.144854425264425,26.40382053373444],[-2.1561137761723312,30.468108379808676]],\"pensize\":1,\"pencolor\":[255,79,0],\"filled\":false},{\"id\":\"c0f9f10e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-2.1561137761723312,30.468108379808676],[-18.130888329532688,24.65376594327215]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"c0fa14f4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-18.130888329532688,24.65376594327215],[-28.240794668963062,10.73867364002297]],\"pensize\":1,\"pencolor\":[255,81,0],\"filled\":false},{\"id\":\"c0fa3e0c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-28.240794668963062,10.73867364002297],[-28.84804591158639,-6.650726750109271]],\"pensize\":1,\"pencolor\":[255,82,0],\"filled\":false},{\"id\":\"c0fa67e2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-28.84804591158639,-6.650726750109271],[-19.521466861081834,-21.57637324246224]],\"pensize\":1,\"pencolor\":[255,83,0],\"filled\":false},{\"id\":\"c0fa8ef2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-19.521466861081834,-21.57637324246224],[-3.260357715043483,-28.816285489211282]],\"pensize\":1,\"pencolor\":[255,84,0],\"filled\":false},{\"id\":\"c0fab472-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-3.260357715043483,-28.816285489211282],[14.46618183917619,-25.690618291206324]],\"pensize\":1,\"pencolor\":[255,85,0],\"filled\":false},{\"id\":\"c0fadb32-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[14.46618183917619,-25.690618291206324],[27.55816620533946,-13.047835948852434]],\"pensize\":1,\"pencolor\":[255,86,0],\"filled\":false},{\"id\":\"c0fb0256-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[27.55816620533946,-13.047835948852434],[31.383741316386004,4.950079904649606]],\"pensize\":1,\"pencolor\":[255,87,0],\"filled\":false},{\"id\":\"c0fb24f2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[31.383741316386004,4.950079904649606],[24.41605867884984,22.195699599591734]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"c0fb4a9a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[24.41605867884984,22.195699599591734],[8.830152314814955,32.70852618484156]],\"pensize\":1,\"pencolor\":[255,89,0],\"filled\":false},{\"id\":\"c0fb6ff2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[8.830152314814955,32.70852618484156],[-10.16984768518501,32.708526184841325]],\"pensize\":1,\"pencolor\":[255,90,0],\"filled\":false},{\"id\":\"c0fb995a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-10.16984768518501,32.708526184841325],[-26.08736907824165,21.972022438202814]],\"pensize\":1,\"pencolor\":[255,91,0],\"filled\":false},{\"id\":\"c0fbc1a0-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-26.08736907824165,21.972022438202814],[-33.35473699051011,3.984655659607082]],\"pensize\":1,\"pencolor\":[255,92,0],\"filled\":false},{\"id\":\"c0fbe37e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-33.35473699051011,3.984655659607082],[-29.279667850481797,-15.18703731477542]],\"pensize\":1,\"pencolor\":[255,93,0],\"filled\":false},{\"id\":\"c0fc0d54-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-29.279667850481797,-15.18703731477542],[-15.036739803776355,-28.941273049863355]],\"pensize\":1,\"pencolor\":[255,94,0],\"filled\":false},{\"id\":\"c0fc3c52-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-15.036739803776355,-28.941273049863355],[4.659415256467815,-32.414236603201694]],\"pensize\":1,\"pencolor\":[255,95,0],\"filled\":false},{\"id\":\"c0fc60ec-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[4.659415256467815,-32.414236603201694],[23.113033500848204,-24.198156413070286]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"c0fc89be-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[23.113033500848204,-24.198156413070286],[33.92338649120532,-6.897975251479082]],\"pensize\":1,\"pencolor\":[255,97,0],\"filled\":false},{\"id\":\"c0fcb1d2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[33.92338649120532,-6.897975251479082],[33.20445685913352,13.689475785114237]],\"pensize\":1,\"pencolor\":[255,98,0],\"filled\":false},{\"id\":\"c0fcd95a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[33.20445685913352,13.689475785114237],[20.978523611449873,30.517029268112942]],\"pensize\":1,\"pencolor\":[255,99,0],\"filled\":false},{\"id\":\"c0fd00c4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[20.978523611449873,30.517029268112942],[1.244978574945737,37.6994522779517]],\"pensize\":1,\"pencolor\":[255,100,0],\"filled\":false},{\"id\":\"c0fd275c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[1.244978574945737,37.6994522779517],[-19.325290822105277,32.57070809123847]],\"pensize\":1,\"pencolor\":[255,101,0],\"filled\":false},{\"id\":\"c0fd4cb4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-19.325290822105277,32.57070809123847],[-33.6446857981846,16.667408826022076]],\"pensize\":1,\"pencolor\":[255,102,0],\"filled\":false},{\"id\":\"c0fd71b2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-33.6446857981846,16.667408826022076],[-36.65082477892171,-4.722381458795841]],\"pensize\":1,\"pencolor\":[255,103,0],\"filled\":false},{\"id\":\"c0fd9aac-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-36.65082477892171,-4.722381458795841],[-27.094333778919562,-24.316091668117505]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"c0fdc22a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-27.094333778919562,-24.316091668117505],[-8.041774895661792,-35.3160916681172]],\"pensize\":1,\"pencolor\":[255,105,0],\"filled\":false},{\"id\":\"c0fde44e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-8.041774895661792,-35.3160916681172],[14.104147020106236,-33.76749795099729]],\"pensize\":1,\"pencolor\":[255,106,0],\"filled\":false},{\"id\":\"c0fe0b36-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[14.104147020106236,-33.76749795099729],[31.75558790089656,-19.976680903702302]],\"pensize\":1,\"pencolor\":[255,107,0],\"filled\":false},{\"id\":\"c0fe3296-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[31.75558790089656,-19.976680903702302],[38.739371973770034,1.5171963645682283]],\"pensize\":1,\"pencolor\":[255,108,0],\"filled\":false},{\"id\":\"c0fe5ab4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[38.739371973770034,1.5171963645682283],[32.45484026114213,23.433963031961753]],\"pensize\":1,\"pencolor\":[255,109,0],\"filled\":false},{\"id\":\"c0fe8386-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[32.45484026114213,23.433963031961753],[14.835818069405448,38.21807805475186]],\"pensize\":1,\"pencolor\":[255,110,0],\"filled\":false},{\"id\":\"c0fea762-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[14.835818069405448,38.21807805475186],[-8.237089903138482,40.64313840256106]],\"pensize\":1,\"pencolor\":[255,111,0],\"filled\":false},{\"id\":\"c0fed2d2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-8.237089903138482,40.64313840256106],[-28.89806357603716,29.657503833370924]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"c0ff01bc-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-28.89806357603716,29.657503833370924],[-39.97759245778384,8.819940641900125]],\"pensize\":1,\"pencolor\":[255,113,0],\"filled\":false},{\"id\":\"c0ff2714-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-39.97759245778384,8.819940641900125],[-37.489815032013325,-14.84968046786469]],\"pensize\":1,\"pencolor\":[255,114,0],\"filled\":false},{\"id\":\"c0ff4eba-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-37.489815032013325,-14.84968046786469],[-22.062912399536124,-33.23474710271988]],\"pensize\":1,\"pencolor\":[255,115,0],\"filled\":false},{\"id\":\"c0ff79ee-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-22.062912399536124,-33.23474710271988],[1.1996206421712472,-39.905171113490866]],\"pensize\":1,\"pencolor\":[255,116,0],\"filled\":false},{\"id\":\"c0ffa464-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[1.1996206421712472,-39.905171113490866],[24.405399639772813,-32.36515645074177]],\"pensize\":1,\"pencolor\":[255,117,0],\"filled\":false},{\"id\":\"c0ffc6e2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[24.405399639772813,-32.36515645074177],[39.550671932783644,-12.9800919120162]],\"pensize\":1,\"pencolor\":[255,118,0],\"filled\":false},{\"id\":\"c0fff22a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[39.550671932783644,-12.9800919120162],[41.280632481637525,11.759496534427416]],\"pensize\":1,\"pencolor\":[255,119,0],\"filled\":false},{\"id\":\"c1001674-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[41.280632481637525,11.759496534427416],[28.780632481637184,33.41013162903812]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"c1003e9c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[28.780632481637184,33.41013162903812],[6.131022514898039,44.45708452812246]],\"pensize\":1,\"pencolor\":[255,121,0],\"filled\":false},{\"id\":\"c100644e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[6.131022514898039,44.45708452812246],[-19.02178643113773,40.92208776373638]],\"pensize\":1,\"pencolor\":[255,122,0],\"filled\":false},{\"id\":\"c1008ba4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-19.02178643113773,40.92208776373638],[-38.04629396335869,23.792344240949326]],\"pensize\":1,\"pencolor\":[255,123,0],\"filled\":false},{\"id\":\"c100b41c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-38.04629396335869,23.792344240949326],[-44.28787886982968,-1.2412854969714324]],\"pensize\":1,\"pencolor\":[255,124,0],\"filled\":false},{\"id\":\"c100dbae-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-44.28787886982968,-1.2412854969714324],[-35.3953551433619,-25.673293637404843]],\"pensize\":1,\"pencolor\":[255,125,0],\"filled\":false},{\"id\":\"c1010606-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-35.3953551433619,-25.673293637404843],[-14.199109890738054,-41.07326724746723]],\"pensize\":1,\"pencolor\":[255,126,0],\"filled\":false},{\"id\":\"c1012b68-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-14.199109890738054,-41.07326724746723],[12.184807942566028,-41.99461396041278]],\"pensize\":1,\"pencolor\":[255,127,0],\"filled\":false},{\"id\":\"c10153b8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[12.184807942566028,-41.99461396041278],[34.74288730032664,-27.898761531809143]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"c10177b2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[34.74288730032664,-27.898761531809143],[45.64342933475761,-3.4157432669872954]],\"pensize\":1,\"pencolor\":[255,129,0],\"filled\":false},{\"id\":\"c101a002-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[45.64342933475761,-3.4157432669872954],[40.954928537750014,23.174066064342174]],\"pensize\":1,\"pencolor\":[255,130,0],\"filled\":false},{\"id\":\"c101c712-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[40.954928537750014,23.174066064342174],[22.060220861264973,42.74010863355309]],\"pensize\":1,\"pencolor\":[255,131,0],\"filled\":false},{\"id\":\"c101edf0-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[22.060220861264973,42.74010863355309],[-4.741023398841342,48.4368889619592]],\"pensize\":1,\"pencolor\":[255,132,0],\"filled\":false},{\"id\":\"c10214f6-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-4.741023398841342,48.4368889619592],[-30.331297784884423,38.097746983679585]],\"pensize\":1,\"pencolor\":[255,133,0],\"filled\":false},{\"id\":\"c1023904-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-30.331297784884423,38.097746983679585],[-45.87686050137073,15.050502466649199]],\"pensize\":1,\"pencolor\":[255,134,0],\"filled\":false},{\"id\":\"c10260fa-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-45.87686050137073,15.050502466649199],[-45.87686050137021,-12.949497533350733]],\"pensize\":1,\"pencolor\":[255,135,0],\"filled\":false},{\"id\":\"c102900c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-45.87686050137021,-12.949497533350733],[-30.107620623494746,-36.32835707940256]],\"pensize\":1,\"pencolor\":[255,136,0],\"filled\":false},{\"id\":\"c102b38e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-30.107620623494746,-36.32835707940256],[-3.7755991537978417,-46.96718433241393]],\"pensize\":1,\"pencolor\":[255,137,0],\"filled\":false},{\"id\":\"c102d8a0-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-3.7755991537978417,-46.96718433241393],[24.199422227188812,-41.020909975025475]],\"pensize\":1,\"pencolor\":[255,138,0],\"filled\":false},{\"id\":\"c103017c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[24.199422227188812,-41.020909975025475],[44.205583296407475,-20.303923725271975]],\"pensize\":1,\"pencolor\":[255,139,0],\"filled\":false},{\"id\":\"c1032332-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[44.205583296407475,-20.303923725271975],[49.241380448747876,8.255501112082086]],\"pensize\":1,\"pencolor\":[255,140,0],\"filled\":false},{\"id\":\"c1034650-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[49.241380448747876,8.255501112082086],[37.364670470934,34.931028475245725]],\"pensize\":1,\"pencolor\":[255,141,0],\"filled\":false},{\"id\":\"c1036ad6-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[37.364670470934,34.931028475245725],[12.43205644393483,50.51065484370142]],\"pensize\":1,\"pencolor\":[255,142,0],\"filled\":false},{\"id\":\"c1038d9a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[12.43205644393483,50.51065484370142],[-17.149912035830308,49.4776297413068]],\"pensize\":1,\"pencolor\":[255,143,0],\"filled\":false},{\"id\":\"c103b108-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-17.149912035830308,49.4776297413068],[-41.25861846820334,31.961629222990666]],\"pensize\":1,\"pencolor\":[255,144,0],\"filled\":false},{\"id\":\"c103d840-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-41.25861846820334,31.961629222990666],[-51.51922276797282,3.770850599413283]],\"pensize\":1,\"pencolor\":[255,145,0],\"filled\":false},{\"id\":\"c1040022-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-51.51922276797282,3.770850599413283],[-44.213181520862285,-25.53208033412159]],\"pensize\":1,\"pencolor\":[255,146,0],\"filled\":false},{\"id\":\"c1042c28-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-44.213181520862285,-25.53208033412159],[-21.62157882634914,-45.87365076743037]],\"pensize\":1,\"pencolor\":[255,147,0],\"filled\":false},{\"id\":\"c1045252-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-21.62157882634914,-45.87365076743037],[8.680624077142927,-50.13234765680773]],\"pensize\":1,\"pencolor\":[255,148,0],\"filled\":false},{\"id\":\"c10479f8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[8.680624077142927,-50.13234765680773],[36.36348070315691,-36.63051633570359]],\"pensize\":1,\"pencolor\":[255,149,0],\"filled\":false},{\"id\":\"c104a00e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[36.36348070315691,-36.63051633570359],[51.8634807031563,-9.783728818385725]],\"pensize\":1,\"pencolor\":[255,150,0],\"filled\":false},{\"id\":\"c104c91c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[51.8634807031563,-9.783728818385725],[49.68707872233893,21.340269549720666]],\"pensize\":1,\"pencolor\":[255,151,0],\"filled\":false},{\"id\":\"c104f1a8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[49.68707872233893,21.340269549720666],[30.355308397112783,46.08380721297126]],\"pensize\":1,\"pencolor\":[255,152,0],\"filled\":false},{\"id\":\"c105161a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[30.355308397112783,46.08380721297126],[0.30192248218580175,55.84874423521893]],\"pensize\":1,\"pencolor\":[255,153,0],\"filled\":false},{\"id\":\"c1053afa-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[0.30192248218580175,55.84874423521893],[-30.266199448652475,47.083476320237736]],\"pensize\":1,\"pencolor\":[255,154,0],\"filled\":false},{\"id\":\"c1056016-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-30.266199448652475,47.083476320237736],[-50.83540295862116,22.57005414043007]],\"pensize\":1,\"pencolor\":[255,155,0],\"filled\":false},{\"id\":\"c10580dc-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-50.83540295862116,22.57005414043007],[-54.201219475838904,-9.453550890428321]],\"pensize\":1,\"pencolor\":[255,156,0],\"filled\":false},{\"id\":\"c105a83c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-54.201219475838904,-9.453550890428321],[-38.99034084157546,-38.06105289905715]],\"pensize\":1,\"pencolor\":[255,157,0],\"filled\":false},{\"id\":\"c105cd62-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-38.99034084157546,-38.06105289905715],[-10.206249314374173,-53.365825845876515]],\"pensize\":1,\"pencolor\":[255,158,0],\"filled\":false},{\"id\":\"c105f418-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-10.206249314374173,-53.365825845876515],[22.414068853705043,-49.93729225069674]],\"pensize\":1,\"pencolor\":[255,159,0],\"filled\":false},{\"id\":\"c1061b14-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[22.414068853705043,-49.93729225069674],[47.69353547663078,-28.725301131040414]],\"pensize\":1,\"pencolor\":[255,160,0],\"filled\":false},{\"id\":\"c10644d6-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[47.69353547663078,-28.725301131040414],[56.8446956897544,3.1885871741119125]],\"pensize\":1,\"pencolor\":[255,161,0],\"filled\":false},{\"id\":\"c1066ac4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[56.8446956897544,3.1885871741119125],[46.523528077630445,34.95387481836974]],\"pensize\":1,\"pencolor\":[255,162,0],\"filled\":false},{\"id\":\"c1069256-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[46.523528077630445,34.95387481836974],[20.04636675644416,55.640100389311215]],\"pensize\":1,\"pencolor\":[255,163,0],\"filled\":false},{\"id\":\"c106bdda-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[20.04636675644416,55.640100389311215],[-13.671298142337893,57.997869201861874]],\"pensize\":1,\"pencolor\":[255,164,0],\"filled\":false},{\"id\":\"c106e486-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-13.671298142337893,57.997869201861874],[-43.11616187100837,40.997869201861235]],\"pensize\":1,\"pencolor\":[255,165,0],\"filled\":false},{\"id\":\"c10706f0-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-43.11616187100837,40.997869201861235],[-58.1084550911941,10.259112818429433]],\"pensize\":1,\"pencolor\":[255,166,0],\"filled\":false},{\"id\":\"c107298c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-58.1084550911941,10.259112818429433],[-53.32090041816707,-23.806108746280426]],\"pensize\":1,\"pencolor\":[255,167,0],\"filled\":false},{\"id\":\"c1074d90-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-53.32090041816707,-23.806108746280426],[-30.168981438150006,-49.518919707797686]],\"pensize\":1,\"pencolor\":[255,168,0],\"filled\":false},{\"id\":\"c107786a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-30.168981438150006,-49.518919707797686],[3.59730983625483,-57.93780167466531]],\"pensize\":1,\"pencolor\":[255,169,0],\"filled\":false},{\"id\":\"c107a13c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[3.59730983625483,-57.93780167466531],[36.48655156376129,-45.967096658266115]],\"pensize\":1,\"pencolor\":[255,170,0],\"filled\":false},{\"id\":\"c107c414-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[36.48655156376129,-45.967096658266115],[57.17659244445562,-17.489698456267494]],\"pensize\":1,\"pencolor\":[255,171,0],\"filled\":false},{\"id\":\"c107eb38-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[57.17659244445562,-17.489698456267494],[58.41203462772329,17.88873682020849]],\"pensize\":1,\"pencolor\":[255,172,0],\"filled\":false},{\"id\":\"c1081388-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[58.41203462772329,17.88873682020849],[39.546908821020466,48.07924904337676]],\"pensize\":1,\"pencolor\":[255,173,0],\"filled\":false},{\"id\":\"c1084c2c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[39.546908821020466,48.07924904337676],[6.841981437415029,62.64042086548959]],\"pensize\":1,\"pencolor\":[255,174,0],\"filled\":false},{\"id\":\"c1087fc6-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[6.841981437415029,62.64042086548959],[-28.611097671024282,56.38908646947923]],\"pensize\":1,\"pencolor\":[255,175,0],\"filled\":false},{\"id\":\"c108b39c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-28.611097671024282,56.38908646947923],[-54.65119844328282,31.242453458862908]],\"pensize\":1,\"pencolor\":[255,176,0],\"filled\":false},{\"id\":\"c108e1be-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-54.65119844328282,31.242453458862908],[-62.21918398904839,-4.36211920784778]],\"pensize\":1,\"pencolor\":[255,177,0],\"filled\":false},{\"id\":\"c10912ba-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-62.21918398904839,-4.36211920784778],[-48.50858267002518,-38.297048284991845]],\"pensize\":1,\"pencolor\":[255,178,0],\"filled\":false},{\"id\":\"c109502c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-48.50858267002518,-38.297048284991845],[-17.99999999999914,-58.87534713271455]],\"pensize\":1,\"pencolor\":[255,179,0],\"filled\":false},{\"id\":\"c1098a9c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-17.99999999999914,-58.87534713271455],[19.000000000000846,-58.8753471327136]],\"pensize\":1,\"pencolor\":[255,180,0],\"filled\":false},{\"id\":\"c109b7a6-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[19.000000000000846,-58.8753471327136],[49.84019769904785,-38.07337112360103]],\"pensize\":1,\"pencolor\":[255,181,0],\"filled\":false},{\"id\":\"c109ed98-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[49.84019769904785,-38.07337112360103],[63.85048429280206,-3.396694962802826]],\"pensize\":1,\"pencolor\":[255,182,0],\"filled\":false},{\"id\":\"c10a24d4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[63.85048429280206,-3.396694962802826],[56.03300471805335,33.38165482478806]],\"pensize\":1,\"pencolor\":[255,183,0],\"filled\":false},{\"id\":\"c10a51d4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[56.03300471805335,33.38165482478806],[28.841960265251654,59.639741228137446]],\"pensize\":1,\"pencolor\":[255,184,0],\"filled\":false},{\"id\":\"c10a8370-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[28.841960265251654,59.639741228137446],[-8.580734349212424,66.23837197947984]],\"pensize\":1,\"pencolor\":[255,185,0],\"filled\":false},{\"id\":\"c10ab692-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-8.580734349212424,66.23837197947984],[-43.478170831159375,50.70103221398337]],\"pensize\":1,\"pencolor\":[255,186,0],\"filled\":false},{\"id\":\"c10aef36-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-43.478170831159375,50.70103221398337],[-63.82707057771361,18.13598532157608]],\"pensize\":1,\"pencolor\":[255,187,0],\"filled\":false},{\"id\":\"c10b186c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-63.82707057771361,18.13598532157608],[-62.47995000499607,-20.440500601360988]],\"pensize\":1,\"pencolor\":[255,188,0],\"filled\":false},{\"id\":\"c10b49ea-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-62.47995000499607,-20.440500601360988],[-39.673882216047275,-51.83035998310835]],\"pensize\":1,\"pencolor\":[255,189,0],\"filled\":false},{\"id\":\"c10b855e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-39.673882216047275,-51.83035998310835],[-3.0258700053964773,-65.16914557280846]],\"pensize\":1,\"pencolor\":[255,190,0],\"filled\":false},{\"id\":\"c10bbf06-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-3.0258700053964773,-65.16914557280846],[35.00972246462234,-55.68580726530044]],\"pensize\":1,\"pencolor\":[255,191,0],\"filled\":false},{\"id\":\"c10bf278-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[35.00972246462234,-55.68580726530044],[61.37346835516057,-26.40590114149037]],\"pensize\":1,\"pencolor\":[255,192,0],\"filled\":false},{\"id\":\"c10c284c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[61.37346835516057,-26.40590114149037],[66.88472315317809,12.808714380675983]],\"pensize\":1,\"pencolor\":[255,193,0],\"filled\":false},{\"id\":\"c10c5d12-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[66.88472315317809,12.808714380675983],[49.4375515109718,48.58071742338237]],\"pensize\":1,\"pencolor\":[255,194,0],\"filled\":false},{\"id\":\"c10c93f4-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[49.4375515109718,48.58071742338237],[14.796535359593676,68.58071742338143]],\"pensize\":1,\"pencolor\":[255,195,0],\"filled\":false},{\"id\":\"c10cc3e2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[14.796535359593676,68.58071742338143],[-25.305539460851215,65.77650717886648]],\"pensize\":1,\"pencolor\":[255,196,0],\"filled\":false},{\"id\":\"c10cfb00-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-25.305539460851215,65.77650717886648],[-57.14117390656212,40.90378357570899]],\"pensize\":1,\"pencolor\":[255,197,0],\"filled\":false},{\"id\":\"c10d2a4e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-57.14117390656212,40.90378357570899],[-69.68726387818394,2.2908890141253764]],\"pensize\":1,\"pencolor\":[255,198,0],\"filled\":false},{\"id\":\"c10d66b2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-69.68726387818394,2.2908890141253764],[-58.44125976084928,-36.92858818015776]],\"pensize\":1,\"pencolor\":[255,199,0],\"filled\":false},{\"id\":\"c10d9952-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-58.44125976084928,-36.92858818015776],[-27.033437592970404,-63.28288017730502]],\"pensize\":1,\"pencolor\":[255,200,0],\"filled\":false},{\"id\":\"c10dcd14-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-27.033437592970404,-63.28288017730502],[13.940864496202625,-67.58945286393117]],\"pensize\":1,\"pencolor\":[255,201,0],\"filled\":false},{\"id\":\"c10e07e8-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[13.940864496202625,-67.58945286393117],[50.494894840561685,-48.15333016459421]],\"pensize\":1,\"pencolor\":[255,202,0],\"filled\":false},{\"id\":\"c10e35ec-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[50.494894840561685,-48.15333016459421],[70.0249118524537,-11.422710301662235]],\"pensize\":1,\"pencolor\":[255,203,0],\"filled\":false},{\"id\":\"c10e6850-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[70.0249118524537,-11.422710301662235],[65.65562208786457,30.14830492473152]],\"pensize\":1,\"pencolor\":[255,204,0],\"filled\":false},{\"id\":\"c10e999c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[65.65562208786457,30.14830492473152],[38.65854248102895,62.32217153572786]],\"pensize\":1,\"pencolor\":[255,205,0],\"filled\":false},{\"id\":\"c10ed448-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[38.65854248102895,62.32217153572786],[-1.9067010875684929,73.95406795120408]],\"pensize\":1,\"pencolor\":[255,206,0],\"filled\":false},{\"id\":\"c10f0328-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-1.9067010875684929,73.95406795120408],[-42.231497378482686,60.85174738970513]],\"pensize\":1,\"pencolor\":[255,207,0],\"filled\":false},{\"id\":\"c10f3910-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-42.231497378482686,60.85174738970513],[-68.4586762273548,27.282489286057974]],\"pensize\":1,\"pencolor\":[255,208,0],\"filled\":false},{\"id\":\"c10f6c78-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-68.4586762273548,27.282489286057974],[-71.44425330360212,-15.413252065062657]],\"pensize\":1,\"pencolor\":[255,209,0],\"filled\":false},{\"id\":\"c10f9f2c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-71.44425330360212,-15.413252065062657],[-49.944253303600995,-52.65234442779295]],\"pensize\":1,\"pencolor\":[255,210,0],\"filled\":false},{\"id\":\"c10fd604-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-49.944253303600995,-52.65234442779295],[-11.116350503476355,-71.58997796907997]],\"pensize\":1,\"pencolor\":[255,211,0],\"filled\":false},{\"id\":\"c1100516-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-11.116350503476355,-71.58997796907997],[31.861283679907686,-65.54986538741181]],\"pensize\":1,\"pencolor\":[255,212,0],\"filled\":false},{\"id\":\"c1103ca2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[31.861283679907686,-65.54986538741181],[64.26239807072125,-36.37577095016456]],\"pensize\":1,\"pencolor\":[255,213,0],\"filled\":false},{\"id\":\"c1106d26-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[64.26239807072125,-36.37577095016456],[74.85857709798542,6.123181860724486]],\"pensize\":1,\"pencolor\":[255,214,0],\"filled\":false},{\"id\":\"c110a8ea-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[74.85857709798542,6.123181860724486],[59.809690791654695,47.46965717530407]],\"pensize\":1,\"pencolor\":[255,215,0],\"filled\":false},{\"id\":\"c110e1ac-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[59.809690791654695,47.46965717530407],[24.051139640281157,73.44976532663034]],\"pensize\":1,\"pencolor\":[255,216,0],\"filled\":false},{\"id\":\"c1111424-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[24.051139640281157,73.44976532663034],[-20.321813079366827,74.99930298022004]],\"pensize\":1,\"pencolor\":[255,217,0],\"filled\":false},{\"id\":\"c11141e2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-20.321813079366827,74.99930298022004],[-58.14475816794278,51.364903795417895]],\"pensize\":1,\"pencolor\":[255,218,0],\"filled\":false},{\"id\":\"c1117a72-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-58.14475816794278,51.364903795417895],[-76.36655977773742,10.438067293028737]],\"pensize\":1,\"pencolor\":[255,219,0],\"filled\":false},{\"id\":\"c111a3d0-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-76.36655977773742,10.438067293028737],[-68.55239178272417,-33.87828159252048]],\"pensize\":1,\"pencolor\":[255,220,0],\"filled\":false},{\"id\":\"c111ce50-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-68.55239178272417,-33.87828159252048],[-37.15383343797641,-66.39244056782661]],\"pensize\":1,\"pencolor\":[255,221,0],\"filled\":false},{\"id\":\"c111fb96-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-37.15383343797641,-66.39244056782661],[7.254067635338764,-75.83163133095151]],\"pensize\":1,\"pencolor\":[255,222,0],\"filled\":false},{\"id\":\"c1122f94-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[7.254067635338764,-75.83163133095151],[49.533651403583825,-58.74957067118453]],\"pensize\":1,\"pencolor\":[255,223,0],\"filled\":false},{\"id\":\"c112597e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[49.533651403583825,-58.74957067118453],[75.14468638254287,-20.779649848162705]],\"pensize\":1,\"pencolor\":[255,224,0],\"filled\":false},{\"id\":\"c112857a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[75.14468638254287,-20.779649848162705],[75.1446863825414,25.22035015183741]],\"pensize\":1,\"pencolor\":[255,225,0],\"filled\":false},{\"id\":\"c112b482-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[75.1446863825414,25.22035015183741],[49.309974242191586,63.521886003879594]],\"pensize\":1,\"pencolor\":[255,226,0],\"filled\":false},{\"id\":\"c112e150-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[49.309974242191586,63.521886003879594],[6.2886433902919805,80.90363193837658]],\"pensize\":1,\"pencolor\":[255,227,0],\"filled\":false},{\"id\":\"c1130c3e-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[6.2886433902919805,80.90363193837658],[-39.29303480390317,71.2149471462675]],\"pensize\":1,\"pencolor\":[255,228,0],\"filled\":false},{\"id\":\"c1133aba-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-39.29303480390317,71.2149471462675],[-71.80304654138325,37.5498444904175]],\"pensize\":1,\"pencolor\":[255,229,0],\"filled\":false},{\"id\":\"c113662a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-71.80304654138325,37.5498444904175],[-79.96451089172751,-8.736119901156663]],\"pensize\":1,\"pencolor\":[255,230,0],\"filled\":false},{\"id\":\"c113937a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-79.96451089172751,-8.736119901156663],[-60.76654133854829,-51.855465501886925]],\"pensize\":1,\"pencolor\":[255,231,0],\"filled\":false},{\"id\":\"c113c020-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-60.76654133854829,-51.855465501886925],[-20.56906158073277,-76.9736386265396]],\"pensize\":1,\"pencolor\":[255,232,0],\"filled\":false},{\"id\":\"c113eb2c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-20.56906158073277,-76.9736386265396],[27.001941785376268,-75.31242258349896]],\"pensize\":1,\"pencolor\":[255,233,0],\"filled\":false},{\"id\":\"c1141f34-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[27.001941785376268,-75.31242258349896],[65.67295411649792,-47.21628752391737]],\"pensize\":1,\"pencolor\":[255,234,0],\"filled\":false},{\"id\":\"c1144cb6-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[65.67295411649792,-47.21628752391737],[82.08992099612855,-2.1110417261930863]],\"pensize\":1,\"pencolor\":[255,235,0],\"filled\":false},{\"id\":\"c11479c0-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[82.08992099612855,-2.1110417261930863],[70.42928562822297,44.65721228030969]],\"pensize\":1,\"pencolor\":[255,236,0],\"filled\":false},{\"id\":\"c114a756-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[70.42928562822297,44.65721228030969],[34.46107607511589,77.04313362807733]],\"pensize\":1,\"pencolor\":[255,237,0],\"filled\":false},{\"id\":\"c114e464-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[34.46107607511589,77.04313362807733],[-13.665952065724802,83.80694633473492]],\"pensize\":1,\"pencolor\":[255,238,0],\"filled\":false},{\"id\":\"c1150840-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-13.665952065724802,83.80694633473492],[-57.52710152512358,62.41443437142641]],\"pensize\":1,\"pencolor\":[255,239,0],\"filled\":false},{\"id\":\"c1153b80-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-57.52710152512358,62.41443437142641],[-82.02710152512225,19.979189585987967]],\"pensize\":1,\"pencolor\":[255,240,0],\"filled\":false},{\"id\":\"c1155f16-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-82.02710152512225,19.979189585987967],[-78.59508301690963,-29.10096168679543]],\"pensize\":1,\"pencolor\":[255,241,0],\"filled\":false},{\"id\":\"c11583ce-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-78.59508301690963,-29.10096168679543],[-48.18140613582068,-68.0286929149666]],\"pensize\":1,\"pencolor\":[255,242,0],\"filled\":false},{\"id\":\"c115af20-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-48.18140613582068,-68.0286929149666],[-1.009002927580383,-83.35593583596241]],\"pensize\":1,\"pencolor\":[255,243,0],\"filled\":false},{\"id\":\"c115d2a2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-1.009002927580383,-83.35593583596241],[46.86182953014758,-69.62919551627414]],\"pensize\":1,\"pencolor\":[255,244,0],\"filled\":false},{\"id\":\"c116029a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[46.86182953014758,-69.62919551627414],[79.00121001447332,-31.326973360323976]],\"pensize\":1,\"pencolor\":[255,245,0],\"filled\":false},{\"id\":\"c1163526-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[79.00121001447332,-31.326973360323976],[84.24853887050779,18.5980257871637]],\"pensize\":1,\"pencolor\":[255,246,0],\"filled\":false},{\"id\":\"c11663f2-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[84.24853887050779,18.5980257871637],[60.58717210609724,63.09858446725294]],\"pensize\":1,\"pencolor\":[255,247,0],\"filled\":false},{\"id\":\"c1169106-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[60.58717210609724,63.09858446725294],[15.91002390743455,86.85384554421753]],\"pensize\":1,\"pencolor\":[255,248,0],\"filled\":false},{\"id\":\"c116c07c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[15.91002390743455,86.85384554421753],[-34.61168837727373,81.54379961021894]],\"pensize\":1,\"pencolor\":[255,249,0],\"filled\":false},{\"id\":\"c116ec0a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-34.61168837727373,81.54379961021894],[-73.67995497634061,48.76163151620395]],\"pensize\":1,\"pencolor\":[255,250,0],\"filled\":false},{\"id\":\"c1171f2c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-73.67995497634061,48.76163151620395],[-87.7925875941693,-0.45496731583865113]],\"pensize\":1,\"pencolor\":[255,251,0],\"filled\":false},{\"id\":\"c117503c-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-87.7925875941693,-0.45496731583865113],[-71.90911408329522,-49.33927225340916]],\"pensize\":1,\"pencolor\":[255,252,0],\"filled\":false},{\"id\":\"c1177d00-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-71.90911408329522,-49.33927225340916],[-31.247759197187086,-81.10740438021179]],\"pensize\":1,\"pencolor\":[255,253,0],\"filled\":false},{\"id\":\"c117a8b6-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[-31.247759197187086,-81.10740438021179],[20.426058606272136,-84.72078972015564]],\"pensize\":1,\"pencolor\":[255,254,0],\"filled\":false},{\"id\":\"c117d89a-968e-11e7-a651-22000afd18d3\",\"kind\":\"line\",\"points\":[[20.426058606272136,-84.72078972015564],[65.45937960306216,-58.72078972015389]],\"pensize\":1,\"pencolor\":[255,255,0],\"filled\":false}]}\n<\/code><\/pre>",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"math_random_int\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_goto\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Fireworks display",
      "notes":"",
      "updated_at":"2017-09-11T04:12:45.510662+00:00",
      "label":"aca-blockly-logo-fireworks-display",
      "content":"<p>\n  The final problem for this project module is to put together everything you've learned up to now to create a fireworks display! In this problem you'll match the fireworks scene shown below.\n<\/p>\n\n<p>\n  You'll be able to generate different fireworks displays that vary based on the number of fireworks. The example below shows what the fireworks display will look like when you choose 5 fireworks:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"logo\"><o>Number of fireworks: <\/o>5\n<\/code><\/pre>\n\n<pre class=\"js-logo-final\" data-io=\"false\"><code data-lang=\"logo\">\n{\"width\":400,\"height\":300,\"bgcolor\":[0,0,64],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"aa1e131c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[116.0,0.0],[80.0,0.0]],\"pencolor\":[255,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa1e42ce-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[115.7161292473212,4.511996408314953],[80.0,0.0]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa1e7938-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[114.86899380063072,8.952835937934772],[80.0,0.0]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa1ead0e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[113.47195349197705,13.252483896648407],[80.0,0.0]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa1ede14-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[111.54704048157909,17.34313226766175],[80.0,0.0]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa1f0f56-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[109.1246117974981,21.160269082529034],[80.0,0.0]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa1f3fee-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[106.24287058717081,24.64369581343279],[80.0,0.0]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa1f7284-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[102.94726363095283,27.73847673992841],[80.0,0.0]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa1fa39e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[99.28976461924388,30.39580531807254],[80.0,0.0]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa1fd404-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[95.32805449634262,32.5737738887767],[80.0,0.0]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa200456-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[91.12461179749812,34.238034586625524],[80.0,0.0]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa20375a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[86.7457273250861,35.36234102623279],[80.0,0.0]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2067c0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[82.26045870305529,35.92896222341778],[80.0,0.0]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa209862-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[77.73954129694474,35.92896222341778],[80.0,0.0]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa20ca12-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[73.25427267491393,35.36234102623279],[80.0,0.0]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa20fe06-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[68.87538820250191,34.23803458662554],[80.0,0.0]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa212f70-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[64.6719455036574,32.57377388877671],[80.0,0.0]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa216288-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[60.71023538075613,30.395805318072547],[80.0,0.0]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa21932a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[57.05273636904717,27.738476739928412],[80.0,0.0]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa21c368-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[53.75712941282918,24.643695813432785],[80.0,0.0]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa21f6bc-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[50.87538820250188,21.16026908252902],[80.0,0.0]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa22283a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[48.452959518420904,17.343132267661733],[80.0,0.0]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2259cc-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[46.52804650802294,13.252483896648384],[80.0,0.0]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa228b90-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[45.131006199369274,8.952835937934744],[80.0,0.0]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa22baf2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[44.283870752678794,4.511996408314915],[80.0,0.0]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa22f2d8-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[44.0,-4.355290618687629e-14],[80.0,0.0]],\"pencolor\":[255,200,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2332a2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[44.2838707526788,-4.511996408315002],[80.0,0.0]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa237b22-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[45.131006199369295,-8.952835937934827],[80.0,0.0]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa23b3da-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[46.528046508022975,-13.252483896648465],[80.0,0.0]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa23f296-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[48.45295951842094,-17.343132267661808],[80.0,0.0]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2434e0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[50.87538820250194,-21.160269082529094],[80.0,0.0]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa246ed8-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[53.757129412829244,-24.64369581343285],[80.0,0.0]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa24ac04-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[57.052736369047224,-27.73847673992846],[80.0,0.0]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa24eafc-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[60.71023538075619,-30.395805318072583],[80.0,0.0]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa252828-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[64.67194550365745,-32.573773888776735],[80.0,0.0]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa256496-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[68.87538820250198,-34.23803458662555],[80.0,0.0]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa25a30c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[73.254272674914,-35.36234102623281],[80.0,0.0]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa25dbc4-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[77.73954129694482,-35.928962223417784],[80.0,0.0]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa261d5a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[82.26045870305539,-35.92896222341777],[80.0,0.0]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa266440-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[86.7457273250862,-35.36234102623277],[80.0,0.0]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa26985c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[91.12461179749822,-34.23803458662549],[80.0,0.0]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa26d038-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[95.32805449634273,-32.57377388877665],[80.0,0.0]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa27137c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[99.289764619244,-30.39580531807247],[80.0,0.0]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa275580-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[102.94726363095293,-27.738476739928323],[80.0,0.0]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa279496-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[106.24287058717091,-24.643695813432686],[80.0,0.0]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa27ccfe-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[109.1246117974982,-21.16026908252891],[80.0,0.0]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2807e6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[111.54704048157916,-17.343132267661613],[80.0,0.0]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2843b4-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[113.4719534919771,-13.252483896648254],[80.0,0.0]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa288824-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[114.86899380063076,-8.952835937934607],[80.0,0.0]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa28bcf4-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[115.71612924732122,-4.511996408314777],[80.0,0.0]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa292608-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.084521303612],[35.84597134749332,110.32255589023758],[24.72135954999539,76.084521303612]],\"pencolor\":[255,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa295aba-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.084521303612],[31.467086875081293,111.44686232984482],[24.72135954999539,76.084521303612]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa298b20-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.084521303612],[26.981818253050488,112.01348352702979],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa29b7e4-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[22.460900846939925,112.01348352702976],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa29e80e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[17.975632224909123,111.44686232984476],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2a1a4a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[13.59674775249711,110.32255589023748],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2a4cf4-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[9.393305053652613,108.65829519238864],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2a7c2e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[5.431594930751356,106.48032662168445],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2aa898-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[1.7740959190424128,103.8229980435403],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2ad534-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-1.5215110371755607,100.72821711704465],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2b046e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-4.403252247502838,97.24479038614088],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2b32e0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-6.825680931583797,93.42765357127357],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2b5ef0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-8.750593941981741,89.33700520026021],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2b8cc2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-10.147634250635384,85.03735724154656],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2bbcf6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-10.994769697325843,80.59651771192674],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2beb68-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-11.278640450004609,76.08452130361177],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2c1a20-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-10.99476969732578,71.57252489529681],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2c42f2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-10.14763425063527,67.131685365677],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2c713c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-8.750593941981563,62.832037406963366],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2c9f90-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-6.825680931583573,58.74138903595003],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2cd212-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-4.403252247502561,54.92425222108276],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2d00d4-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[-1.5215110371752374,51.440825490179016],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2d2e2e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[1.7740959190427645,48.34604456368343],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2d61f0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[5.431594930751739,45.68871598553932],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2d93f0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[9.393305053653025,43.51074741483519],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2dbf7e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[13.596747752497553,41.84648671698639],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,200,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2df1f6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[17.97563222490959,40.72218027737916],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2e1e74-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[22.460900846940405,40.15555908019421],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2e4b7e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[26.98181825305097,40.15555908019425],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2e778e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[31.46708687508178,40.72218027737927],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2ea7fe-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[35.845971347493794,41.846486716986576],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2ed5a8-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[40.0494140463383,43.510747414835436],[24.721359549995395,76.08452130361201]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2f0712-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549995395,76.08452130361201],[44.01112416923955,45.688715985539645],[24.721359549995398,76.08452130361201]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2f376e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549995398,76.08452130361201],[47.66862318094849,48.346044563683805],[24.721359549995398,76.08452130361201]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2f6662-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549995398,76.08452130361201],[50.964230137166446,51.44082549017946],[24.721359549995398,76.08452130361201]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2f9420-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549995398,76.08452130361201],[53.8459713474937,54.92425222108325],[24.721359549995395,76.08452130361201]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2fc44a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549995395,76.08452130361201],[56.26840003157465,58.74138903595056],[24.721359549995395,76.08452130361201]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa2fef60-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549995395,76.08452130361201],[58.19331304197257,62.832037406963934],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa302336-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[59.5903533506262,67.13168536567758],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3052c0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[60.43748879731664,71.57252489529742],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa308312-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[60.72135954999539,76.08452130361239],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa30b3c8-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[60.43748879731655,80.59651771192735],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa30e7b2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[59.59035335062601,85.03735724154716],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa311962-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[58.1933130419723,89.33700520026078],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3150da-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[56.268400031574295,93.42765357127409],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa317c54-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[53.845971347493276,97.24479038614135],[24.721359549995395,76.08452130361201]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa31a850-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549995395,76.08452130361201],[50.96423013716594,100.72821711704508],[24.72135954999539,76.08452130361201]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa31d96a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999539,76.08452130361201],[47.66862318094793,103.82299804354066],[24.721359549995395,76.08452130361201]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa320c46-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549995395,76.08452130361201],[44.011124169238954,106.48032662168475],[24.721359549995395,76.08452130361201]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3237c0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549995395,76.08452130361201],[40.049414046337674,108.65829519238886],[24.721359549995398,76.08452130361201]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa32ae80-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.022820183396625],[-93.84597134749423,68.18308926592535],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa32e1f2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-96.26840003157517,64.36595245105804],[-64.7213595499959,47.022820183396625]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa330bdc-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.022820183396625],[-98.19331304197308,60.27530408004466],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3340b6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-99.59035335062671,55.975656121331006],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa336bcc-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-100.43748879731714,51.53481659171117],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa339dae-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-100.7213595499959,47.022820183396206],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa33cd06-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-100.43748879731704,42.51082377508125],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa33fd26-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-99.59035335062651,38.069984245461434],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa342cb0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-98.19331304197279,33.77033628674781],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa345ae6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-96.26840003157477,29.679687915734487],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa34896c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-93.84597134749374,25.86255110086723],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa34ba36-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-90.9642301371664,22.3791243699635],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa34ed6c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-87.66862318094837,19.284343443467918],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa351846-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-84.01112416923938,16.62701486532383],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3548ac-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-80.04941404633809,14.44904629461972],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa35741c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-75.84597134749356,12.784785596770945],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa35a568-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-71.4670868750815,11.660479157163735],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa35d006-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-66.98181825305069,11.093857959978813],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa35fbbc-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-62.46090084694012,11.093857959978877],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa362a60-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-57.97563222490932,11.66047915716392],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa365b20-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-53.59674775249731,12.784785596771243],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa368a82-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-49.39330505365282,14.449046294620132],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa36bdc2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-45.43159493075158,16.62701486532435],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa36e82e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-41.774095919042665,19.28434344346854],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa371bdc-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-38.47848896282472,22.379124369964213],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3752be-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-35.59674775249747,25.862551100868018],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,200,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa378068-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-33.17431906841655,29.679687915735343],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa37b0d8-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-31.249406058018643,33.77033628674872],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa37e274-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-29.852365749365035,38.06998424546238],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa38151e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-29.005230302674626,42.51082377508222],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa38400c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-28.721359549995896,47.022820183397194],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa386e92-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-29.00523030267476,51.53481659171214],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa389e8a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-29.85236574936532,55.97565612133195],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa38d03a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-31.249406058019062,60.27530408004556],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa390a46-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-33.174319068417084,64.36595245105887],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3935ca-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-35.59674775249813,68.18308926592611],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3965cc-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-38.47848896282547,71.66651599682983],[-64.7213595499959,47.02282018339662]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa39951a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339662],[-41.7740959190435,74.7612969233254],[-64.7213595499959,47.022820183396625]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa39c378-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.022820183396625],[-45.431594930752496,77.41862550146948],[-64.7213595499959,47.02282018339663]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa39f046-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339663],[-49.39330505365379,79.59659407217357],[-64.7213595499959,47.02282018339663]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3a1e54-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339663],[-53.59674775249833,81.26085477002233],[-64.7213595499959,47.02282018339663]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3a4c3a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339663],[-57.97563222491036,82.38516120962953],[-64.7213595499959,47.02282018339663]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3a7e1c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339663],[-62.46090084694117,82.95178240681444],[-64.7213595499959,47.02282018339663]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3aaf22-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339663],[-66.98181825305174,82.95178240681437],[-64.7213595499959,47.02282018339663]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3adf88-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339663],[-71.46708687508253,82.38516120962932],[-64.7213595499959,47.02282018339663]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3b10f2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339663],[-75.84597134749453,81.26085477002198],[-64.7213595499959,47.022820183396625]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3b40e0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.022820183396625],[-80.04941404633902,79.59659407217309],[-64.7213595499959,47.022820183396625]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3b6e26-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.022820183396625],[-84.01112416924025,77.41862550146887],[-64.7213595499959,47.02282018339663]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3b9f2c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339663],[-87.66862318094917,74.76129692332468],[-64.7213595499959,47.02282018339663]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3bd208-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.7213595499959,47.02282018339663],[-90.9642301371671,71.66651599682899],[-64.7213595499959,47.022820183396625]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3c2df2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339908],[-93.84597134749212,-68.18308926592859],[-64.72135954999436,-47.02282018339908]],\"pencolor\":[255,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3c5d7c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339908],[-90.96423013716478,-71.6665159968323],[-64.72135954999436,-47.02282018339908]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3c9328-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339908],[-87.66862318094674,-74.76129692332786],[-64.72135954999436,-47.02282018339908]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3cc1e0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339908],[-84.01112416923775,-77.41862550147194],[-64.72135954999436,-47.02282018339908]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3ceee0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339908],[-80.04941404633644,-79.59659407217603],[-64.72135954999436,-47.02282018339908]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3d20ea-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339908],[-75.8459713474919,-81.26085477002479],[-64.72135954999436,-47.02282018339908]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3d50ce-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339908],[-71.46708687507984,-82.38516120963197],[-64.72135954999436,-47.02282018339907]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3d8210-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339907],[-66.98181825304903,-82.95178240681687],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3db604-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-62.46090084693846,-82.95178240681679],[-64.72135954999436,-47.022820183399055]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3de692-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.022820183399055],[-57.975632224907656,-82.38516120963173],[-64.72135954999436,-47.022820183399055]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3e154a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.022820183399055],[-53.59674775249565,-81.2608547700244],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3e46a0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-49.39330505365117,-79.59659407217549],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3e71d4-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-45.43159493074994,-77.41862550147127],[-64.72135954999436,-47.02282018339907]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3e9f42-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339907],[-41.77409591904103,-74.76129692332707],[-64.72135954999436,-47.02282018339907]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3ed19c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339907],[-38.47848896282309,-71.66651599683138],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3efe24-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-35.596747752495865,-68.18308926592756],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3f2840-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-33.174319068414945,-64.36595245106022],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3f57ac-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-31.24940605801706,-60.27530408004684],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3f8894-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-29.85236574936347,-55.975656121333174],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3fb83c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-29.00523030267307,-51.53481659171333],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa3fe708-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-28.72135954999436,-47.02282018339836],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4017e6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-29.005230302673247,-42.51082377508341],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4049e6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-29.852365749363813,-38.06998424546361],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa407952-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-31.24940605801757,-33.77033628675],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa40a6e8-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-33.17431906841561,-29.679687915736697],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa40d898-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-35.59674775249667,-25.86255110086946],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,200,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa410ae8-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-38.478488962824024,-22.379124369965762],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa413838-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-41.77409591904207,-19.284343443470206],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4167ea-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-45.431594930751075,-16.627014865326146],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4193aa-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-49.39330505365238,-14.449046294622065],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa41c780-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-53.59674775249691,-12.784785596773318],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa41f43a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-57.975632224908956,-11.660479157166144],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa422202-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-62.460900846939765,-11.093857959981243],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa42534e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-66.98181825305033,-11.093857959981328],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4282d8-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-71.46708687508112,-11.6604791571664],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa42abfa-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-75.84597134749312,-12.784785596773744],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa42d954-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-80.0494140463376,-14.449046294622654],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa430bd6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-84.01112416923883,-16.627014865326892],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa433ac0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-87.66862318094773,-19.284343443471098],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa436bd0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-90.96423013716566,-22.37912436996679],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa439e70-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-93.84597134749289,-25.862551100870608],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa43cc9c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-96.2684000315738,-29.679687915737947],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa43fb90-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-98.19331304197168,-33.77033628675133],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa443024-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-99.59035335062526,-38.069984245465],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa44744e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-100.43748879731567,-42.510823775084845],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa44a838-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-100.72135954999436,-47.02282018339981],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa44e1c2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-100.43748879731547,-51.53481659171476],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa451bec-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-99.5903533506249,-55.975656121334566],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa455c38-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-98.19331304197112,-60.27530408004818],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa459ac2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[-64.72135954999436,-47.02282018339906],[-96.26840003157308,-64.36595245106149],[-64.72135954999436,-47.02282018339906]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa463b62-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999781,-76.08452130361158],[35.84597134749664,-110.32255589023688],[24.721359549997814,-76.08452130361158]],\"pencolor\":[255,0,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa468036-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997814,-76.08452130361158],[40.04941404634113,-108.65829519238795],[24.721359549997818,-76.08452130361158]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa46c8c0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997818,-76.08452130361158],[44.01112416924235,-106.4803266216837],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa47043e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[47.66862318095125,-103.8229980435395],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa47434a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[50.964230137169174,-100.7282171170438],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa47877e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[53.845971347496395,-97.24479038613998],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa47c87e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[56.26840003157729,-93.42765357127263],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa48056e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[58.193313041975166,-89.33700520025924],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa484cd6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[59.590353350628746,-85.03735724154556],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa488818-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[60.437488797319126,-80.59651771192573],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa48c33c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[60.72135954999782,-76.08452130361076],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa490aae-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[60.43748879731892,-71.5725248952958],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4952d4-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[59.590353350628334,-67.131685365676],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa498dda-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[58.19331304197457,-62.8320374069624],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa49cfde-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[56.26840003157651,-58.7413890359491],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4a152a-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[53.84597134749544,-54.92425222108187],[24.72135954999782,-76.08452130361158]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4a54d6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999782,-76.08452130361158],[50.96423013716807,-51.440825490178185],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4a9a5e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[47.66862318095002,-48.34604456368264],[24.72135954999783,-76.08452130361158]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4adc30-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999783,-76.08452130361158],[44.01112416924101,-45.68871598553859],[24.72135954999783,-76.08452130361158]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4b1704-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999783,-76.08452130361158],[40.0494140463397,-43.510747414834526],[24.72135954999783,-76.08452130361158]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4b5412-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999783,-76.08452130361158],[35.84597134749515,-41.8464867169858],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4b979c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[31.467086875083105,-40.722180277378634],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4bd7ac-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[26.98181825305229,-40.155559080193754],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4c1186-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[22.46090084694173,-40.155559080193854],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4c5380-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[17.97563222491094,-40.72218027737894],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4c944e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[13.596747752498946,-41.8464867169863],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,200,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4ce368-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[9.393305053654467,-43.51074741483523],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,192,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4d2634-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[5.431594930753249,-45.68871598553948],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,184,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4d691e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[1.7740959190443526,-48.3460445636837],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,176,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4dac26-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-1.521511037173564,-51.4408254901794],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,168,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4deaa6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-4.403252247500777,-54.924252221083236],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,160,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4e31a0-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-6.825680931581672,-58.741389035950576],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,152,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4e744e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-8.750593941979542,-62.83203740696397],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,144,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4eb1de-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-10.147634250633107,-67.13168536567764],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,136,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4ef4aa-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-10.994769697323488,-71.57252489529749],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,128,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4f2a10-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-11.278640450002175,-76.08452130361246],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,120,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4f65de-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-10.994769697323267,-80.5965177119274],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,112,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4fb156-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-10.147634250632674,-85.03735724154721],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,104,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa4ff06c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-8.750593941978895,-89.33700520026082],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,96,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa503090-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-6.825680931580834,-93.42765357127412],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,88,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa50780c-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-4.403252247499751,-97.24479038614135],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,80,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa50bdb2-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[-1.5215110371723668,-100.72821711704503],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,72,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa5100a6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[1.7740959190456884,-103.82299804354057],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,64,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa51408e-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[5.431594930754713,-106.48032662168461],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,56,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa517644-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[9.393305053656036,-108.65829519238866],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,48,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa51b708-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[13.596747752500594,-110.3225558902374],[24.721359549997825,-76.08452130361158]],\"pencolor\":[255,40,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa51faf6-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.721359549997825,-76.08452130361158],[17.97563222491265,-111.44686232984455],[24.72135954999783,-76.08452130361158]],\"pencolor\":[255,32,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa523da4-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999783,-76.08452130361158],[22.460900846943478,-112.01348352702942],[24.72135954999783,-76.08452130361158]],\"pencolor\":[255,24,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa5274b8-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999783,-76.08452130361158],[26.981818253054048,-112.0134835270293],[24.72135954999783,-76.08452130361158]],\"pencolor\":[255,16,0],\"pensize\":1,\"filled\":false},{\"id\":\"aa52bdce-969c-11e7-8585-22000ae83202\",\"kind\":\"line\",\"points\":[[24.72135954999783,-76.08452130361158],[31.467086875084846,-111.4468623298442],[24.72135954999783,-76.08452130361158]],\"pencolor\":[255,8,0],\"pensize\":1,\"filled\":false}]}\n<\/code><\/pre>\n\n<p>\n  To get you started, we've provided some template code that includes some setup steps for the input and the variables you will need in your program. You don't need to change any of the existing code - you just need to fill in the bits that are missing inside the loop.\n<\/p>\n\n<p>\nHere is a complete description of the details you need to build this scene:\n<\/p>\n\n<ul>\n  <li>The background colour is rgb(0,0,64).<\/li>\n  <li>The program will ask the user to enter <code data-lang=\"py3\">\"Number of fireworks:\"<\/code>.<\/li>\n  <li>The number of spokes on each firework is (60 - (fireworks &times; 2)).<\/li>\n  <li>The angle between each firework is 360 &div; fireworks (so they end up in a circle).<\/li>\n  <li>The angle between each firework spoke is 360 &div; spokes (so the firework is complete).<\/li>\n  <li>The length of each firework spoke is 180 &div; fireworks (so they shrink as you have more fireworks).<\/li>\n  <li>The centre of each firework is 80 turtle steps from the turtle's starting location.<\/li>\n  <li>Each firework draws its first spoke red - rgb(255,0,0).<\/li>\n  <li>After each spoke, the turtle turns left the calculated spoke angle.<\/li>\n  <li>For the first half of the spokes in the firework, the amount of green increases by 8 after each spoke.<\/li>\n  <li>For the second half of the spokes in the firework, the amount of green decreases by 8 after each spoke.<\/li>\n  <li>After completing a firework, the turtle turns left the calculated firework angle.<\/li>\n<\/ul>\n\n<p>\n  And another example, but this time with 14 fireworks:\n<\/p>\n\n<pre class=\"js-terminal\" data-eg-id=\"\"><code data-lang=\"logo\"><o>Number of fireworks: <\/o>14\n<\/code><\/pre>\n\n<pre class=\"js-logo-final\" data-io=\"false\"><code data-lang=\"logo\">\n{\"width\":400,\"height\":300,\"bgcolor\":[0,0,64],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"b7fa7a02-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[92.85714285714286,0.0],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b7fab602-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[92.61009646232725,2.5083041402073634],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b7fae528-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[91.87845113228798,4.920215558979726],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b7fb1638-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[90.69032358674701,7.143045853109171],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b7fb473e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[89.0913729009699,9.091372900969896],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b7fb77d6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[87.14304585310917,10.690323586747011],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b7fbadbe-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[84.92021555897972,11.878451132287973],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b7fbdf78-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[82.50830414020736,12.610096462327249],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b7fc1100-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[80.0,12.857142857142858],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b7fc463e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[77.49169585979264,12.610096462327249],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b7fc7cf8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[75.07978444102028,11.878451132287973],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b7fcb54c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[72.85695414689083,10.690323586747013],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b7fce8d2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[70.9086270990301,9.091372900969898],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b7fd15dc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[69.30967641325299,7.143045853109171],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b7fd469c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[68.12154886771202,4.920215558979722],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b7fd77de-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[67.38990353767275,2.5083041402073567],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b7fdacb8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[67.14285714285714,-9.84489094009787e-15],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b7fdecd2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[67.38990353767275,-2.508304140207376],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b7fe2832-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[68.12154886771204,-4.9202155589797405],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b7fe6540-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[69.309676413253,-7.143045853109187],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b7fea960-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[70.90862709903011,-9.091372900969912],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b7feeaec-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[72.85695414689084,-10.690323586747024],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b7ff2476-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[75.0797844410203,-11.878451132287983],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b7ff63d2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[77.49169585979267,-12.610096462327254],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b7ff9fe6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[80.00000000000003,-12.857142857142858],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b7ffdc2c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[82.5083041402074,-12.610096462327242],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b8001bb0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[84.92021555897976,-11.878451132287958],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b8005fb2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[87.1430458531092,-10.690323586746988],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b8009a72-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[89.09137290096993,-9.091372900969866],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b800dbc2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[90.69032358674704,-7.143045853109134],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b8011240-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[91.87845113228799,-4.920215558979681],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b8015688-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[80.0,0.0],[92.61009646232726,-2.508304140207313],[80.0,0.0]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b801e1c0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[83.66139487665303,40.28920434663041],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b8021d3e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[82.35050138679941,42.44191887466988],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b80265d2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[80.64482257729054,44.29752696361678],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b8029cc8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[78.60990672822014,45.7847186352499],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b802df1c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[76.32395451447405,46.84634194765508],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b8031e78-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[73.87481379764975,47.44159931230178],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b80355f0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[71.35660368200085,47.54761532249083],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b8039416-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[68.86609757004327,47.16031584240511],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b803d9e4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[66.49900421496758,46.29458457386427],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b80412e2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[64.34628968692812,44.983691084010644],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b8044f00-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[62.49068159798121,43.27801227450176],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b8048b14-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[61.00348992634809,41.24309642543137],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b804c606-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[59.94186661394292,38.957144211685275],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b8050422-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[59.346609249296215,36.50800349486097],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b8054414-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[59.24059323910717,33.98979337921208],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b8057d80-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[59.62789271919289,31.499287267254484],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b805c5a6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[60.49362398773374,29.1321939121788],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b805fd8c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[61.80451747758737,26.979479384139335],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b80642f6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[63.51019628709625,25.12387129519243],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b80681ee-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[65.54511213616665,23.636679623559314],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b806beac-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[67.83106434991275,22.575056311154146],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b806f8d6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[70.28020506673705,21.979798946507444],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b8073666-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[72.79841518238594,21.873782936318406],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b8077b44-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[75.28892129434354,22.261082416404136],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b807bad2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[77.65601464941922,23.126813684944985],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b807f7fe-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[79.80872917745867,24.437707174798618],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b8083462-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[81.66433726640558,26.1433859843075],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b80877f6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[83.1515289380387,28.1783018333779],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b808ad48-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[84.21315225044385,30.464254047124],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b808ee3e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[84.80840961509055,32.91339476394831],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b8092d18-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[84.91442562527959,35.4316048795972],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b8096c60-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219338,34.71069912940462],[84.52712614519386,37.92211099155479],[72.07750943219338,34.71069912940462]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b809f586-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.546518597442144],[57.89548160116761,72.59863765774546],[49.87918414869827,62.546518597442144]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b80a360e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.546518597442144],[55.78037954899508,73.9693910600277],[49.87918414869827,62.546518597442144]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b80a7268-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.546518597442144],[53.43849786701765,74.90116987959345],[49.87918414869827,62.54651859744214]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b80ab674-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744214],[50.95983375493134,75.3581663789544],[49.87918414869827,62.54651859744214]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b80af65c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744214],[48.43964088451277,75.32281843892667],[49.87918414869827,62.546518597442144]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b80b3248-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.546518597442144],[45.97476885443168,74.7964844610222],[49.87918414869827,62.546518597442144]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b80b6bd2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.546518597442144],[43.65994131448794,73.79939116484034],[49.87918414869827,62.54651859744214]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b80bb542-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744214],[41.58411578887134,72.36985628657702],[49.87918414869827,62.546518597442144]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b80be67a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.546518597442144],[39.82706508839495,70.56281604991148],[49.87918414869827,62.546518597442144]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b80c2964-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.546518597442144],[38.45631168611271,68.44771399773894],[49.87918414869827,62.546518597442144]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b80c5f6a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.546518597442144],[37.524532866546956,66.10583231576152],[49.87918414869827,62.54651859744215]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b80ca3da-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744215],[37.067536367186015,63.627168203675204],[49.87918414869827,62.54651859744215]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b80cda9e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744215],[37.10288430721374,61.10697533325663],[49.87918414869827,62.54651859744215]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b80d1a40-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744215],[37.62921828511822,58.642103303175546],[49.87918414869827,62.54651859744215]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b80d5dd4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744215],[38.62631158130008,56.3272757632318],[49.87918414869827,62.54651859744215]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b80d96dc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744215],[40.05584645956341,54.2514502376152],[49.87918414869827,62.54651859744215]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b80dcfc6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744215],[41.862886696228955,52.49439953713882],[49.87918414869827,62.54651859744215]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b80e145e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744215],[43.97798874840149,51.123646134856585],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b80e5478-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[46.31987043037893,50.191867315290835],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b80e8b00-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[48.79853454246524,49.734870815929895],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b80ec67e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[51.31872741288382,49.77021875595763],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b80f08e6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[53.7835994429649,50.296552733862114],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b80f3dac-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[56.09842698290864,51.29364603004397],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b80f77f4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[58.17425250852524,52.72318090830731],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b80fb32c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[59.93130320900162,54.530221144972856],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b80ff6c0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[61.30205661128385,56.645323197145395],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b8102e2e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[62.2338354308496,58.987204879122835],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b81076fe-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[62.690831930210535,61.46586899120915],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b810bbe6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[62.6554839901828,63.986061861627725],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b810f91c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.54651859744216],[62.129150012278316,66.45093389170881],[49.87918414869827,62.546518597442166]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b8113b7a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.546518597442166],[61.13205671609644,68.76576143165255],[49.87918414869827,62.546518597442166]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b8117c8e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414869827,62.546518597442166],[59.7025218378331,70.84158695726914],[49.87918414869827,62.54651859744216]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b8120352-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.9942329745452],[20.662658153085527,90.52902041688297],[17.801674716504518,77.9942329745452]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b812479a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.9942329745452],[18.162269440051222,90.84631817089874],[17.801674716504518,77.9942329745452]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b81287fa-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.9942329745452],[15.648023274014871,90.66971749835106],[17.801674716504518,77.9942329745452]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b812c152-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.9942329745452],[13.216540725131752,90.00600506404713],[17.801674716504518,77.9942329745452]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b812fd7a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.9942329745452],[10.961262304164322,88.88068696462304],[17.801674716504518,77.9942329745452]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b8133b64-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.9942329745452],[8.968857096055649,87.33700854355399],[17.801674716504518,77.9942329745452]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b81379e4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.9942329745452],[7.315892115599636,85.43429249685684],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b813b21a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[6.0658898800017695,83.2456591351507],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b813f838-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[5.266887274166743,80.85521641112621],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b814391a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[4.949589520150974,78.35482769809191],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b81477ae-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[5.12619019269866,75.84058153205555],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b814b818-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[5.789902627002592,73.40909898317243],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b814f990-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[6.915220726426687,71.153820562205],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b815395a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[8.45889914749574,69.16141535409633],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b8157046-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[10.3616151941929,67.50845037364031],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b815ab9c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[12.550248555899046,66.25844813804245],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b815ea9e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[14.940691279923541,65.45944553220744],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b8162838-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[17.44107999295785,65.14214777819167],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b81669d8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[19.955326158994204,65.31874845073936],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b816af2e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[22.38680870787732,65.9824608850433],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b816e156-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[24.64208712884475,67.10777898446739],[17.801674716504518,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b8172648-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716504518,77.99423297454521],[26.63449233695342,68.65145740553645],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b817648c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.80167471650452,77.99423297454521],[28.28745731740943,70.55417345223361],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b817a0c8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.80167471650452,77.99423297454521],[29.537459553007288,72.74280681393977],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b817e362-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.80167471650452,77.99423297454521],[30.33646215884231,75.13324953796426],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b8181a9e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.80167471650452,77.99423297454521],[30.653759912858064,77.63363825099857],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b8185aae-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.80167471650452,77.99423297454521],[30.47715924031037,80.14788441703492],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b8189c76-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.80167471650452,77.99423297454521],[29.813446806006432,82.57936696591804],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b818dee8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.80167471650452,77.99423297454521],[28.688128706582333,84.83464538688546],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b8191610-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.80167471650452,77.99423297454521],[27.144450285513273,86.82705059499412],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b8194f0e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.80167471650452,77.99423297454521],[25.24173423881611,88.48001557545012],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b819869a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.80167471650452,77.99423297454521],[23.053100877109962,89.73001781104799],[17.80167471650452,77.99423297454521]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b81a0cf0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716505783,77.99423297454454],[-20.662658153087207,90.52902041688222],[-17.801674716505783,77.99423297454454]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b81a534a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716505783,77.99423297454454],[-23.05310087711167,89.73001781104712],[-17.801674716505783,77.99423297454454]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b81a90e4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716505783,77.99423297454454],[-25.24173423881777,88.48001557544917],[-17.801674716505783,77.99423297454454]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b81ac924-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716505783,77.99423297454454],[-27.14445028551487,86.8270505949931],[-17.80167471650578,77.99423297454454]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b81b0c9a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454454],[-28.688128706583853,84.83464538688438],[-17.80167471650578,77.99423297454454]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b81b4c82-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454454],[-29.813446806007867,82.5793669659169],[-17.80167471650578,77.99423297454454]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b81b86b6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454454],[-30.477159240311714,80.14788441703377],[-17.80167471650578,77.99423297454454]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b81bc252-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454454],[-30.653759912859307,77.6336382509974],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b81c08fc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-30.336462158843453,75.1332495379631],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b81c4a92-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-29.537459553008347,72.74280681393863],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b81c7fa8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-28.2874573174104,70.55417345223253],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b81cbf68-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-26.634492336954317,68.65145740553542],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b81cfaa0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-24.642087128845592,67.10777898446645],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b81d3a60-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-22.386808707878117,65.98246088504243],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b81d75f2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-19.955326158994975,65.3187484507386],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b81dba62-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-17.441079992958613,65.142147778191],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b81dfa68-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-14.940691279924318,65.45944553220686],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b81e3c58-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-12.550248555899852,66.25844813804197],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b81e806e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-10.361615194193757,67.50845037363993],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b81eb53e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-8.458899147496659,69.16141535409601],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b81efa58-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-6.915220726427684,71.15382056220474],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b81f3982-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-5.789902627003675,73.40909898317221],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b81f802c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-5.126190192699839,75.84058153205535],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b81fbcf4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-4.94958952015225,78.35482769809173],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b81ffd0e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-5.2668872741681145,80.85521641112601],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b82038f0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-6.0658898800032315,83.24565913515048],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b8207e1e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-7.315892115601182,85.43429249685657],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b820b7bc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-8.968857096057265,87.33700854355367],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b820f7fe-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-10.961262304165995,88.88068696462264],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b821391c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-13.216540725133468,90.00600506404663],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b82179c2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-15.648023274016612,90.66971749835048],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b821b810-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650578,77.99423297454453],[-18.16226944005297,90.84631817089806],[-17.80167471650578,77.99423297454453]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b82243ac-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-57.895481601168626,72.5986376577433],[-49.879184148698954,62.54651859744025]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b8227a48-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.54651859744025],[-59.702521837834105,70.84158695726686],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b822bb66-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-61.13205671609737,68.7657614316502],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b822f766-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-62.12915001227915,66.45093389170643],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b82343e2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-62.65548399018354,63.98606186162532],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b8237a7e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-62.690831930211175,61.465868991206754],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b823b80e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-62.23383543085015,58.987204879120455],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b823fb5c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-61.30205661128431,56.64532319714305],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b8243c52-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-59.93130320900199,54.53022114497057],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b8250a74-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-58.17425250852554,52.72318090830509],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b8259a8e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-56.09842698290889,51.29364603004183],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b825d9b8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-53.783599442965105,50.296552733860054],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b82620a8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-51.318727412884,49.77021875595567],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b82669e6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-48.79853454246543,49.73487081592803],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b826a79e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-46.319870430379126,50.19186731528907],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b826d78c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-43.97798874840173,51.123646134854916],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b827185a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-41.862886696229246,52.494399537137234],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b82751f8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-40.055846459563774,54.25145023761368],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b8279352-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-38.62631158130052,56.32727576323034],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b827d588-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-37.62921828511875,58.642103303174125],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b8281b9c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-37.10288430721437,61.10697533325523],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b8285abc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-37.06753636718674,63.627168203673804],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b82890a4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-37.52453286654777,66.1058323157601],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b828d05a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-38.45631168611362,68.4477139977375],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b8290f66-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-39.82706508839594,70.56281604990997],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b8295836-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-41.584115788872396,72.36985628657544],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b8299a3a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-43.659941314489046,73.7993911648387],[-49.879184148698954,62.546518597440254]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b829d9d2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440254],[-45.97476885443283,74.79648446102047],[-49.879184148698954,62.54651859744026]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b82a128a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.54651859744026],[-48.439640884513935,75.32281843892486],[-49.879184148698954,62.54651859744027]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b82a49ee-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.54651859744027],[-50.959833754932504,75.35816637895249],[-49.879184148698954,62.546518597440276]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b82a8864-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.546518597440276],[-53.438497867018796,74.90116987959145],[-49.879184148698954,62.54651859744027]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b82ac554-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.879184148698954,62.54651859744027],[-55.780379548996194,73.9693910600256],[-49.879184148698954,62.54651859744027]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b82b4a6a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-83.66139487665285,40.28920434662732],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b82b7cb0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-84.5271261451936,37.922110991551605],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b82bab0e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-84.91442562527925,35.431604879594],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b82be3d0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-84.80840961509011,32.913394763945114],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b82c1922-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-84.21315225044333,30.46425404712083],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b82c4320-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-83.15152893803807,28.17830183337477],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b82c75fc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-81.66433726640489,26.143385984304423],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b82caa22-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-79.80872917745792,24.437707174795612],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b82cdd26-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-77.65601464941841,23.12681368494206],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b82d0b7a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-75.2889212943427,22.2610824164013],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b82d3e24-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-72.79841518238509,21.873782936315667],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b82d70f6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-70.2802050667362,21.9797989465048],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b82da04e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-67.83106434991191,22.57505631115159],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b82dd1b8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-65.54511213616586,23.636679623556844],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b82e0070-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-63.51019628709552,25.123871295190042],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b82e302c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-61.80451747758671,26.979479384137008],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b82e63c6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-60.49362398773316,29.132193912176522],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b82e9576-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-59.6278927191924,31.499287267252242],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b82ec55a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-59.24059323910677,33.98979337920985],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b82ef5c0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-59.34660924929591,36.50800349485874],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b82f25fe-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-59.94186661394271,38.957144211683016],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b82f58a8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-61.00348992634797,41.24309642542907],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b82f8b84-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-62.490681597981165,43.27801227449941],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b82fc054-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-64.34628968692813,44.983691084008214],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b82ff4e8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-66.49900421496764,46.294584573861755],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b830271a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-68.86609757004335,47.16031584240251],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b8305e2e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-71.35660368200097,47.54761532248814],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b8309308-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-73.87481379764985,47.441599312299005],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b830c8aa-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-76.32395451447412,46.846341947652206],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b830f884-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-78.60990672822018,45.784718635246946],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b8312f8e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-80.64482257729051,44.297526963613755],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b8316486-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.07750943219301,34.7106991294019],[-82.35050138679932,42.44191887466678],[-72.07750943219301,34.7106991294019]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b831dc72-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.002904025229646e-12],[-92.8571428571412,-3.423848641859516e-12],[-79.99999999999834,-3.0029040252296456e-12]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b832112e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0029040252296456e-12],[-92.6100964623255,-2.508304140210782],[-79.99999999999834,-3.0029312370061234e-12]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b8323ff0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0029312370061234e-12],[-91.87845113228614,-4.920215558983123],[-79.99999999999834,-3.0029312370061234e-12]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b83271c8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0029312370061234e-12],[-90.69032358674511,-7.143045853112531],[-79.99999999999834,-3.0029312370061234e-12]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b832a102-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0029312370061234e-12],[-89.09137290096793,-9.091372900973205],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b832d32a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-87.14304585310715,-10.690323586750253],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b833055c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-84.92021555897766,-11.878451132291142],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b8333cfc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-82.50830414020527,-12.610096462330336],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b833712c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-79.9999999999979,-12.85714285714586],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b833a3cc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-77.49169585979054,-12.610096462330164],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b833d676-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-75.07978444101819,-11.878451132290804],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b8340e52-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-72.8569541468888,-10.690323586749761],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b8343d50-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-70.90862709902812,-9.091372900972578],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b8346da2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-69.30967641325107,-7.1430458531117935],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b8349eb2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-68.12154886771019,-4.920215558982304],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b834d31e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-67.389903537671,-2.508304140209912],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b835060e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-67.14285714285548,-2.5338461487730718e-12],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b8353a20-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-67.38990353767117,2.5083041402048205],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b83569d2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-68.12154886771054,4.920215558977157],[-79.99999999999834,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b8359bd2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999834,-3.0020430585864233e-12],[-69.3096764132516,7.143045853106559],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b835cc06-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-70.90862709902879,9.091372900967226],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b835fe74-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-72.85695414688956,10.690323586744269],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b8362ffc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-75.07978444101906,11.87845113228515],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b8366666-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-77.49169585979145,12.610096462324337],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b8369974-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-79.99999999999882,12.857142857139856],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b836ccc8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-82.50830414020618,12.610096462324156],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b836fca2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-84.92021555897851,11.878451132284793],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b8373032-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-87.1430458531079,10.69032358674375],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b83766e2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-89.09137290096858,9.091372900966565],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b83794c8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-90.69032358674562,7.14304585310578],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b837c754-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-91.8784511322865,4.920215558976287],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b837f832-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-79.99999999999835,-3.0020430585864233e-12],[-92.61009646232569,2.508304140203895],[-79.99999999999835,-3.0020430585864233e-12]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b83865a6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-83.66139487665006,-40.28920434663354],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b83896d4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-82.35050138679637,-42.441918874672965],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b838c596-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-80.64482257728743,-44.29752696361981],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b838f570-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-78.60990672821698,-45.784718635252865],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b839298c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-76.32395451447086,-46.84634194765796],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b8395a1a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-73.87481379764652,-47.44159931230459],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b8398a94-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-71.35660368199764,-47.54761532249354],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b839bd16-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-68.86609757004005,-47.16031584240774],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b839ee12-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-66.4990042149644,-46.294584573866814],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b83a407e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-64.34628968692498,-44.98369108401312],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b83a8f16-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-62.49068159797813,-43.27801227450418],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b83afab4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-61.00348992634508,-41.24309642543373],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b83b3c04-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-59.941866613939986,-38.9571442116876],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b83b8e20-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-59.346609249293365,-36.508003494863274],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b83be8f2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-59.24059323910441,-33.989793379214376],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b83c2466-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-59.62789271919022,-31.499287267256797],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b83c5efe-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-60.49362398773115,-29.132193912181144],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b83c9e0a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-61.80451747758485,-26.979479384141726],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b83cf076-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-63.51019628709379,-25.12387129519488],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b83d5606-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-65.54511213616424,-23.63667962356184],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b83da67e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-67.83106434991036,-22.575056311156747],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b83dd8c4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-70.28020506673468,-21.97979894651013],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b83e0790-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-72.79841518238358,-21.873782936321177],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b83e3e4a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-75.28892129434115,-22.261082416406985],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b83e6f32-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-77.6560146494168,-23.126813684947912],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b83e9f66-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-79.80872917745623,-24.43770717480161],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b83edb2a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-81.66433726640307,-26.143385984310555],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b83f1b44-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-83.15152893803612,-28.178301833381],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b83f50dc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-84.21315225044121,-30.464254047127135],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b83f84b2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-84.80840961508783,-32.91339476395146],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b83fb5fe-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-84.91442562527678,-35.43160487960036],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b83ff00a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-72.0775094321906,-34.71069912940736],[-84.52712614519096,-37.922110991557936],[-72.0775094321906,-34.71069912940736]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b8405f18-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744418],[-57.8954816011636,-72.59863765774776],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b8408fec-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-55.78037954899103,-73.96939106002993],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b840c6b0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-53.43849786701357,-74.90116987959561],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b840fa5e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-50.95983375492723,-75.35816637895648],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b84129de-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-48.43964088450866,-75.32281843892868],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b841630e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-45.974768854427595,-74.79648446102412],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b841a170-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-43.65994131448388,-73.79939116484219],[-49.87918414869459,-62.5465185974442]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b841d1ae-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.5465185974442],[-41.58411578886732,-72.3698562865788],[-49.87918414869459,-62.5465185974442]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b8420c50-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.5465185974442],[-39.827065088391,-70.5628160499132],[-49.87918414869459,-62.5465185974442]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b8423e00-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.5465185974442],[-38.45631168610883,-68.4477139977406],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b842729e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-37.524532866543154,-66.10583231576314],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b842a1c4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-37.0675363671823,-63.6271682036768],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b842d40a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-37.102884307210104,-61.10697533325823],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b8430ab0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-37.62921828511467,-58.642103303177166],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b8433a9e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-38.626311581296605,-56.32727576323346],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b8436cee-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-40.05584645956001,-54.25145023761691],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b843a088-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-41.86288669622561,-52.49439953714059],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b843dcd8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-43.97798874839818,-51.12364613485842],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b8440dca-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-46.319870430375644,-50.19186731529275],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b8444498-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-48.79853454246198,-49.73487081593189],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b84478be-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-51.31872741288054,-49.770218755959704],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b844a730-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-53.78359944296161,-50.29655273386427],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b844db88-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-56.098426982905316,-51.293646030046204],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b8450bf8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-58.17425250852187,-52.7231809083096],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b84548de-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-59.93130320899819,-54.53022114497521],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b8457cfa-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-61.302056611280356,-56.64532319714779],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b845ad42-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-62.23383543084603,-58.98720487912525],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b845dd76-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-62.69083193020688,-61.465868991211586],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b8461728-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-62.65548399017907,-63.986061861630155],[-49.87918414869459,-62.54651859744419]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b8464a36-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.54651859744419],[-62.12915001227451,-66.45093389171122],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b8468280-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-61.13205671609257,-68.76576143165492],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b846b5a2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-49.87918414869459,-62.546518597444184],[-59.70252183782917,-70.84158695727147],[-49.87918414869459,-62.546518597444184]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b84728f2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-20.66265815308096,-90.52902041688407],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b84758c2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-18.162269440046646,-90.84631817089976],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b84789a0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-15.648023274010297,-90.669717498352],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b847b812-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-13.216540725127198,-90.006005064048],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b847e904-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-10.961262304159803,-88.88068696462383],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b848185c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-8.968857096051178,-87.33700854355472],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b8484854-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-7.3158921155952275,-85.4342924968575],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b848770c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-6.065889879997432,-83.24565913515131],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b848a678-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-5.266887274162485,-80.85521641112679],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b848d828-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-4.9495895201468,-78.35482769809248],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b8490eba-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-5.126190192694569,-75.84058153205612],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b8493f16-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-5.789902626998577,-73.40909898317302],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b849756c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-6.915220726422746,-71.15382056220564],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b849a690-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-8.458899147491863,-69.16141535409702],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b849d76e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-10.361615194189074,-67.50845037364107],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b84a0ed2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-12.550248555895257,-66.25844813804328],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b84a4668-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-14.940691279919776,-65.45944553220833],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b84a7b38-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-17.44107999295409,-65.14214777819265],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b84aa9c8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-19.955326158990434,-65.31874845074043],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b84adb6e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-22.38680870787353,-65.98246088504443],[-17.801674716500354,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b84b09ae-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.801674716500354,-77.99423297454621],[-24.64208712884092,-67.1077789844686],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b84b3672-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-26.634492336949535,-68.65145740553771],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b84b67f0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-28.287457317405483,-70.55417345223492],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b84b9716-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-29.53745955300328,-72.74280681394112],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b84bcc90-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-30.336462158838224,-75.13324953796564],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b84bfd00-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-30.653759912853907,-77.63363825099995],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b84c350e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-30.477159240306136,-80.1478844170363],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b84c63c6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-29.813446806002123,-82.57936696591939],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b84c936e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-28.688128706577952,-84.83464538688679],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b84cc4e2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-27.14445028550883,-86.82705059499541],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b84cf58e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-25.241734238811617,-88.48001557545135],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b84d25cc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[-17.80167471650035,-77.99423297454621],[-23.053100877105425,-89.73001781104915],[-17.80167471650035,-77.99423297454621]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b84da128-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509954,-77.9942329745444],[20.662658153091773,-90.52902041688199],[17.801674716509954,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b84dd2ba-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509954,-77.9942329745444],[23.053100877116215,-89.7300178110468],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b84e078a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[25.24173423882228,-88.4800155754488],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b84e3dc2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[27.144450285519326,-86.82705059499266],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b84e709e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[28.688128706588248,-84.83464538688389],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b84eaadc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[29.813446806012195,-82.57936696591638],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b84ee376-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[30.47715924031596,-80.14788441703321],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b84f2480-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[30.653759912863478,-77.63363825099684],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b84f65e4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[30.33646215884754,-75.13324953796257],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b84fa7de-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[29.537459553012354,-72.74280681393813],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b84fe758-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[28.287457317414344,-70.55417345223206],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b850335c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[26.634492336958203,-68.65145740553503],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b850713c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[24.642087128849433,-67.10777898446611],[17.801674716509957,-77.9942329745444]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b850b66a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.9942329745444],[22.386808707881926,-65.98246088504217],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b850f904-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[19.955326158998766,-65.31874845073841],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b8513748-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[17.4410799929624,-65.1421477781909],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b8517f32-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[14.940691279928119,-65.45944553220683],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b851bdd0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[12.550248555903682,-66.25844813804201],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b851fe62-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[10.361615194197626,-67.50845037364003],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b8524138-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[8.458899147500578,-69.16141535409616],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b8528fe4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[6.915220726431659,-71.15382056220494],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b852ccf2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[5.789902627007718,-73.40909898317246],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b85308ca-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[5.1261901927039535,-75.84058153205562],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b8534d1c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[4.949589520156438,-78.35482769809198],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b85381ce-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[5.266887274172378,-80.85521641112626],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b853c74c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[6.065889880007566,-83.2456591351507],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b85409dc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[7.315892115605582,-85.43429249685677],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b854491a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[8.968857096061726,-87.33700854355381],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b8547c50-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[10.961262304170504,-88.88068696462273],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b854ba8a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[13.216540725138012,-90.00600506404666],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b854fd4c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[15.64802327402118,-90.66971749835042],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b85538e8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[17.801674716509957,-77.99423297454442],[18.162269440057546,-90.84631817089793],[17.801674716509957,-77.99423297454442]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b855bf3e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414870264,-62.54651859743915],[57.89548160117263,-72.59863765774196],[49.87918414870264,-62.54651859743916]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b855fb5c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.87918414870264,-62.54651859743916],[59.70252183783805,-70.84158695726546],[49.879184148702635,-62.54651859743916]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b8563716-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743916],[61.13205671610124,-68.76576143164877],[49.879184148702635,-62.54651859743917]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b856774e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743917],[62.12915001228295,-66.45093389170496],[49.879184148702635,-62.54651859743917]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b856b7c2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743917],[62.655483990187264,-63.986061861623845],[49.879184148702635,-62.54651859743917]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b856f4a8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743917],[62.69083193021482,-61.46586899120526],[49.879184148702635,-62.54651859743917]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b8572e46-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743917],[62.233835430853716,-58.987204879118984],[49.879184148702635,-62.54651859743917]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b85771e4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743917],[61.3020566112878,-56.645323197141614],[49.879184148702635,-62.54651859743917]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b857a9ac-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743917],[59.93130320900543,-54.530221144969175],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b857de0e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[58.17425250852892,-52.72318090830375],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b858141e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[56.09842698291223,-51.29364603004056],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b85850f0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[53.78359944296842,-50.29655273385886],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b858901a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[51.318727412887306,-49.770218755954545],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b858cfa8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[48.79853454246873,-49.73487081592699],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b8591170-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[46.31987043038245,-50.19186731528809],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b8594eec-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[43.97798874840508,-51.123646134854006],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b85987e0-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[41.86288669623264,-52.49439953713638],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b859d04c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[40.05584645956721,-54.251450237612886],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b85a0abc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[38.62631158130402,-56.32727576322958],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b85a4d2e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[37.62921828512232,-58.64210330317339],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b85a8ba4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[37.102884307218005,-61.10697533325451],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b85ac7ae-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[37.06753636719045,-63.62716820367309],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b85b0598-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[37.52453286655156,-66.10583231575937],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b85b4620-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[38.45631168611747,-68.44771399773674],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b85b8608-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[39.827065088399856,-70.56281604990919],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b85bc29e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[41.58411578887636,-72.3698562865746],[49.879184148702635,-62.54651859743917]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b85c0592-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743917],[43.65994131449306,-73.79939116483779],[49.879184148702635,-62.54651859743916]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b85c42b4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743916],[45.974768854436874,-74.79648446101949],[49.879184148702635,-62.54651859743917]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b85c8058-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743917],[48.43964088451799,-75.3228184389238],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b85cbd7a-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[50.95983375493657,-75.35816637895135],[49.879184148702635,-62.54651859743917]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b85d0096-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.54651859743917],[53.43849786702285,-74.90116987959024],[49.879184148702635,-62.546518597439174]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b85d38c2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[49.879184148702635,-62.546518597439174],[55.78037954900022,-73.96939106002432],[49.879184148702635,-62.54651859743917]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b85dc13e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[83.66139487665583,-40.28920434662517],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,0,0],\"filled\":false},{\"id\":\"b85df97e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[84.52712614519652,-37.92211099154943],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false},{\"id\":\"b85e372c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[84.91442562528208,-35.43160487959181],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b85e717e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[84.80840961509287,-32.913394763942925],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b85ebabc-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[84.21315225044602,-30.46425404711866],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b85ef400-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[83.15152893804068,-28.178301833372636],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b85f3294-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[81.66433726640744,-26.14338598430234],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b85f685e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[79.80872917746042,-24.437707174793587],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b85facce-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[77.65601464942088,-23.126813684940103],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b85fe5ea-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[75.28892129434513,-22.261082416399415],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b8602c12-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[72.79841518238752,-21.873782936313855],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b86064d4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[70.28020506673863,-21.97979894650306],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b860a034-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[67.83106434991437,-22.57505631114993],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b860db76-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[65.54511213616836,-23.636679623555246],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b8612090-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[63.510196287098054,-25.123871295188493],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b8616082-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[61.8045174775893,-26.979479384135512],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b8619f48-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[60.493623987735816,-29.13219391217506],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,128,0],\"filled\":false},{\"id\":\"b861d6a2-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[59.627892719195124,-31.499287267250807],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,120,0],\"filled\":false},{\"id\":\"b8621900-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[59.24059323910957,-33.98979337920843],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,112,0],\"filled\":false},{\"id\":\"b86259f6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[59.34660924929878,-36.50800349485731],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,104,0],\"filled\":false},{\"id\":\"b86298f8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[59.94186661394564,-38.95714421168157],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,96,0],\"filled\":false},{\"id\":\"b862db4c-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[61.003489926350966,-41.243096425427595],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,88,0],\"filled\":false},{\"id\":\"b8631fda-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[62.49068159798422,-43.2780122744979],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,80,0],\"filled\":false},{\"id\":\"b8635ee6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[64.34628968693124,-44.98369108400665],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,72,0],\"filled\":false},{\"id\":\"b863a0b8-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[66.4990042149708,-46.294584573860135],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,64,0],\"filled\":false},{\"id\":\"b863e06e-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[68.86609757004653,-47.16031584240082],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,56,0],\"filled\":false},{\"id\":\"b8641ade-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[71.35660368200416,-47.54761532248637],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,48,0],\"filled\":false},{\"id\":\"b86458b4-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[73.87481379765305,-47.44159931229716],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,40,0],\"filled\":false},{\"id\":\"b8649a90-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[76.32395451447731,-46.84634194765029],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,32,0],\"filled\":false},{\"id\":\"b864e022-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[78.60990672822334,-45.78471863524496],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,24,0],\"filled\":false},{\"id\":\"b86515f6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[80.64482257729362,-44.2975269636117],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,16,0],\"filled\":false},{\"id\":\"b86551a6-969c-11e7-b6f2-22000ae83202\",\"kind\":\"line\",\"points\":[[72.07750943219582,-34.71069912940011],[82.35050138680238,-42.44191887466468],[72.07750943219582,-34.71069912940011]],\"pensize\":1,\"pencolor\":[255,8,0],\"filled\":false}]}\n<\/code><\/pre>\n\n<aside class=\"info\">\n  <h2>Hint<\/h2>\n  <p>A good strategy might be to get your code working without the gradient first - start by drawing the fireworks correctly, then add the colours at the end.<\/p>\n<\/aside>\n\n<aside class=\"info\">\n  <h2>Resetting your code<\/h2>\n  <p>If your code ends up in a state where you can't fix it anymore, you can always reset your code to the original template provided by using the Reset option in the code editor. You can find this by clicking on the little arrow near the program.blockly filename.<\/p>\n  <figure class=\"align-center\">\n    <img alt=\"Accessing the reset code option\" src=\"https:\/\/groklearning-cdn.com\/problems\/VmXdvxvtuQCXGTmEKdccUY\/reset_fireworks.png\">\n  <\/figure>\n<\/aside>",
      "options":"{}",
      "editor":1,
      "workspace":"[{\"content\":\"<xml xmlns=\\\"http:\\\/\\\/www.w3.org\\\/1999\\\/xhtml\\\">\\n  <variables>\\n    <variable type=\\\"\\\" id=\\\"X0M)pdf3R*+ihHxSmi*D\\\">blue<\\\/variable>\\n    <variable type=\\\"\\\" id=\\\"IGsbBLvx[[6b^n#l!%@_\\\">distance<\\\/variable>\\n    <variable type=\\\"\\\" id=\\\"NFjH5wW!oUT:2%\\\/Jd_de\\\">fireworks<\\\/variable>\\n    <variable type=\\\"\\\" id=\\\"S`hqE65\\\/@XSTs,_4XA3:\\\">fireworks_angle<\\\/variable>\\n    <variable type=\\\"\\\" id=\\\"CBqB5GVoy)rQ]90s*l@s\\\">green<\\\/variable>\\n    <variable type=\\\"\\\" id=\\\"A_E4H$ksJKQkYB$))9[:\\\">red<\\\/variable>\\n    <variable type=\\\"\\\" id=\\\"U:b{2D$TZRRimgzOoUbv\\\">spokes<\\\/variable>\\n    <variable type=\\\"\\\" id=\\\"*iLQM;t;2Tv(EME_iAGP\\\">spokes_angle<\\\/variable>\\n  <\\\/variables>\\n  <block type=\\\"turtle_pen\\\" id=\\\"=xW6;y|@}scPS#DL=cZ6\\\" x=\\\"10\\\" y=\\\"10\\\">\\n    <field name=\\\"STATE\\\">UP<\\\/field>\\n    <next>\\n      <block type=\\\"turtle_bgcolor_rgb\\\" id=\\\"d3Y(zt}#lV^yGSEJ(L`G\\\">\\n        <value name=\\\"RED\\\">\\n          <block type=\\\"math_number\\\" id=\\\"vR*HyZ.X,|\\\/OhEFk7bK)\\\">\\n            <field name=\\\"NUM\\\">0<\\\/field>\\n          <\\\/block>\\n        <\\\/value>\\n        <value name=\\\"GREEN\\\">\\n          <block type=\\\"math_number\\\" id=\\\"VM*E175aQ99PX_\\\/{i:z0\\\">\\n            <field name=\\\"NUM\\\">0<\\\/field>\\n          <\\\/block>\\n        <\\\/value>\\n        <value name=\\\"BLUE\\\">\\n          <block type=\\\"math_number\\\" id=\\\"}6QPs%z)xP`|h.E+0QUT\\\">\\n            <field name=\\\"NUM\\\">64<\\\/field>\\n          <\\\/block>\\n        <\\\/value>\\n        <next>\\n          <block type=\\\"variables_set\\\" id=\\\"1r\\\/sKDUn~Q}FFYeqS1U_\\\">\\n            <field name=\\\"VAR\\\" id=\\\"NFjH5wW!oUT:2%\\\/Jd_de\\\" variabletype=\\\"\\\">fireworks<\\\/field>\\n            <value name=\\\"VALUE\\\">\\n              <block type=\\\"io_ask_num\\\" id=\\\"dmrnZVUyv@O^bLJiac+t\\\">\\n                <value name=\\\"TEXT\\\">\\n                  <block type=\\\"text\\\" id=\\\"hr*khRy00A,DUh[zn9H6\\\">\\n                    <field name=\\\"TEXT\\\">How many fireworks:<\\\/field>\\n                  <\\\/block>\\n                <\\\/value>\\n              <\\\/block>\\n            <\\\/value>\\n            <next>\\n              <block type=\\\"variables_set\\\" id=\\\"zv5Da7?21lEMV|cJ)}|I\\\">\\n                <field name=\\\"VAR\\\" id=\\\"U:b{2D$TZRRimgzOoUbv\\\" variabletype=\\\"\\\">spokes<\\\/field>\\n                <value name=\\\"VALUE\\\">\\n                  <block type=\\\"math_arithmetic\\\" id=\\\"wUI6YfI?k|+p3g$!I_tD\\\">\\n                    <field name=\\\"OP\\\">MINUS<\\\/field>\\n                    <value name=\\\"A\\\">\\n                      <block type=\\\"math_number\\\" id=\\\"-W~aO[VauaZD#w$HE_Z[\\\">\\n                        <field name=\\\"NUM\\\">60<\\\/field>\\n                      <\\\/block>\\n                    <\\\/value>\\n                    <value name=\\\"B\\\">\\n                      <block type=\\\"math_arithmetic\\\" id=\\\"GgH~7q-Hd+FZw*05FQVV\\\">\\n                        <field name=\\\"OP\\\">MULTIPLY<\\\/field>\\n                        <value name=\\\"A\\\">\\n                          <block type=\\\"variables_get\\\" id=\\\"E-gaC*w?T_Uiyya$]UPA\\\">\\n                            <field name=\\\"VAR\\\" id=\\\"NFjH5wW!oUT:2%\\\/Jd_de\\\" variabletype=\\\"\\\">fireworks<\\\/field>\\n                          <\\\/block>\\n                        <\\\/value>\\n                        <value name=\\\"B\\\">\\n                          <block type=\\\"math_number\\\" id=\\\"e=Wd|`gN|;t4@G^WG-lQ\\\">\\n                            <field name=\\\"NUM\\\">2<\\\/field>\\n                          <\\\/block>\\n                        <\\\/value>\\n                      <\\\/block>\\n                    <\\\/value>\\n                  <\\\/block>\\n                <\\\/value>\\n                <next>\\n                  <block type=\\\"variables_set\\\" id=\\\"_s2A1GREb?p`NdBJw=29\\\">\\n                    <field name=\\\"VAR\\\" id=\\\"S`hqE65\\\/@XSTs,_4XA3:\\\" variabletype=\\\"\\\">fireworks_angle<\\\/field>\\n                    <value name=\\\"VALUE\\\">\\n                      <block type=\\\"math_arithmetic\\\" id=\\\",z4SJr6?+i$5Ey(84(Ko\\\">\\n                        <field name=\\\"OP\\\">DIVIDE<\\\/field>\\n                        <value name=\\\"A\\\">\\n                          <block type=\\\"math_number\\\" id=\\\"9G;#yt]SgGhFrH{6._Y[\\\">\\n                            <field name=\\\"NUM\\\">360<\\\/field>\\n                          <\\\/block>\\n                        <\\\/value>\\n                        <value name=\\\"B\\\">\\n                          <block type=\\\"variables_get\\\" id=\\\"rwbkO}ou`5WC)7e#z0_O\\\">\\n                            <field name=\\\"VAR\\\" id=\\\"NFjH5wW!oUT:2%\\\/Jd_de\\\" variabletype=\\\"\\\">fireworks<\\\/field>\\n                          <\\\/block>\\n                        <\\\/value>\\n                      <\\\/block>\\n                    <\\\/value>\\n                    <next>\\n                      <block type=\\\"variables_set\\\" id=\\\"7V[-fLA,[u~ouaF*P6z`\\\">\\n                        <field name=\\\"VAR\\\" id=\\\"*iLQM;t;2Tv(EME_iAGP\\\" variabletype=\\\"\\\">spokes_angle<\\\/field>\\n                        <value name=\\\"VALUE\\\">\\n                          <block type=\\\"math_arithmetic\\\" id=\\\"p{\\\/@g7eeG$Y[e{D7.}q0\\\">\\n                            <field name=\\\"OP\\\">DIVIDE<\\\/field>\\n                            <value name=\\\"A\\\">\\n                              <block type=\\\"math_number\\\" id=\\\"yva=mNlUYOL*5)Ukz{I1\\\">\\n                                <field name=\\\"NUM\\\">360<\\\/field>\\n                              <\\\/block>\\n                            <\\\/value>\\n                            <value name=\\\"B\\\">\\n                              <block type=\\\"variables_get\\\" id=\\\"5SL?{Pw)=B+4[c$[P8jr\\\">\\n                                <field name=\\\"VAR\\\" id=\\\"U:b{2D$TZRRimgzOoUbv\\\" variabletype=\\\"\\\">spokes<\\\/field>\\n                              <\\\/block>\\n                            <\\\/value>\\n                          <\\\/block>\\n                        <\\\/value>\\n                        <next>\\n                          <block type=\\\"variables_set\\\" id=\\\"_*P5@N;16ZA|{oyj=N\\\/G\\\">\\n                            <field name=\\\"VAR\\\" id=\\\"IGsbBLvx[[6b^n#l!%@_\\\" variabletype=\\\"\\\">distance<\\\/field>\\n                            <value name=\\\"VALUE\\\">\\n                              <block type=\\\"math_arithmetic\\\" id=\\\"[AP]-+HQTW-ZCXy7ede=\\\">\\n                                <field name=\\\"OP\\\">DIVIDE<\\\/field>\\n                                <value name=\\\"A\\\">\\n                                  <block type=\\\"math_number\\\" id=\\\"_T4pn}Yw%?3$kv%7zBmd\\\">\\n                                    <field name=\\\"NUM\\\">180<\\\/field>\\n                                  <\\\/block>\\n                                <\\\/value>\\n                                <value name=\\\"B\\\">\\n                                  <block type=\\\"variables_get\\\" id=\\\"tFduMl,a$AUR.Jzte\\\/y;\\\">\\n                                    <field name=\\\"VAR\\\" id=\\\"NFjH5wW!oUT:2%\\\/Jd_de\\\" variabletype=\\\"\\\">fireworks<\\\/field>\\n                                  <\\\/block>\\n                                <\\\/value>\\n                              <\\\/block>\\n                            <\\\/value>\\n                            <next>\\n                              <block type=\\\"turtle_speed\\\" id=\\\"~fJ@7;^v1wBdrAY#Zo:@\\\">\\n                                <field name=\\\"SPEED\\\">fastest<\\\/field>\\n                                <next>\\n                                  <block type=\\\"loops_repeat_ext\\\" id=\\\"_kpLI4ZG:M~dx7`fUPmI\\\">\\n                                    <value name=\\\"TIMES\\\">\\n                                      <block type=\\\"variables_get\\\" id=\\\"V*ckRV~U!~Qp{ban~z#z\\\">\\n                                        <field name=\\\"VAR\\\" id=\\\"NFjH5wW!oUT:2%\\\/Jd_de\\\" variabletype=\\\"\\\">fireworks<\\\/field>\\n                                      <\\\/block>\\n                                    <\\\/value>\\n                                  <\\\/block>\\n                                <\\\/next>\\n                              <\\\/block>\\n                            <\\\/next>\\n                          <\\\/block>\\n                        <\\\/next>\\n                      <\\\/block>\\n                    <\\\/next>\\n                  <\\\/block>\\n                <\\\/next>\\n              <\\\/block>\\n            <\\\/next>\\n          <\\\/block>\\n        <\\\/next>\\n      <\\\/block>\\n    <\\\/next>\\n  <\\\/block>\\n<\\\/xml>\",\"path\":\"program.blockly\",\"is_static\":false,\"undeletable\":true,\"unrenamable\":true}]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_goto\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Staircase",
      "notes":"",
      "updated_at":"2017-09-11T01:21:22.310868+00:00",
      "label":"aca-blockly-logo-staircase",
      "content":"<p>\n  Write a program that draws a staircase! You can think of a staircase as a series of individual rectangles, where each rectangle gets a bit bigger than the one before it.\n<\/p>\n\n<p>\n  The user will be asked for the height of the first step then the width of all steps. Your program should use those input values (in turtle steps) to draw the steps. After the first step, each subsequent step will be 20 turtle steps higher than the last one. It should draw a total of 4 steps.\n<\/p>\n\n<p>\n  The steps will go up and to the right of the screen, as shown in the example below.\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Starting height: <\/o><i>10<\/i>\n<o>Step width: <\/o><i>30<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"9bb5191e-861c-11e7-928f-22000afd18d3\"]\n[\"create_shape\",\"9bb52a44-861c-11e7-928f-22000afd18d3\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"filled\":true,\"pensize\":1,\"pencolor\":[0,0,0],\"fillcolor\":[0,0,0]}]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",10]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",70]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",70]\n[\"left\",1.5707963267948966]\n[\"forward\",30]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  Make sure you test different heights and widths so you are confident your code is correct.\n<\/p>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_goto\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":""
    },
    {
      "language":1,
      "title":"Fireworks playground",
      "notes":"<p>\n  This is just a copy of the solution from the previous fireworks display question - you can always use this as a starting point for your own, but there's no wrong answer in the playground!\n<\/p>",
      "updated_at":"2017-09-11T07:02:21.321000+00:00",
      "label":"aca-blockly-logo-fireworks-playground",
      "content":"<p>\n  Why not have a go at creating your very own fireworks display! You can write whatever code you like in this question. Consider it your personal fireworks playground!\n<\/p>\n\n<aside class=\"info\">\n  <h2>Save or submit your code!<\/h2>\n  <p>There are no points to be earned for this question, so you can submit whatever code you like. Make sure you save programs that you want to keep! <\/p>\n<\/aside>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"math_random_int\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_goto\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":"<p>\n  This is just a copy of the solution from the previous fireworks display question - you can always use this as a starting point for your own, but there's no wrong answer in the playground!\n<\/p>"
    },
    {
      "language":1,
      "title":"Thickening spiral",
      "notes":"",
      "updated_at":"2017-09-11T01:21:12.157462+00:00",
      "label":"aca-blockly-logo-thickening-spiral",
      "content":"<p>\n  <a href=\"https:\/\/en.wikipedia.org\/wiki\/Spiral\" target=\"_blank\">Spirals<\/a> are common patterns in both the natural and man-made environment. Write a program that draws a spiral that gets thicker as it gets bigger.\n<\/p>\n\n<p>\n  Your program should ask the user to specify a starting size and thickness for the spiral, in that order. It should then draw the spiral, with the arms increasing in size by 5 turtle steps every time the turtle turns left. Each time the turtle completes one revolution and is facing to the right again, it should increase the thickness of the line by 1. It should do 5 complete revolutions.\n<\/p>\n\n<p>\n  The spiral will start with the turtle moving to the right and turning left, as shown in the example below.\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Starting size: <\/o><i>10<\/i>\n<o>Starting thickness: <\/o><i>1<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-animation\" data-io=\"false\"><code data-lang=\"logo\">\n[\"begin_animation\",400,300,10,\"504760ae-8635-11e7-8933-22000a15494e\"]\n[\"create_shape\",\"50477580-8635-11e7-8933-22000a15494e\",[[0,16],[-2,14],[-1,10],[-4,7],[-7,9],[-9,8],[-6,5],[-7,1],[-5,-3],[-8,-6],[-6,-8],[-4,-5],[0,-7],[4,-5],[6,-8],[8,-6],[5,-3],[7,1],[6,5],[9,8],[7,9],[4,7],[1,10],[2,14]],{\"pencolor\":[0,0,0],\"filled\":true,\"pensize\":1,\"fillcolor\":[0,0,0]}]\n[\"forward\",10]\n[\"left\",1.5707963267948966]\n[\"forward\",15]\n[\"left\",1.5707963267948966]\n[\"forward\",20]\n[\"left\",1.5707963267948966]\n[\"forward\",25]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"fillcolor\":[0,0,0],\"shown\":true,\"pensize\":2,\"tilt\":0.0,\"heading\":0.0,\"filled\":false,\"pencolor\":[0,0,0],\"speed\":3,\"pendown\":true}]\n[\"forward\",30]\n[\"left\",1.5707963267948966]\n[\"forward\",35]\n[\"left\",1.5707963267948966]\n[\"forward\",40]\n[\"left\",1.5707963267948966]\n[\"forward\",45]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pensize\":3}]\n[\"forward\",50]\n[\"left\",1.5707963267948966]\n[\"forward\",55]\n[\"left\",1.5707963267948966]\n[\"forward\",60]\n[\"left\",1.5707963267948966]\n[\"forward\",65]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pensize\":4}]\n[\"forward\",70]\n[\"left\",1.5707963267948966]\n[\"forward\",75]\n[\"left\",1.5707963267948966]\n[\"forward\",80]\n[\"left\",1.5707963267948966]\n[\"forward\",85]\n[\"left\",1.5707963267948966]\n[\"pen\",{\"pensize\":5}]\n[\"forward\",90]\n[\"left\",1.5707963267948966]\n[\"forward\",95]\n[\"left\",1.5707963267948966]\n[\"forward\",100]\n[\"left\",1.5707963267948966]\n[\"forward\",105]\n[\"left\",1.5707963267948966]\n[\"end_animation\"]\n<\/code><\/pre>\n\n<p>\n  Here's another example, with a longer starting arm and thicker pen size:\n<\/p>\n\n<pre class=\"js-terminal\"><code data-lang=\"py3\"><o>Starting size: <\/o><i>20<\/i>\n<o>Starting thickness: <\/o><i>5<\/i>\n<o><\/o>\n<\/code><\/pre>\n<pre class=\"js-logo-final\" data-io=\"false\"><code data-lang=\"logo\">\n{\"width\":400,\"height\":300,\"bgcolor\":[255,255,255],\"zerox\":200,\"zeroy\":150,\"scalex\":1.0,\"scaley\":1.0,\"shapes\":[{\"id\":\"93d88140-8635-11e7-9920-22000afd051d\",\"kind\":\"line\",\"points\":[[0.0,0.0],[20.0,0.0],[20.0,25.0],[-10.0,25.000000000000004],[-10.000000000000007,-9.999999999999996]],\"pencolor\":[0,0,0],\"pensize\":5,\"filled\":false},{\"id\":\"93d8eee6-8635-11e7-9920-22000afd051d\",\"kind\":\"line\",\"points\":[[-10.000000000000007,-9.999999999999996],[29.999999999999993,-9.999999999999996],[29.999999999999996,35.0],[-20.000000000000004,35.00000000000001],[-20.000000000000014,-19.999999999999993]],\"pencolor\":[0,0,0],\"pensize\":6,\"filled\":false},{\"id\":\"93d956f6-8635-11e7-9920-22000afd051d\",\"kind\":\"line\",\"points\":[[-20.000000000000014,-19.999999999999993],[39.999999999999986,-19.999999999999993],[39.99999999999999,45.00000000000001],[-30.000000000000007,45.000000000000014],[-30.00000000000002,-29.999999999999986]],\"pencolor\":[0,0,0],\"pensize\":7,\"filled\":false},{\"id\":\"93d9c10e-8635-11e7-9920-22000afd051d\",\"kind\":\"line\",\"points\":[[-30.00000000000002,-29.999999999999986],[49.99999999999998,-29.999999999999986],[49.999999999999986,55.000000000000014],[-40.000000000000014,55.00000000000003],[-40.00000000000003,-39.99999999999997]],\"pencolor\":[0,0,0],\"pensize\":8,\"filled\":false},{\"id\":\"93da27fc-8635-11e7-9920-22000afd051d\",\"kind\":\"line\",\"points\":[[-40.00000000000003,-39.99999999999997],[59.99999999999997,-39.99999999999997],[59.99999999999998,65.00000000000003],[-50.00000000000002,65.00000000000004],[-50.00000000000004,-49.99999999999996]],\"pencolor\":[0,0,0],\"pensize\":9,\"filled\":false}]}\n<\/code><\/pre>\n\n<p>\n  Make sure you test different starting parameters so you are confident your code is correct.\n<\/p>\n",
      "options":"{}",
      "editor":1,
      "workspace":"[]",
      "concepts":[

      ],
      "choices":"",
      "blockly_blocks":"[\"text\",\"math_number\",\"math_angle_picker\",\"math_arithmetic\",\"io_ask_text\",\"io_ask_num\",\"loops_repeat_ext\",\"turtle_forward\",\"turtle_backward\",\"turtle_turn_simple\",\"turtle_turn\",\"turtle_turn_picker\",\"turtle_pen\",\"turtle_colormode_dropdown\",\"turtle_pencolor_dropdown\",\"turtle_pencolor_picker\",\"turtle_pencolor_rgb\",\"turtle_pencolor_text\",\"turtle_pensize\",\"turtle_bgcolor_dropdown\",\"turtle_bgcolor_picker\",\"turtle_bgcolor_rgb\",\"turtle_bgcolor_text\",\"turtle_goto\",\"turtle_fill_dropdown\",\"turtle_fillcolor_picker\",\"turtle_fillcolor_rgb\",\"turtle_fill_text\",\"turtle_speed\"]",
      "teacher_notes":""
    }
  ],
  "lead_text":"Explore geometry through programming, and draw intricate patterns and explosive fireworks!",
  "short_title":"DT 7 Blockly + Geometry",
  "export_version":1,
  "slug":"aca-dt-7-bk-geometry",
  "outline":""
}